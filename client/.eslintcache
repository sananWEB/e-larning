[{"D:\\MERN stack\\sh1\\client\\src\\index.js":"1","D:\\MERN stack\\sh1\\client\\src\\App.js":"2","D:\\MERN stack\\sh1\\client\\src\\reportWebVitals.js":"3","D:\\MERN stack\\sh1\\client\\src\\components\\Home.js":"4","D:\\MERN stack\\sh1\\client\\src\\components\\Jobs.js":"5","D:\\MERN stack\\sh1\\client\\src\\components\\Intership.js":"6","D:\\MERN stack\\sh1\\client\\src\\components\\Signin.js":"7","D:\\MERN stack\\sh1\\client\\src\\components\\Signup.js":"8","D:\\MERN stack\\sh1\\client\\src\\components\\Courses.js":"9","D:\\MERN stack\\sh1\\client\\src\\components\\mobilenav.js":"10","D:\\MERN stack\\sh1\\client\\src\\components\\Filters.js":"11","D:\\MERN stack\\sh1\\client\\src\\components\\Cards.js":"12","D:\\MERN stack\\sh1\\client\\src\\components\\CourseCard.js":"13","D:\\MERN stack\\sh1\\client\\src\\components\\Account.js":"14","D:\\MERN stack\\sh1\\client\\src\\components\\IntershipsCards.js":"15","D:\\MERN stack\\sh1\\client\\src\\components\\about.js":"16","D:\\MERN stack\\sh1\\client\\src\\components\\Mobiledown.js":"17","D:\\MERN stack\\sh1\\client\\src\\components\\Segisstion.js":"18","D:\\MERN stack\\sh1\\client\\src\\components\\Segueestion2.js":"19","D:\\MERN stack\\sh1\\client\\src\\components\\Segisstion3.js":"20","D:\\MERN stack\\sh1\\client\\src\\components\\Customhook.js":"21"},{"size":500,"mtime":1609479979629,"results":"22","hashOfConfig":"23"},{"size":2414,"mtime":1613807684365,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1609479979636,"results":"25","hashOfConfig":"23"},{"size":14936,"mtime":1613916545165,"results":"26","hashOfConfig":"23"},{"size":8418,"mtime":1613837590257,"results":"27","hashOfConfig":"23"},{"size":8431,"mtime":1613837633291,"results":"28","hashOfConfig":"23"},{"size":5000,"mtime":1609651632205,"results":"29","hashOfConfig":"23"},{"size":6501,"mtime":1609903253335,"results":"30","hashOfConfig":"23"},{"size":7229,"mtime":1613837667452,"results":"31","hashOfConfig":"23"},{"size":7078,"mtime":1613914810280,"results":"32","hashOfConfig":"23"},{"size":3127,"mtime":1612780357269,"results":"33","hashOfConfig":"23"},{"size":2362,"mtime":1612781986339,"results":"34","hashOfConfig":"23"},{"size":2324,"mtime":1612798763769,"results":"35","hashOfConfig":"23"},{"size":64636,"mtime":1610434369323,"results":"36","hashOfConfig":"23"},{"size":2137,"mtime":1610370263941,"results":"37","hashOfConfig":"23"},{"size":850,"mtime":1609929854292,"results":"38","hashOfConfig":"23"},{"size":1610,"mtime":1613910324769,"results":"39","hashOfConfig":"23"},{"size":1832,"mtime":1610529494997,"results":"40","hashOfConfig":"23"},{"size":1814,"mtime":1612184397918,"results":"41","hashOfConfig":"23"},{"size":1908,"mtime":1610529488655,"results":"42","hashOfConfig":"23"},{"size":61,"mtime":1612709390378,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1kgmx21",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":54,"fixableErrorCount":0,"fixableWarningCount":4,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"46"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\MERN stack\\sh1\\client\\src\\index.js",[],["101","102"],"D:\\MERN stack\\sh1\\client\\src\\App.js",["103","104"],"import React,{createContext,useState,useEffect} from 'react'\nimport \"./App.css\"\nimport { createMuiTheme,ThemeProvider, responsiveFontSizes } from '@material-ui/core';\nimport {Navbar,Search,Cards} from \"./components/Home\"\nimport Jobs from \"./components/Jobs\"\nimport Intership from \"./components/Intership\"\nimport SignIn from \"./components/Signin\"\nimport SignUp from \"./components/Signup\"\nimport Courses from \"./components/Courses\"\nimport axios from \"axios\"\nimport SimpleBottomNavigation from \"./components/Mobiledown\"\nimport About from \"./components/about\"\nimport { BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport {Account} from \"./components/Account\"\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#334667',\n      main: '#011842',\n      dark: '#00102e',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#005a2c',\n      main: '#008140',\n      dark: '#339a66',\n      contrastText: '#fff',\n    },\n  },\n  shape:\"0px\",\n // shadows:[\"none\"]\n});\n\n\n\ntheme = responsiveFontSizes(theme);\nexport const Context=createContext(null)\nfunction App() {\n  const [userdata, setuserdata] = useState({\n    email: \"\",\n        id: \"\",\n        companyname:\"\",\n        password: \"\",\n        img:\"\",\n        login:false,\n  })\n\n  useEffect( ()=>{\n   \n      if(!localStorage.getItem(\"Ltoken\")){\n       localStorage.setItem(\"Ltoken\",\"\")\n      }\nelse{\n  axios.get(\"/getdata\",{headers:{token:localStorage.getItem(\"Ltoken\")}})\n  .then(res=>{\n    //console.log(res.data)\n    setuserdata({\n    \n      email: res.data.email,\n      id: res.data.id,\n      companyname: res.data.companyname,\n      password: res.data.password,\n      login:res.data.login,\n      img:res.data.img,\n    });\n    })\n}\n},[])\n  \n  return (\n    <Router>\n    <ThemeProvider theme={theme}>\n     \n<Context.Provider value={{userdata,setuserdata}}>\n\n  <SimpleBottomNavigation/>\n       <Route exact path=\"/\">\n    <Navbar/>\n    <Search name=\"FIND A JOB YOU LOVE.\"/>\n    <Cards/>\n    </Route>\n\n    <Route path=\"/jobs/:id\">\n    <Jobs/>\n    </Route>\n\n    <Route path=\"/interships/:id\">\n<Intership/>\n</Route>\n\n<Route path=\"/signin\">\n<SignIn/>\n</Route>\n<Route path=\"/signup\">\n<SignUp/>\n</Route>\n\n<Route path=\"/courses/:id\">\n<Courses/>\n</Route>\n\n\n<Route  path=\"/account\">\n<Account/>\n</Route>\n\n<Route  path=\"/aboutus\">\n<About/>\n</Route>\n\n\n</Context.Provider>\n    </ThemeProvider>\n    </Router>\n  )\n}\n\nexport default App\n","D:\\MERN stack\\sh1\\client\\src\\reportWebVitals.js",[],"D:\\MERN stack\\sh1\\client\\src\\components\\Home.js",["105","106","107","108","109","110","111","112","113","114","115","116","117"],"D:\\MERN stack\\sh1\\client\\src\\components\\Jobs.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"import React,{useEffect,useState,useContext} from 'react'\r\nimport {Navbar,Search} from \"./Home\"\r\n// import Filters from \"./Filters\"\r\nimport { BrowserRouter as Router, Switch,useRouteMatch,useParams, Route, Link as LLink} from \"react-router-dom\";\r\nimport {Link,FormControl,Box,InputLabel,Select,Breadcrumbs,Grid,Avatar,Paper,Typography,Container, Button } from '@material-ui/core';\r\nimport Ccard from \"./Cards\"\r\nimport axios from \"axios\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCalendarAlt,faBriefcase,faMoneyBillWave,faClock} from '@fortawesome/free-solid-svg-icons'\r\nimport Segisstion from \"./Segisstion\"\r\n\r\nfunction Breadcrumb(){\r\n\r\n\r\n    return (\r\n        <Breadcrumbs style={{display:\"flex\",justifyContent:\"center\",margin:\"10px 0px 10px 0px\"}}>    \r\n           <Typography component={LLink} to=\"/\" style={{textDecoration:\"none\"}} color=\"inherit\">Home</Typography>\r\n      <Typography color=\"textPrimary\">\r\n        jobs\r\n      </Typography>\r\n    \r\n    </Breadcrumbs> \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Jobs() {\r\n\r\n  var params=useParams()\r\n  \r\n \r\n  var [state, setState] = useState({\r\n   jobs: \"\",\r\n   salary:\"\",\r\n   timing:\"\",\r\n });\r\n\r\n  const path =useRouteMatch().path\r\n\r\n  const [jobs, setjobs] = useState([])\r\n  \r\n  useEffect(async()=>{\r\n\r\n    if(params.id==\"all\"){\r\n      await  axios.get(\"/getjobs\").then((ress)=>{setjobs(ress.data)})\r\n   \r\n    }\r\n  \r\n\r\n    else{\r\n     \r\n  await axios.get(\"/getjobs\").then((ress)=>{setjobs(ress.data.filter((i)=>\r\n    i.catogary.toLowerCase().includes(params.id.toLowerCase())\r\n         ))})\r\n\r\n   \r\n    }\r\n    \r\n  },[params.id])\r\n\r\n//console.log(jobs)\r\n\r\n\r\n\r\n  // console.log(jobs.map((i)=>\r\n  // console.log(i.catogary)\r\n  // ))\r\n  \r\n\r\n\r\n\r\n\r\n  var searchbtn=async()=>{\r\n\r\n    \r\n\r\n  //   console.log(jobs.filter((i)=>\r\n  //   i.catogary==state.jobs && i.salary==state.salary && i.timing==state.timing\r\n  //  ))\r\nawait axios.get(\"/getjobs\").then((ress)=>{setjobs(ress.data.filter((i)=>\r\n  i.catogary==state.jobs && i.salary==state.salary && i.timing==state.timing\r\n ))})\r\n //console.log(jobs)\r\n  }\r\n\r\n  var props=[{\r\n    Jobs:[\"Jobs\",\"Web Developer\",\"mobile Developer\",\"Desktop Developer\",\r\n\"SEO\",\"Graphic Desiger\",\"Content Writer\"],\r\nsalary:[\"Salary\",\"10k-20k\",\"20k-40k\",\"50k-70k\",\"80-100k\",\"110-140k\",\"150k-180k\"],\r\ntiming:[\"Timing\",\"fulltime\",\"halftime\"]\r\n\r\n}]\r\n   \r\n    return (\r\n        <>\r\n        <Navbar/>\r\n        <Route exact path={`${useRouteMatch().path}`}>\r\n          \r\n          \r\n          <Search name=\"ALL JOBS\"/> \r\n          <Container >\r\n        <Breadcrumb/>\r\n        \r\n\r\n\r\n          \r\n         <Grid container spacing={1}>\r\n\r\n<Grid item xs={12} sm={3} md={3} >\r\n<FormControl fullWidth variant=\"outlined\" >\r\n<InputLabel >{props[0].Jobs[0]}</InputLabel>\r\n<Select\r\n native\r\n value={state.jobs}\r\n onChange={(e)=>{\r\n\r\n   setState({\r\n     ...state,\r\n     [e.target.name]:e.target.value\r\n   })\r\n }}\r\n label=\"jobs\"\r\n inputProps={{\r\n   name: 'jobs',\r\n  \r\n }}\r\n>\r\n <option aria-label=\"None\" value=\"\" />\r\n\r\n {props[0].Jobs.slice(1).map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n )}\r\n \r\n \r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n\r\n\r\n\r\n<Grid item xs={12} sm={3} md={3} >\r\n<FormControl fullWidth variant=\"outlined\" >\r\n<InputLabel >{props[0].salary[0]}</InputLabel>\r\n<Select\r\n native\r\n value={state.salary}\r\n onChange={(e)=>{\r\n\r\n   setState({\r\n     ...state,\r\n     [e.target.name]:e.target.value\r\n   })\r\n }}\r\n label=\"salary\"\r\n inputProps={{\r\n   name: 'salary',\r\n  \r\n }}\r\n>\r\n <option aria-label=\"None\" value=\"\" />\r\n\r\n {props[0].salary.slice(1).map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n )}\r\n \r\n \r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n\r\n\r\n<Grid item xs={12} sm={3} md={3} >\r\n<FormControl fullWidth variant=\"outlined\" >\r\n<InputLabel >{props[0].timing[0]}</InputLabel>\r\n<Select\r\n native\r\n value={state.timing}\r\n onChange={(e)=>{\r\n\r\n   setState({\r\n     ...state,\r\n     [e.target.name]:e.target.value\r\n   })\r\n }}\r\n label=\"timing\"\r\n inputProps={{\r\n   name: 'timing',\r\n  \r\n }}\r\n>\r\n <option aria-label=\"None\" value=\"\" />\r\n\r\n {props[0].timing.slice(1).map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n )} \r\n \r\n \r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n<Grid style={{display:\"flex\",justifyContent:\"center\"}} item xs={12} sm={3} md={3} >\r\n\r\n{state.jobs.length>0 && state.salary.length>0 && state.timing.length>0?<Button   onClick={()=>{searchbtn(state)}} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">Search</Button>\r\n:\r\n\r\n<Button disabled   size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">Search</Button>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n</Grid>  \r\n\r\n\r\n          <br/>\r\n          <Ccard data={jobs} />\r\n          </Container>\r\n          </Route>\r\n\r\n          <Route exact path={`${useRouteMatch().path}/:id`}>\r\n          <Jobpage data={jobs} path={path}  />\r\n          </Route>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Jobs\r\n\r\n\r\n\r\nfunction Jobpage(props) {\r\n\r\n\r\n  console.log(props.filtersearch)\r\n  const jobid=useParams().id\r\n    const arry=props.data;\r\n\r\n\r\n\r\n\r\n\r\n    const jobdata=arry.find((i)=>{\r\n      return i._id==jobid;\r\n    })  \r\n//console.log(jobdata.catogary)\r\n\r\n const [similar, setsimilar] = useState([])\r\nuseEffect(()=>{\r\n\r\n  axios.get(\"/getjobs\").then((ress)=>{\r\n    setsimilar(ress.data.filter((i)=>\r\n            \r\n    jobdata.catogary==i.catogary\r\n    ))\r\n  \r\n  \r\n  })\r\n},[])\r\n\r\n\r\n  \r\n\r\n const filterarray= similar.filter((i)=>{\r\n  \r\n\r\n    return jobid!==i._id\r\n  \r\n  })\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      \r\n      \r\n      <Container maxWidth=\"xl\" >\r\n    <Typography component=\"div\" style={{marginTop:\"10px\", height: 'calc(100vh - 64px)' }}>\r\n      <Breadcrumb2 id={jobdata.jobtitle}/>\r\n<Grid container spacing={1} >\r\n  <Grid item xs={12} sm={12} md={9} >\r\n<Paper style={{height:\"auto\",padding:\"20px\"}}>\r\n\r\n  <div style={{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\r\n\r\n\r\n    <div>\r\n<Typography variant=\"h5\" style={{fontWeight:\"bold\"}}>{jobdata.jobtitle}</Typography>\r\n<Typography color=\"textSecondary\" variant=\"body2\" >{jobdata.companyname} {jobdata.city} </Typography>\r\n</div>\r\n<Avatar  src={jobdata.img}/>\r\n</div>\r\n\r\n\r\n<div style={{display:\"flex\",marginTop:\"5px\"}}>\r\n<Typography title=\"last Date\" color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faCalendarAlt}/>&nbsp;&nbsp;{jobdata.apply}</Typography>\r\n\r\n<Typography title=\"Experience\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faBriefcase}/>&nbsp;&nbsp;{jobdata.experience}</Typography>\r\n\r\n<Typography title=\"Salary\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faMoneyBillWave}/>&nbsp;&nbsp;{jobdata.salary}</Typography>\r\n   </div>\r\n   <br/>\r\n   <hr/>\r\n   <br/>\r\n<Typography varient=\"h6\" style={{fontWeight:\"bold\"}}>Job Description:-</Typography>\r\n   <Typography color=\"textsecondary\" variant=\"body1\">{jobdata.discription}</Typography>\r\n<br/>\r\n<Typography varient=\"h6\" style={{fontWeight:\"bold\"}}>Skills:-</Typography>\r\n   <Typography >{jobdata.skills}</Typography>\r\n   <br/>\r\n\r\n   <span>\r\n\r\n\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>Gender:-</b> {jobdata.gender}</Typography>\r\n\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>Education:-</b> {jobdata.education}</Typography>\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>Position:-</b> {jobdata.position}</Typography>\r\n\r\n\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>experience:-</b> {jobdata.experience}</Typography>\r\n\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>Timing:-</b> {jobdata.timing}</Typography>\r\n   </span>\r\n<br/>\r\n<br/>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button variant=\"contained\" color=\"secondary\">Apply Now</Button>\r\n</div>\r\n</Paper>\r\n\r\n  </Grid>\r\n\r\n\r\n\r\n  <Grid item xs={12} sm={12} md={3}>\r\n\r\n    <Segisstion arrry={filterarray}  path2={props.path}/>\r\n  </Grid>\r\n</Grid>\r\n        </Typography>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction Breadcrumb2(props){\r\n  return (\r\n      <Breadcrumbs style={{display:\"flex\",justifyContent:\"center\",margin:\"10px 0px 10px 0px\"}}>    \r\n         <Typography component={LLink} to=\"/\" style={{textDecoration:\"none\"}} color=\"inherit\">Home</Typography>\r\n    <Typography component={LLink} to=\"/jobs\" style={{textDecoration:\"none\"}}  color=\"inherit\">Jobs</Typography>\r\n    <Typography  color=\"textPrimary\">{props.id}</Typography>\r\n  \r\n  </Breadcrumbs> \r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","D:\\MERN stack\\sh1\\client\\src\\components\\Intership.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],"import React,{useEffect,useState} from 'react'\r\nimport {Navbar,Search} from \"./Home\"\r\nimport Filters from \"./Filters\"\r\nimport axios from \"axios\"\r\nimport Segisstion2 from \"./Segueestion2\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCalendarAlt,faBriefcase,faMoneyBillWave,faClock} from '@fortawesome/free-solid-svg-icons'\r\nimport {Link,FormControl,Box,InputLabel,Select,Breadcrumbs,Grid,Avatar,Paper,Typography,Container, Button } from '@material-ui/core';\r\nimport { BrowserRouter as Router, useParams,Switch,useRouteMatch, Route, Link as LLink} from \"react-router-dom\";\r\nimport IntershipsCards from \"./IntershipsCards\"\r\n\r\nfunction Breadcrumb(){\r\n    return (\r\n        <Breadcrumbs style={{display:\"flex\",justifyContent:\"center\",margin:\"10px 0px 10px 0px\"}}>    \r\n           <Typography component={LLink} to=\"/\" style={{textDecoration:\"none\"}} color=\"inherit\">Home</Typography>\r\n      <Typography color=\"textPrimary\">Interships</Typography>\r\n    \r\n    </Breadcrumbs> \r\n    )\r\n}\r\n\r\n\r\n\r\nfunction Intership() {\r\n\r\n\r\n  const params=useParams()\r\n  //console.log(params.id)\r\n  const [jobs, setjobs] = useState([])\r\n  useEffect(async()=>{\r\n\r\n    if(params.id==\"all\"){\r\n      await  axios.get(\"/getintership\").then((ress)=>{setjobs(ress.data)})\r\n    }\r\n    else{\r\n      await axios.get(\"/getintership\").then((ress)=>{setjobs(ress.data.filter((i)=>\r\n        i.catogary.toLowerCase().includes(params.id.toLowerCase())\r\n             ))})\r\n    \r\n    }\r\n    \r\n   // await axios.get(\"/getintership\").then((ress)=>{setjobs(ress.data)})\r\n  },[params.id])\r\n\r\n\r\n  const path=useRouteMatch().path;\r\n  const url=useRouteMatch().url;\r\n\r\n\r\n  const props=[{\r\n    Jobs:[\"All Intership\",\"Web Developer\",\"mobile Developer\",\"Desktop Developer\",\r\n    \"SEO\",\"Graphic Desiger\",\"Content Writer\"],\r\nsalary:[\"Payment\",\"Paid\",\"UnPaid\"],\r\ntiming:[\"Timing\",\"3PM-8PM\",\"8AM-2PM\"]\r\n\r\n}]\r\n\r\nconst [state, setState] = useState({\r\n  jobs: \"\",\r\n  salary:\"\",\r\n  timing:\"\",\r\n});\r\n\r\n\r\n\r\nvar searchbtn=async()=>{\r\n\r\n    \r\n\r\n  \r\nawait axios.get(\"/getintership\").then((ress)=>{setjobs(ress.data.filter((i)=>\r\n  i.catogary==state.jobs && i.Intershiptype==state.salary && i.timing==state.timing\r\n ))})\r\n \r\n\r\n\r\n\r\n  }\r\n\r\n    return (\r\n        <>\r\n          <Navbar/>\r\n          <Route exact path={`${path}`}>\r\n          <Search name=\"ALL INTERSHIP\"/> \r\n\r\n          <Container >\r\n        <Breadcrumb/>\r\n          {/* <Filters Catogary={[{\r\n              Jobs:[\"All Intership\",\"Web Developer\",\"mobile Developer\",\"Desktop Developer\",\r\n\"SEO\",\"Graphic Desiger\",\"Content Writer\"],\r\n          salary:[\"Payment\",\"Paid\",\"Unpaid\"],\r\n          timing:[\"Timing\",\"PartTime\",\"FullTime\"]\r\n          \r\n          }]}/> */}\r\n\r\n\r\n\r\n\r\n<Grid container spacing={1}>\r\n\r\n<Grid item xs={12} sm={3} md={3} >\r\n<FormControl fullWidth variant=\"outlined\" >\r\n<InputLabel >{props[0].Jobs[0]}</InputLabel>\r\n<Select\r\n native\r\n value={state.jobs}\r\n onChange={(e)=>{\r\n\r\n   setState({\r\n     ...state,\r\n     [e.target.name]:e.target.value\r\n   })\r\n }}\r\n label=\"jobs\"\r\n inputProps={{\r\n   name: 'jobs',\r\n  \r\n }}\r\n>\r\n <option aria-label=\"None\" value=\"\" />\r\n\r\n {props[0].Jobs.slice(1).map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n )}\r\n \r\n \r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n\r\n\r\n\r\n<Grid item xs={12} sm={3} md={3} >\r\n<FormControl fullWidth variant=\"outlined\" >\r\n<InputLabel >{props[0].salary[0]}</InputLabel>\r\n<Select\r\n native\r\n value={state.salary}\r\n onChange={(e)=>{\r\n\r\n   setState({\r\n     ...state,\r\n     [e.target.name]:e.target.value\r\n   })\r\n }}\r\n label=\"salary\"\r\n inputProps={{\r\n   name: 'salary',\r\n  \r\n }}\r\n>\r\n <option aria-label=\"None\" value=\"\" />\r\n\r\n {props[0].salary.slice(1).map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n )}\r\n \r\n \r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n\r\n\r\n<Grid item xs={12} sm={3} md={3} >\r\n<FormControl fullWidth variant=\"outlined\" >\r\n<InputLabel >{props[0].timing[0]}</InputLabel>\r\n<Select\r\n native\r\n value={state.timing}\r\n onChange={(e)=>{\r\n\r\n   setState({\r\n     ...state,\r\n     [e.target.name]:e.target.value\r\n   })\r\n }}\r\n label=\"timing\"\r\n inputProps={{\r\n   name: 'timing',\r\n  \r\n }}\r\n>\r\n <option aria-label=\"None\" value=\"\" />\r\n\r\n {props[0].timing.slice(1).map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n )} \r\n \r\n \r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n<Grid style={{display:\"flex\",justifyContent:\"center\"}} item xs={12} sm={3} md={3} >\r\n\r\n{state.jobs.length>0 && state.salary.length>0 && state.timing.length>0?<Button   onClick={()=>{searchbtn()}} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">Search</Button>\r\n:\r\n\r\n<Button disabled   onClick={()=>{console.log(state)}} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">Search</Button>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n</Grid>  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <br/>\r\n         <IntershipsCards data={jobs}/>\r\n          </Container>\r\n</Route>\r\n\r\n              <Route exact path={`${path}/:id`}>\r\n        <IntershipPage data={jobs} path={path}/>\r\n        </Route>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Intership\r\n\r\n\r\n\r\n\r\nfunction IntershipPage(props) {\r\n\r\n\r\n  \r\n  const jobid=useParams().id;\r\n  const arry=props.data;\r\n\r\n  const jobdata=arry.find((i)=>{\r\n    return i._id==jobid;\r\n  })\r\n\r\n\r\n  const [similar, setsimilar] = useState([])\r\n  useEffect(()=>{\r\n  \r\n    axios.get(\"/getintership\").then((ress)=>{\r\n      setsimilar(ress.data.filter((i)=>\r\n              \r\n      jobdata.catogary==i.catogary\r\n      ))\r\n    \r\n    \r\n    })\r\n  },[])\r\n  \r\n  \r\n    \r\n  \r\n   const filterarray= similar.filter((i)=>{\r\n    \r\n  \r\n      return jobid!==i._id\r\n    \r\n    })\r\n\r\n  //console.log(jobdata)\r\n\r\n  const path=useRouteMatch().path;\r\n  return (\r\n    <React.Fragment>\r\n    \r\n    <Container maxWidth=\"xl\" >\r\n    <Typography component=\"div\" style={{marginTop:\"10px\", height: 'calc(100vh - 64px)' }}>\r\n      <Breadcrumb2 id={jobdata.intershiptitle}/>\r\n<Grid container spacing={1} >\r\n  <Grid item xs={12} sm={12} md={9} >\r\n<Paper style={{height:\"auto\",padding:\"20px\"}}>\r\n\r\n  <div style={{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\r\n\r\n\r\n    <div>\r\n<Typography variant=\"h5\" style={{fontWeight:\"bold\"}}>{jobdata.intershiptitle}</Typography>\r\n<Typography color=\"textSecondary\" variant=\"body2\" >{jobdata.companyname} {jobdata.city} </Typography>\r\n</div>\r\n<Avatar  src={jobdata.img}/>\r\n</div>\r\n\r\n\r\n<div style={{display:\"flex\",marginTop:\"5px\"}}>\r\n<Typography title=\"last Date\" color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faCalendarAlt}/>&nbsp;&nbsp;{jobdata.apply}</Typography>\r\n\r\n<Typography title=\"Experience\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faBriefcase}/>&nbsp;&nbsp;{jobdata.Intershiptype}</Typography>\r\n\r\n{jobdata.Intershiptype==\"UnPaid\"?null:\r\n<Typography title=\"Salary\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faMoneyBillWave}/>&nbsp;&nbsp;{jobdata.salary}</Typography>}\r\n\r\n   </div>\r\n   <br/>\r\n   <hr/>\r\n   <br/>\r\n<Typography varient=\"h6\" style={{fontWeight:\"bold\"}}>Job Description:-</Typography>\r\n   <Typography color=\"textsecondary\" variant=\"body1\">{jobdata.discription}</Typography>\r\n<br/>\r\n<Typography varient=\"h6\" style={{fontWeight:\"bold\"}}>Skills:-</Typography>\r\n   <Typography >{jobdata.skills}</Typography>\r\n   <br/>\r\n\r\n   <span>\r\n\r\n\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>Gender:-</b> {jobdata.gender}</Typography>\r\n\r\n\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>Position:-</b> {jobdata.position}</Typography>\r\n\r\n\r\n\r\n\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>Timing:-</b> {jobdata.timing}</Typography>\r\n   </span>\r\n<br/>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button variant=\"contained\" color=\"secondary\">Apply Now</Button>\r\n</div>\r\n</Paper>\r\n\r\n  </Grid>\r\n\r\n\r\n\r\n \r\n <Grid item xs={12} sm={12} md={3}>\r\n\r\n<Segisstion2 arrry={filterarray} path={props.path}/>\r\n</Grid>\r\n</Grid>\r\n        </Typography>\r\n      </Container>\r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction Breadcrumb2(props){\r\n  return (\r\n      <Breadcrumbs style={{display:\"flex\",justifyContent:\"center\",margin:\"10px 0px 10px 0px\"}}>    \r\n         <Typography component={LLink} to=\"/\" style={{textDecoration:\"none\"}} color=\"inherit\">Home</Typography>\r\n    <Typography component={LLink} to=\"/interships\" style={{textDecoration:\"none\"}}  color=\"inherit\">interships</Typography>\r\n    <Typography  color=\"textPrimary\">{props.id}</Typography>\r\n  \r\n  </Breadcrumbs> \r\n  )\r\n}\r\n","D:\\MERN stack\\sh1\\client\\src\\components\\Signin.js",["149","150"],"import React,{useState,useContext} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles,Snackbar } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Navbar} from \"./Home\"\r\nimport { Link as LLink} from \"react-router-dom\";\r\nimport axios from \"axios\"\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {Context} from \"../App.js\"\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const {userdata,setuserdata}=useContext(Context)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [user, setuser] = useState({\r\n    email:\"\",\r\n    password:\"\"\r\n  })\r\n  const [response, setresponse] = React.useState({\r\n    open:false,\r\n    msg:null,\r\n    msgscreen:null\r\n  });\r\n  const change=(e)=>{\r\n         setuser({\r\n           ...user,\r\n           [e.target.name]:e.target.value\r\n         })\r\n  }\r\n\r\n\r\n const history=useHistory();\r\nconst submit= async(e)=>{\r\n  e.preventDefault();\r\n  //console.log(user)\r\n  await axios.post(\"/signin\",user).then((res)=>{\r\n    \r\n    if(res.data.token){\r\n      setresponse({\r\n        open:true,\r\n        msg:res.data.msg,\r\n        msgscreen:res.data.msgscreen\r\n      });\r\n      \r\n      setuserdata({\r\nemail: res.data.email,\r\n        id:  res.data.id,\r\n        companyname: res.data.companyname,\r\n        password:  res.data.password,\r\n        img:res.data.img,\r\n        login:res.data.login,\r\n      })\r\n\r\n      localStorage.setItem(\"Ltoken\",res.data.token)\r\n      history.push(\"/account\")\r\n\r\n    }\r\n    else{\r\n      setresponse({\r\n        open:true,\r\n        msg:res.data.msg,\r\n        msgscreen:res.data.msgscreen\r\n      });\r\n    }\r\n    \r\n})\r\n}\r\n\r\nconst handleClose = () => {\r\n\r\n  setresponse({\r\n    ...response,\r\n    open:false\r\n  });\r\n};\r\n  \r\nif(userdata.login==true){\r\n  history.push(\"/account\")\r\n\r\n}\r\n  return (\r\n      <>\r\n      <Navbar/>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form onSubmit={submit} className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={user.email}\r\n            onChange={change}\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={user.password}\r\n            onChange={change}\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {/* Forgot password? */}\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link component={LLink} to=\"/signup\" href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      \r\n    </Container>\r\n\r\n    <Snackbar open={response.open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity={response.msgscreen}>\r\n      {response.msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n    </>\r\n  );\r\n}","D:\\MERN stack\\sh1\\client\\src\\components\\Signup.js",["151","152","153","154","155"],"import React,{useState,useContext} from 'react';\r\nimport {Context} from \"../App\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles,Snackbar } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Navbar} from \"./Home\"\r\nimport { Link as LLink} from \"react-router-dom\";\r\nimport axios from \"axios\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n\r\n  const [formdara, setformdara] = useState({\r\n    CompanyName:\"\",\r\n    password:\"\",\r\n    cpassword:\"\",\r\n    email:\"\",\r\n    weblink:\"\"\r\n    \r\n\r\n  })\r\n  const [file, setfile] = useState({})\r\n\r\n  const change=(e)=>{\r\n    setformdara({\r\n      ...formdara,\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n\r\n  const image=(e)=>{\r\n    setfile(e.target.files[0])\r\n  }\r\n\r\n\r\n  const [response, setresponse] = React.useState({\r\n    open:false,\r\n    msg:null,\r\n    msgscreen:null\r\n  });\r\n  const submit=(e)=>{\r\ne.preventDefault();\r\n//console.log(formdara)\r\nconst formData = new FormData();\r\nformData.append('file', file);\r\nformData.append('CompanyName',formdara.CompanyName);\r\nformData.append('password',formdara.password);\r\nformData.append('cpassword',formdara.cpassword);\r\nformData.append('email',formdara.email);\r\nformData.append('weblink',formdara.weblink);\r\n\r\naxios.post(\"/signup\",formData).then((res)=>{setresponse({\r\n  open:true,\r\n  msg:res.data.msg,\r\n  msgscreen:res.data.msgscreen\r\n\r\n})})\r\n\r\n  }\r\n\r\n  const handleClose = () => {\r\n\r\n    setresponse({\r\n      ...response,\r\n      open:false\r\n    });\r\n  };\r\nconst history=useHistory();\r\n  const {userdata,setuserdata}=useContext(Context)\r\n  if(userdata.login==true){\r\nhistory.push(\"/account\")\r\n  }\r\n  return (\r\n      <>\r\n      <Navbar/>\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form onSubmit={submit} className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} >\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"CompanyName\"\r\n                value={formdara.CompanyName}\r\n                onChange={change}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Company Name\"\r\n                label=\"Company Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                value={formdara.email}\r\n                onChange={change}\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                value={formdara.password}\r\n                onChange={change}\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"cpassword\"\r\n                value={formdara.cpassword}\r\n                onChange={change}\r\n                label=\"ConfirmPassword\"\r\n                type=\"password\"\r\n                id=\"cpassword\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              \r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"weblink\"\r\n                value={formdara.weblink}\r\n                onChange={change}\r\n                label=\"WebSite link\"\r\n                type=\"text\"\r\n                \r\n        \r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <label>\r\n                Choose image\r\n                </label>\r\n                <br/>\r\n                \r\n            <input      \r\n        accept=\"image/*\"\r\n        required\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        type=\"file\"\r\n        onChange={image}\r\n      />\r\n     \r\n\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link component={LLink} to=\"/signin\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n    <Snackbar open={response.open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity={response.msgscreen}>\r\n      {response.msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n    </>\r\n  );\r\n}","D:\\MERN stack\\sh1\\client\\src\\components\\Courses.js",["156","157","158","159","160","161","162","163","164","165","166"],"import React,{useEffect,useState} from 'react'\r\nimport {Navbar,Search} from \"./Home\"\r\nimport {FormControl,InputLabel,Select, Button,Link,Box,Breadcrumbs,Grid,Paper,Typography,Container } from '@material-ui/core';\r\nimport CourseCard from \"./CourseCard\"\r\n// import Filters from \"./Filters\"\r\nimport { BrowserRouter as Router, Switch,useRouteMatch,useParams, Route, Link as LLink} from \"react-router-dom\";\r\nimport axios from \"axios\"\r\nimport Segisstion3 from \"./Segisstion3\"\r\nfunction Breadcrumb(){\r\n    return (\r\n        <Breadcrumbs style={{display:\"flex\",justifyContent:\"center\",margin:\"10px 0px 10px 0px\"}}>    \r\n           <Typography component={LLink} to=\"/\" style={{textDecoration:\"none\"}} color=\"inherit\">Home</Typography>\r\n      <Typography color=\"textPrimary\">Courses</Typography>\r\n    \r\n    </Breadcrumbs> \r\n    )\r\n}\r\n\r\n\r\n\r\nfunction Courses() {\r\n\r\n  \r\n\r\n  const params=useParams()\r\n    const [jobs, setjobs] = useState([])\r\n    useEffect(async()=>{\r\n  \r\n\r\n      if(params.id==\"all\"){\r\n        await  axios.get(\"/getcourse\").then((ress)=>{setjobs(ress.data)})\r\n      }\r\n      else{\r\n        await axios.get(\"/getcourse\").then((ress)=>{setjobs(ress.data.filter((i)=>\r\n          i.catogary.toLowerCase().includes(params.id.toLowerCase())\r\n               ))})\r\n      }\r\n    //  await axios.get(\"/getcourse\").then((ress)=>{setjobs(ress.data)})\r\n    },[params.id])\r\n    const path=useRouteMatch().path\r\n    //console.log(path)\r\n\r\n    const [state, setState] = useState({\r\n      jobs: \"\",\r\n      timing:\"\",\r\n    });\r\n  \r\n\r\n    const props=[{\r\n      Jobs:[\"All Courses\",\"Web Developer\",\"mobile Developer\",\"Desktop Developer\",\r\n      \"SEO\",\"Graphic Desiger\",\"Content Writer\"],\r\n\r\n  timing:[\"Timing\",\"10AM-11AM\",\"3PM-4PM\"]\r\n  \r\n  }]\r\n\r\n\r\n  var searchbtn=async()=>{\r\n\r\n    \r\n\r\n    \r\n  await axios.get(\"/getcourse\").then((ress)=>{setjobs(ress.data.filter((i)=>\r\n    i.catogary==state.jobs && i.timing==state.timing\r\n   ))})\r\n   \r\n   console.log(jobs)\r\n    }\r\n   \r\n    return (\r\n        <>\r\n        <Navbar/>\r\n        <Route exact path={`${path}`}>\r\n        <Search name=\"ALL COURSES\"/>\r\n\r\n        <Container>\r\n        <Breadcrumb/>\r\n        {/* <Filters Catogary={[{\r\n              Jobs:[\"All Courses\",\"Web developer\",\"Mobile developer\",\"Desktop developer\",\r\n          \"SEO\",\"Graphic Desginer\",\"Content Writer\"],\r\n          salary:[\"Price\",\"Low\",\"high\"],\r\n          timing:[\"Timing\",\"10AM-11AM\",\"3PM-4PM\"]\r\n          \r\n          }]}/> */}\r\n\r\n\r\n\r\n<Grid container spacing={1}>\r\n\r\n<Grid item xs={12} sm={4} md={5} >\r\n<FormControl fullWidth variant=\"outlined\" >\r\n<InputLabel >{props[0].Jobs[0]}</InputLabel>\r\n<Select\r\n native\r\n value={state.jobs}\r\n onChange={(e)=>{\r\n\r\n   setState({\r\n     ...state,\r\n     [e.target.name]:e.target.value\r\n   })\r\n }}\r\n label=\"jobs\"\r\n inputProps={{\r\n   name: 'jobs',\r\n  \r\n }}\r\n>\r\n <option aria-label=\"None\" value=\"\" />\r\n\r\n {props[0].Jobs.slice(1).map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n )}\r\n \r\n \r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<Grid item xs={12} sm={4} md={4} >\r\n<FormControl fullWidth variant=\"outlined\" >\r\n<InputLabel >{props[0].timing[0]}</InputLabel>\r\n<Select\r\n native\r\n value={state.timing}\r\n onChange={(e)=>{\r\n\r\n   setState({\r\n     ...state,\r\n     [e.target.name]:e.target.value\r\n   })\r\n }}\r\n label=\"timing\"\r\n inputProps={{\r\n   name: 'timing',\r\n  \r\n }}\r\n>\r\n <option aria-label=\"None\" value=\"\" />\r\n\r\n {props[0].timing.slice(1).map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n )} \r\n \r\n \r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n<Grid style={{display:\"flex\",justifyContent:\"center\"}} item xs={12} sm={3} md={3} >\r\n\r\n{state.jobs.length>0 && state.timing.length>0?<Button   onClick={()=>searchbtn()} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">Search</Button>\r\n:\r\n\r\n<Button disabled   size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">Search</Button>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n</Grid>  \r\n\r\n\r\n\r\n\r\n\r\n\r\n          <br/>\r\n        <CourseCard data={jobs}/>\r\n        </Container>\r\n        </Route>\r\n\r\n<Route exact path={`${path}/:id`}>\r\n<CoursePage  path={path}/>\r\n</Route>\r\n                </>\r\n    )\r\n}\r\n\r\nexport default Courses\r\n\r\n\r\nfunction CoursePage(props) {\r\n\r\n\r\n  \r\n\r\n    const jobid=useParams().id\r\n    const arry=props.data;\r\n\r\n    const jobdata=arry.find((i)=>{\r\n      return i._id==jobid;\r\n    })\r\n\r\n\r\n    const [similar, setsimilar] = useState([])\r\n    useEffect(()=>{\r\n    \r\n      axios.get(\"/getcourse\").then((ress)=>{\r\n        setsimilar(ress.data.filter((i)=>\r\n                \r\n        jobdata.catogary==i.catogary\r\n        ))\r\n      \r\n      \r\n      })\r\n    },[])\r\n    \r\n     const filterarray= similar.filter((i)=>{\r\n      \r\n    \r\n        return jobid!==i._id\r\n      \r\n      })\r\n    \r\n    return (\r\n        <React.Fragment>\r\n        <Breadcrumb2 id={jobdata.coursetitle}/>\r\n        <Container maxWidth=\"xl\" >\r\n          <Typography component=\"div\" style={{height: '100vh' }} >\r\n\r\n\r\n<Grid container spacing={2} >\r\n    <Grid item xs={12} sm={12} md={9}>\r\n        <Paper style={{padding:\"20px\"}}>\r\n            <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n\r\n                <div>\r\n          <Typography variant=\"h5\"> <b>{jobdata.coursetitle}</b> </Typography>\r\n          <Typography color=\"textSecondary\" variant=\"body2\" >{jobdata.companyname} {jobdata.city} </Typography>\r\n\r\n          \r\n          <Typography color=\"textSecondary\" variant=\"body2\">{jobdata.instractorname}</Typography>\r\n          </div>\r\n          <Typography variant=\"h6\"> <b>{jobdata.price}</b> </Typography>\r\n          </div>\r\n          <br/>\r\n          <hr/>\r\n          <br/>\r\n          <Typography varient=\"body1\"><b>Discription:-</b></Typography>\r\n          <Typography variant=\"body2\">{jobdata.discription}</Typography><br/>\r\n          <Typography varient=\"body1\"><b>What You'll Learn:-</b></Typography>\r\n          <Typography variant=\"body2\">{jobdata.learn}</Typography><br/>\r\n          <Typography varient=\"body1\"><b>Course Content:-</b></Typography>\r\n          <Typography variant=\"body2\">{jobdata.content}</Typography><br/>\r\n          <Typography varient=\"body1\"><b>Requirements:-</b></Typography>\r\n          <Typography variant=\"body2\">{jobdata.Requirements}</Typography><br/>\r\n          <Typography varient=\"body1\"><b>Class Timing:-</b></Typography>\r\n          <Typography variant=\"body2\">{jobdata.timing}</Typography><br/>\r\n          <div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n              <Button variant=\"contained\" color=\"secondary\">Contact</Button>\r\n          </div>\r\n          \r\n\r\n\r\n        </Paper>\r\n    </Grid>\r\n\r\n    <Grid item xs={12} sm={12} md={3}>\r\n  \r\n    <Segisstion3 arrry={filterarray} path={props.path} />\r\n    </Grid>\r\n\r\n\r\n</Grid>\r\n             \r\n          </Typography>\r\n        </Container>\r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction Breadcrumb2(props){\r\n    return (\r\n        <Breadcrumbs style={{display:\"flex\",justifyContent:\"center\",margin:\"10px 0px 10px 0px\"}}>    \r\n           <Typography component={LLink} to=\"/\" style={{textDecoration:\"none\"}} color=\"inherit\">Home</Typography>\r\n      <Typography component={LLink} to=\"/courses\" style={{textDecoration:\"none\"}}  color=\"inherit\">courses</Typography>\r\n      <Typography  color=\"textPrimary\">{props.id}</Typography>\r\n    \r\n    </Breadcrumbs> \r\n    )\r\n  }\r\n  ","D:\\MERN stack\\sh1\\client\\src\\components\\mobilenav.js",["167","168","169","170","171"],"D:\\MERN stack\\sh1\\client\\src\\components\\Filters.js",["172","173","174","175"],"import React,{useState,createContext} from 'react'\r\nimport {Grid,FormControl,Box,InputLabel,Select, Button} from '@material-ui/core';\r\nimport Jobs from \"./Jobs\"\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\nfunction Filters(props) {\r\n  var aa=props.Catogary[0].Jobs\r\n \r\n   const [state, setState] = useState({\r\n    jobs: \"\",\r\n    salary:\"\",\r\n    timing:\"\",\r\n  });\r\n\r\n \r\n    return (\r\n        <>\r\n     \r\n         <Grid container spacing={1}>\r\n\r\n         <Grid item xs={12} sm={3} md={3} >\r\n         <FormControl fullWidth variant=\"outlined\" >\r\n        <InputLabel >{props.Catogary[0].Jobs[0]}</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.jobs}\r\n          onChange={(e)=>{\r\n\r\n            setState({\r\n              ...state,\r\n              [e.target.name]:e.target.value\r\n            })\r\n          }}\r\n          label=\"jobs\"\r\n          inputProps={{\r\n            name: 'jobs',\r\n           \r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n\r\n          {props.Catogary[0].Jobs.map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n          )}\r\n          \r\n          \r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n\r\n\r\n\r\n      <Grid item xs={12} sm={3} md={3} >\r\n         <FormControl fullWidth variant=\"outlined\" >\r\n        <InputLabel >{props.Catogary[0].salary[0]}</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.salary}\r\n          onChange={(e)=>{\r\n\r\n            setState({\r\n              ...state,\r\n              [e.target.name]:e.target.value\r\n            })\r\n          }}\r\n          label=\"salary\"\r\n          inputProps={{\r\n            name: 'salary',\r\n           \r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n\r\n          {props.Catogary[0].salary.map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n          )}\r\n          \r\n          \r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n\r\n\r\n      <Grid item xs={12} sm={3} md={3} >\r\n         <FormControl fullWidth variant=\"outlined\" >\r\n        <InputLabel >{props.Catogary[0].timing[0]}</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.timing}\r\n          onChange={(e)=>{\r\n\r\n            setState({\r\n              ...state,\r\n              [e.target.name]:e.target.value\r\n            })\r\n          }}\r\n          label=\"timing\"\r\n          inputProps={{\r\n            name: 'timing',\r\n           \r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n\r\n          {props.Catogary[0].timing.map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n          )}\r\n          \r\n          \r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n <Grid style={{display:\"flex\",justifyContent:\"center\"}} item xs={12} sm={3} md={3} >\r\n\r\n{state.jobs.length>0 && state.salary.length>0 && state.timing.length>0?<Button   onClick={()=>{console.log(state)}} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">Search</Button>\r\n:\r\n\r\n<Button disabled   onClick={()=>{console.log(state)}} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">Search</Button>\r\n}\r\n\r\n\r\n\r\n  \r\n   \r\n </Grid>\r\n   </Grid>  \r\n  \r\n  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filters\r\n\r\n\r\n\r\n\r\n","D:\\MERN stack\\sh1\\client\\src\\components\\Cards.js",["176","177","178","179"],"import React from 'react';\r\nimport {Avatar,Container,CardHeader,makeStyles,Card,CardActions,Grid,Button,Typography  } from '@material-ui/core';\r\nimport { BrowserRouter as Router, Switch,useRouteMatch, Route, Link as LLink} from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCalendarAlt,faBriefcase,faMoneyBillWave,faClock} from '@fortawesome/free-solid-svg-icons'\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    boxShadow:\"0px 0px 5px -1px rgba(0,0,0,0.75)\"\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default function CCard(props) {\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n  const classes = useStyles();\r\n  \r\nconst url=useRouteMatch().url;\r\n\r\n  return (\r\n      <>\r\n      <Grid container spacing={2}>\r\n          \r\n\r\n          \r\n    {props.data.map((i)=>\r\n        <Grid item xs={12} sm={6} md={4} >\r\n<Card  className={classes.root}>\r\n<CardHeader\r\navatar={\r\n  <Avatar src={i.img}/>\r\n}\r\ntitle={i.jobtitle}\r\nsubheader={`${i.companyname} ${i.city}`}\r\n/>\r\n\r\n<Typography style={{paddingLeft:\"15px\"}} variant=\"body2\" component=\"p\">\r\n{i.discription.slice(0,219)}....\r\n</Typography>\r\n<div>\r\n\r\n   <div style={{display:\"flex\",marginTop:\"5px\"}}>\r\n<Typography title=\"last Date\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faCalendarAlt}/>&nbsp;&nbsp;{i.apply}</Typography>\r\n\r\n<Typography title=\"Experience\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faBriefcase}/>&nbsp;&nbsp;{i.experience}</Typography>\r\n\r\n<Typography title=\"Salary\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faMoneyBillWave}/>&nbsp;&nbsp;{i.salary}</Typography>\r\n\r\n<Typography title=\"Timming\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faClock}/>&nbsp;&nbsp;{i.timing}</Typography>  \r\n   </div>\r\n  <CardActions style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button to={`${url}/${i._id}`} component={LLink}   size=\"small\" variant=\"outlined\" color=\"primary\">SEE More</Button>\r\n</CardActions>\r\n\r\n</div>\r\n\r\n</Card>\r\n</Grid>\r\n      \r\n    )}\r\n    </Grid>\r\n    <br/>\r\n\r\n   \r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n","D:\\MERN stack\\sh1\\client\\src\\components\\CourseCard.js",["180","181","182","183","184","185","186","187"],"import React,{useEffect,useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport axios from \"axios\"\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { BrowserRouter as Router, Switch,useRouteMatch,useParams, Route, Link as LLink} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n   \r\n    boxShadow:\"0px 0px 5px -1px rgba(0,0,0,0.75)\"\r\n  },\r\n  media: {\r\n    height: 200,\r\n  },\r\n});\r\n\r\nexport default function CourseCard(props) {\r\n\r\n  // const [dataa,setdataa ] = useState([])\r\n\r\nconst url=useRouteMatch().url;\r\n  const classes = useStyles();\r\n  // useEffect(async()=>{\r\n\r\n  //  await axios.get(\"/getcourse\").then((res)=>{setdataa(res.data)})\r\n\r\n  // },[])\r\n\r\n  \r\n  return (\r\n      <>\r\n      <Grid container spacing={2}>\r\n{props.data.map((i)=>\r\n\r\n<Grid item xs={12} md={4}>\r\n<Card className={classes.root}>\r\n\r\n<CardMedia\r\nclassName={classes.media}\r\nimage={i.img}\r\ntitle=\"Contemplative Reptile\"\r\n/>\r\n<CardContent>\r\n<Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n{i.coursetitle}\r\n</Typography>\r\n<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n{i.companyname}  {i.city}\r\n</Typography>\r\n<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n  {i.instractorname}\r\n</Typography>\r\n<br/>\r\n<Typography style={{fontWeight:\"bold\"}} variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n  Discription:-<br/>\r\n  \r\n</Typography>\r\n<Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n{i.discription.slice(0,140)}.....\r\n  \r\n</Typography>\r\n\r\n</CardContent>\r\n\r\n<CardActions style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n\r\n<Box fontWeight=\"bold\" fontSize=\"h5.fontSize\">{i.price}</Box>\r\n  \r\n\r\n<Button to={`${url}/${i._id}`} component={LLink} variant=\"outlined\" size=\"small\" color=\"primary\">\r\nLearn More\r\n</Button>\r\n</CardActions>\r\n</Card>\r\n\r\n</Grid>\r\n\r\n )} \r\n      </Grid>\r\n      <br/>\r\n      </>\r\n  );\r\n}\r\n","D:\\MERN stack\\sh1\\client\\src\\components\\Account.js",["188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241"],"import React,{useContext,useEffect, useState} from 'react'\r\nimport {BrowserRouter as Router,Route, Switch, useHistory,useRouteMatch,Link as LLink, useParams} from \"react-router-dom\"\r\nimport {Context} from \"../App\"\r\nimport {Navbar} from \"./Home\"\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {CssBaseline,Card,CardHeader,CardActions,Container,Select,Snackbar,InputLabel,FormControl,TextField,Grid,CardMedia,CardContent,Box,Typography,makeStyles,Button,MenuItem,Menu,Avatar, Paper} from '@material-ui/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios';\r\nimport {faCalendarAlt,faBriefcase,faMoneyBillWave,faClock} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nexport function Account() {   \r\n    const {userdata,setuserdata}=useContext(Context)\r\nconst history=useHistory();\r\nif(userdata.login==false){\r\n    history.push(\"/signin\")\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container:{\r\n       // backgroundColor:\"#cfe8fc\" ,\r\n        height:\"calc(100vh - 64px)\" ,\r\n        display:\"flex\",\r\n       \r\n        alignItems:\"center\",\r\n        flexDirection:\"column\",\r\n        paddingTop:\"80px\"\r\n    },\r\n    large: {\r\n      width: theme.spacing(19),\r\n      height: theme.spacing(19),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n     // this is for edit/view\r\n     const [anchorEl, setAnchorEl] = React.useState(null);\r\n    \r\n     const handleClick = (event) => {\r\n       setAnchorEl(event.currentTarget);\r\n     };\r\n   \r\n     const handleClose = () => {\r\n       setAnchorEl(null);\r\n     };\r\n\r\n// this is for add services\r\n     const [anchorEl1, setAnchorEl1] = React.useState(null);\r\n   \r\n     const handleClick1 = (event) => {\r\n       setAnchorEl1(event.currentTarget);\r\n     };\r\n   \r\n     const handleClose1 = () => {\r\n       setAnchorEl1(null);\r\n     };\r\n\r\n\r\n    \r\n        const path=useRouteMatch().path;\r\n        const url=useRouteMatch().url;\r\n  \r\n    \r\n    return (\r\n    <>\r\n<Navbar/>\r\n<Route exact  path={`${path}`}>\r\n<React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\">\r\n<Typography component=\"div\" className={classes.container}>\r\n\r\n<Avatar alt=\"Remy Sharp\" src={userdata.img} className={classes.large} />\r\n<center>\r\n<Typography variant=\"h3\" style={{fontWeight:\"bold\",margin:\"20px\"}}>Welcome <span style={{textDecoration:\"underline\",textDecorationColor:\"#011842\"}}>{userdata.companyname}</span></Typography>\r\n</center>\r\n\r\n<Grid container spacing={3}>\r\n    <Grid item xs={12} sm={6} md={4} >\r\n        <Button component={LLink} to={`${url}/profileedit`} fullWidth variant=\"contained\" color=\"primary\">Profile</Button>\r\n    </Grid >\r\n    <Grid item xs={12} sm={6} md={4}>\r\n        <Button onClick={handleClick} endIcon={<FontAwesomeIcon style={{paddingBottom:\"5px\"}} icon={faSortDown}/>} fullWidth variant=\"contained\" color=\"primary\">Add Service</Button>\r\n\r\n        <Menu            \r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'center',\r\n                }}\r\n            \r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem component={LLink} to={`${url}/addjobs`} onClick={handleClose}>Jobs</MenuItem>\r\n      <MenuItem component={LLink} to={`${url}/addinterships`}  onClick={handleClose}>Interships</MenuItem>\r\n        <MenuItem component={LLink} to={`${url}/addcourse`}  onClick={handleClose}>Courses</MenuItem>\r\n      </Menu>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6} md={4}>\r\n        <Button onClick={handleClick1} endIcon={<FontAwesomeIcon style={{paddingBottom:\"5px\"}} icon={faSortDown}/>}  fullWidth variant=\"contained\" color=\"primary\">Edit/View Service</Button>\r\n\r\n\r\n        <Menu\r\n                elevation={3}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'center',\r\n                }}\r\n            \r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl1}\r\n        keepMounted\r\n        open={Boolean(anchorEl1)}\r\n        onClose={handleClose1}\r\n      >\r\n        <MenuItem to={`${url}/editjob`} component={LLink} onClick={handleClose1}>Jobs</MenuItem>\r\n        <MenuItem to={`${url}/editintership`} component={LLink} onClick={handleClose1}>Interships</MenuItem>\r\n        <MenuItem to={`${url}/coursepage`} component={LLink} onClick={handleClose1}>Courses</MenuItem>\r\n      </Menu>\r\n    </Grid>\r\n    \r\n</Grid>\r\n</Typography>\r\n      </Container>   \r\n    </React.Fragment>\r\n    </Route>\r\n          <Route exact  path={`${path}/profileedit`}>\r\n          <EditProfile/>\r\n          </Route>\r\n\r\n          <Route exact  path={`${path}/addjobs`}>\r\n          <Addjobs/>\r\n          </Route>\r\n          <Route exact  path={`${path}/addinterships`}>\r\n          <Addinterships/>\r\n          </Route>\r\n          <Route exact  path={`${path}/addcourse`}>\r\n          <Addcourse/>\r\n          </Route>\r\n          \r\n          <Route exact  path={`${path}/editjob`}>\r\n          <Editjob/>\r\n          </Route>\r\n          \r\n\r\n          <Route exact  path={`${path}/editjob/:id`}>\r\n          <Editjobform/>\r\n          </Route>\r\n\r\n          <Route exact  path={`${path}/editintership`}>\r\n          <Editintership/>\r\n          </Route>\r\n\r\n          <Route exact  path={`${path}/editintership/:id`}>\r\n          <Intershipformedit/>\r\n          </Route>\r\n          \r\n          <Route exact  path={`${path}/coursepage`}>\r\n          <Coursepage/>\r\n          </Route>\r\n\r\n          <Route exact  path={`${path}/coursepage/:id`}>\r\n          <Courseform/>\r\n          </Route>\r\n\r\n           </>\r\n    )\r\n}\r\n\r\n \r\n\r\n function EditProfile() {\r\n    const {userdata,setuserdata}=useContext(Context)\r\n     const [state, setstate] = useState({\r\n         email:userdata.email,\r\n         password:userdata.password,\r\n         companyname:userdata.companyname,\r\n         userID:userdata.id\r\n     })\r\n\r\n     const change=(e)=>{\r\n        setstate({\r\n            ...state,\r\n            [e.target.name]:e.target.value\r\n        })\r\n     }\r\n     const history=useHistory();\r\n   const [msg, setmsg] = useState(\"\")\r\n   const [img, setimg] = useState(\"\")\r\n     const submit= (e)=>{\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n\r\n        formData.append(\"companyname\",state.companyname)\r\n        formData.append(\"email\",state.email)\r\n        formData.append(\"password\",state.password)\r\n        formData.append(\"img\",img)\r\n        formData.append(\"userid\",state.userID)\r\n         \r\n     \r\n         axios.post(\"/updateuser\",formData)\r\n        .then((res)=>{setmsg(res.data.msg);\r\n        localStorage.setItem(\"Ltoken\",res.data.token);\r\n        history.push(\"/account\")\r\n        window.location.reload();\r\n        \r\n        })\r\n\r\n     }\r\n\r\n     const imageChange=(e)=>{\r\n        setimg(e.target.files[0])\r\n     }\r\n     \r\n    return (\r\n        <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"xs\">\r\n        <Typography component=\"div\" style={{ marginTop:\"100px\", height: '100vh' }}>\r\n            <Typography variant=\"h4\" style={{padding:\"20px\",fontWeight:\"bold\",textDecorationColor:\"#011842\",color:\"#011842\",textDecoration:\"underline\"}}>EDIT PROFILE</Typography>\r\n\r\n            <form onSubmit={submit}>\r\n\r\n\r\n\r\n\r\n            <TextField name=\"companyname\" onChange={change} required type=\"text\" margin=\"normal\" fullWidth  InputLabelProps={{shrink: true,\r\n          }} label=\"CompanyName\" variant=\"outlined\" value={state.companyname} />\r\n\r\n\r\n\r\n        \r\n            <TextField name=\"password\" onChange={change} required type=\"password\" fullWidth margin=\"normal\"  InputLabelProps={{\r\n            shrink: true,\r\n          }} label=\"Password\" variant=\"outlined\" value={state.password} />\r\n            \r\n          \r\n   <TextField disabled type=\"email\" fullWidth  margin=\"normal\" InputLabelProps={{  shrink: true,\r\n          }} label=\"Email\" variant=\"outlined\" value={state.email} />\r\n          <label>Update image</label><br/>\r\n        <input onChange={imageChange} type=\"file\"/>\r\n\r\n<Button type=\"submit\" style={{marginTop:\"10px\"}} variant=\"contained\" color=\"secondary\" fullWidth>UPDATE</Button>\r\n            </form>\r\n        </Typography>\r\n      </Container>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Addjobs() {\r\n  \r\n\r\n\r\n  const {userdata,setdatauser}=useContext(Context)\r\n  \r\n  const [data, setdata] = useState({\r\n    jobtitle:\"\",\r\ncity:\"\",\r\ncatogary:\"\",\r\nexperience:\"\",\r\ntiming:\"\",\r\nsalary:\"\",\r\ngender:\"\",\r\neducation:\"\",\r\nposition:\"\",\r\napply:\"\",\r\nskills:\"\",\r\ndiscription:\"\",\r\ncompanyname:userdata.companyname,\r\naccountID:userdata.id,\r\nimg:userdata.img,\r\n  })\r\n  const change=(e)=>{\r\n    setdata({\r\n      ...data,\r\n      [e.target.name]:e.target.value\r\n    })\r\n\r\n  }\r\nconst [msg, setmsg] = useState(\"\")\r\nconst [open, setopen] = useState(false)\r\nconst handleClose = () => {\r\n\r\n  setopen(false)\r\n};\r\n  const submit= async(e)=>{\r\ne.preventDefault();\r\n\r\n await axios.post(\"/addjob\",data).then((res)=>{setmsg(res.data);setopen(true)})\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <CssBaseline />\r\n    <Container maxWidth=\"md\">\r\n      <Typography component=\"div\" style={{minHeight: 'calc(100vh - 64px)'}}>\r\n\r\n      <Typography variant=\"h4\" style={{padding:\"20px\",fontWeight:\"bold\",textDecorationColor:\"#011842\",color:\"#011842\",textDecoration:\"underline\"}}>ADD JOBS</Typography>\r\n\r\n      <form onSubmit={submit}>\r\n<Grid container spacing={2}>\r\n\r\n  <Grid item md={8} sm={8} xs={12}>\r\n  <TextField value={data.jobtitle} name=\"jobtitle\" onChange={change} fullWidth label=\"Job Title\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField value={userdata.companyname} disabled name=\"companyname\" fullWidth label=\"CompanyName\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Select City</InputLabel>\r\n        <Select\r\n        value={data.city}\r\n          native\r\n          name=\"city\" onChange={change}\r\n          inputProps={{\r\n            name: 'city',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value=\"Peshawar\">Peshawar</option>\r\n          <option value=\"lahore\">lahore</option>\r\n          <option value=\"Karachi\">Karachi</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Catogary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.catogary}\r\n          name=\"catogary\" onChange={change}\r\n          inputProps={{\r\n            name: 'catogary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Web Developer\">Web Developer</option>\r\n          <option  value=\"mobile Developer\">mobile Developer</option>\r\n          <option  value=\"Desktop Developer\">Desktop Developer</option>\r\n          <option  value=\"SEO\">SEO</option>\r\n          <option  value=\"Graphic Desiger\">Graphic Desiger</option>\r\n          <option  value=\"Content Writer\">Content Writer</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Experience</InputLabel>\r\n        <Select\r\n        \r\n          native\r\n          value={data.experience}\r\n          name=\"experience\" onChange={change}\r\n          inputProps={{\r\n            name: 'experience',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          {[1,2,3,4,5,6,7,8,9,10].map((i)=>\r\n   \r\n   i==1?<option aria-label=\"None\" value={`${i} Year`}>{i} Year</option>:<option aria-label=\"None\" value={`${i} Years`}>{i} Years</option>\r\n  \r\n            )}\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Timimg</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.timing}\r\n          name=\"timing\" onChange={change}\r\n          inputProps={{\r\n            name: 'timing',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"fulltime\" >Full-Time</option>\r\n          <option  value=\"halftime\" >Half-Time</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Salary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.salary}\r\n          name=\"salary\" onChange={change}\r\n          inputProps={{\r\n            name: 'salary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"10k-20k\">10k-20k</option>\r\n          <option  value=\"20k-40k\">20k-40k</option>\r\n          <option  value=\"50k-70k\">50k-70k</option>\r\n          <option  value=\"80k-100k\">80k-100k</option>\r\n          <option  value=\"110k-140k\">110k-140k</option>\r\n          <option  value=\"150k-180k\">150k-180k  </option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.gender}\r\n          name=\"gender\" onChange={change}\r\n          inputProps={{\r\n            name: 'gender',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"No Preference\">No Preference</option>\r\n          <option  value=\"Man\">Man</option>\r\n          <option  value=\"Woman\">Woman</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Minimum Education</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.education}\r\n          name=\"education\" onChange={change}\r\n          inputProps={{\r\n            name: 'education',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Bachelors\">Bachelors</option>\r\n          <option  value=\"Master\">Master</option>\r\n          <option  value=\"PhD\">PhD</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField name=\"position\" value={data  .position} onChange={change} fullWidth label=\"Total Positions\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField name=\"apply\" onChange={change} type=\"date\" fullWidth label=\"Apply Before\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n  \r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\nvalue={data.skills}\r\nname=\"skills\" onChange={change}\r\n  helperText=\"Note:-HTML,CSS,JS\"\r\n  type=\"text\" fullWidth label=\"Skills\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.discription}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"discription\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Discription\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n</Grid>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button type=\"submit\" style={{marginBottom:\"10px\"}} color=\"secondary\" variant=\"contained\">Create Job</Button>\r\n</div>\r\n\r\n\r\n</form>   \r\n      </Typography>\r\n    </Container>\r\n\r\n    <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity=\"success\">\r\n      {msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n\r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  function Addinterships() {\r\n  \r\n\r\n\r\n  const {userdata,setdatauser}=useContext(Context)\r\n  \r\n  const [data, setdata] = useState({\r\n    intershiptitle:null,\r\ncity:null,\r\ncatogary:null,\r\nIntershiptype:null,\r\ntiming:null,\r\nsalary:null,\r\ngender:null,\r\nposition:null,\r\napply:null,\r\nskills:null,\r\ndiscription:null,\r\ncompanyname:userdata.companyname,\r\naccountID:userdata.id,\r\nimg:userdata.img,\r\n  })\r\n  const change=(e)=>{\r\n    setdata({\r\n      ...data,\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n\r\n\r\n\r\n  const [msg, setmsg] = useState(\"\")\r\nconst [open, setopen] = useState(false)\r\nconst handleClose = () => {\r\n\r\n  setopen(false)\r\n};\r\n\r\n\r\n  const submit= async(e)=>{\r\ne.preventDefault();\r\nconsole.log(data)\r\n\r\n await axios.post(\"/Addinterships\",data).then((res)=>{setmsg(res.data);setopen(true)})\r\n  }\r\n\r\nconst [salary, setsalary] = useState(false)\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <CssBaseline />\r\n    <Container maxWidth=\"md\">\r\n      <Typography component=\"div\" style={{minHeight: 'calc(100vh - 64px)'}}>\r\n\r\n      <Typography variant=\"h4\" style={{padding:\"20px\",fontWeight:\"bold\",textDecorationColor:\"#011842\",color:\"#011842\",textDecoration:\"underline\"}}>ADD INTERSHIP</Typography>\r\n\r\n      <form onSubmit={submit}>\r\n<Grid container spacing={2}>\r\n\r\n  <Grid item md={8} sm={8} xs={12}>\r\n  <TextField value={data.intershiptitle} name=\"intershiptitle\" onChange={change} fullWidth label=\"Intership Title\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField value={userdata.companyname} disabled name=\"companyname\" fullWidth label=\"CompanyName\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Select City</InputLabel>\r\n        <Select\r\n        value={data.city}\r\n          native\r\n          name=\"city\" onChange={change}\r\n          inputProps={{\r\n            name: 'city',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value=\"Peshawar\">Peshawar</option>\r\n          <option value=\"lahore\">lahore</option>\r\n          <option value=\"Karachi\">Karachi</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Catogary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.catogary}\r\n          name=\"catogary\" onChange={change}\r\n          inputProps={{\r\n            name: 'catogary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Web Developer\">Web Developer</option>\r\n          <option  value=\"mobile Developer\">mobile Developer</option>\r\n          <option  value=\"Desktop Developer\">Desktop Developer</option>\r\n          <option  value=\"SEO\">SEO</option>\r\n          <option  value=\"Graphic Desiger\">Graphic Desiger</option>\r\n          <option  value=\"Content Writer\">Content Writer</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Intership Type</InputLabel>\r\n        <Select\r\n        \r\n          native\r\n          value={data.Intershiptype}\r\n          name=\"Intershiptype\" onChange={(e)=>{change(e);\r\n            if(e.target.value==\"UnPaid\"){\r\n              setsalary(true)\r\n            }\r\n            else{\r\n              setsalary(false)\r\n            }\r\n            \r\n          }}\r\n          inputProps={{\r\n            name: 'Intershiptype',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  aria-label=\"None\" value=\"Paid\">Paid</option>\r\n          <option  aria-label=\"None\" value=\"UnPaid\">UnPaid</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Timimg</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.timing}\r\n          name=\"timing\" onChange={change}\r\n          inputProps={{\r\n            name: 'timing',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"8AM-2PM\" >8AM-2PM</option>\r\n          <option  value=\"3PM-8PM\" >3PM-8PM</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Salary</InputLabel>\r\n        <Select\r\n        disabled={salary}\r\n          native\r\n          value={data.salary}\r\n          name=\"salary\" onChange={change}\r\n          inputProps={{\r\n            name: 'salary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"10k\">10k</option>\r\n          <option  value=\"20k\">20k</option>\r\n          <option  value=\"30k\">30k</option>\r\n          <option  value=\"40k\">40k</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.gender}\r\n          name=\"gender\" onChange={change}\r\n          inputProps={{\r\n            name: 'gender',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"No Preference\">No Preference</option>\r\n          <option  value=\"Man\">Man</option>\r\n          <option  value=\"Woman\">Woman</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={6} sm={6} xs={12}>\r\n  <TextField name=\"position\" value={data  .position} onChange={change} fullWidth label=\"Total Positions\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  <Grid item md={6} sm={6} xs={12}>\r\n  <TextField name=\"apply\" onChange={change} type=\"date\" fullWidth label=\"Apply Before\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n  \r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\nvalue={data.skills}\r\nname=\"skills\" onChange={change}\r\n  helperText=\"Note:-HTML,CSS,JS\"\r\n  type=\"text\" fullWidth label=\"Skills\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.discription}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"discription\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Discription\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n</Grid>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button type=\"submit\" style={{marginBottom:\"10px\"}} color=\"secondary\" variant=\"contained\">Create Interships</Button>\r\n</div>\r\n\r\n\r\n</form>   \r\n        \r\n\r\n\r\n      </Typography>\r\n    </Container>\r\n    <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity=\"success\">\r\n      {msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n    \r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Addcourse() {\r\n  \r\n\r\n\r\n  const {userdata,setdatauser}=useContext(Context)\r\n  \r\n  const [data, setdata] = useState({\r\n    coursetitle:null,\r\ncity:null,\r\ncatogary:null,\r\nprice:null,\r\ntiming:null,\r\ninstractorname:null,\r\nRequirements:null,\r\nlearn:null,\r\ncontent:null,\r\ndiscription:null,\r\naccountID:userdata.id,\r\nnumber:null,\r\n  })\r\n  const change=(e)=>{\r\n    setdata({\r\n      ...data,\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n\r\n\r\n\r\n  const [msg, setmsg] = useState(\"\")\r\nconst [open, setopen] = useState(false)\r\nconst [selectimg, setselectimg] = useState({})\r\n\r\n\r\nconst img=(e)=>{\r\nsetselectimg(e.target.files[0])\r\n  //console.log(e.target.files[0])\r\n}\r\nconst handleClose = () => {\r\n  setopen(false)\r\n};\r\n\r\n\r\n  const submit= async(e)=>{\r\ne.preventDefault();\r\nconst formData=new FormData();\r\nformData.append(\"coursetitle\",data.coursetitle)\r\nformData.append(\"city\",data.city)\r\nformData.append(\"catogary\",data.catogary)\r\nformData.append(\"price\",data.price)\r\nformData.append(\"timing\",data.timing)\r\nformData.append(\"instractorname\",data.instractorname)\r\nformData.append(\"Requirements\",data.Requirements)\r\nformData.append(\"learn\",data.learn)\r\nformData.append(\"content\",data.content)\r\nformData.append(\"discription\",data.discription)\r\nformData.append(\"accountID\",userdata.id)\r\nformData.append(\"companyname\",userdata.companyname)\r\nformData.append(\"selectimg\",selectimg)\r\nformData.append(\"number\",userdata.number)\r\n\r\n\r\n\r\n await axios.post(\"/addcourse\",formData).then((res)=>{setmsg(res.data);setopen(true)})\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <CssBaseline />\r\n    <Container maxWidth=\"md\">\r\n      <Typography component=\"div\" style={{minHeight: 'calc(100vh - 64px)'}}>\r\n\r\n      <Typography variant=\"h4\" style={{padding:\"20px\",fontWeight:\"bold\",textDecorationColor:\"#011842\",color:\"#011842\",textDecoration:\"underline\"}}>ADD COURSE</Typography>\r\n\r\n      <form onSubmit={submit}>\r\n<Grid container spacing={2}>\r\n\r\n  <Grid item md={8} sm={8} xs={12}>\r\n  <TextField value={data.coursetitle} name=\"coursetitle\" onChange={change} fullWidth label=\"Course Title\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  \r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField value={userdata.companyname} disabled name=\"companyname\" fullWidth label=\"CompanyName\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField onChange={change} value={userdata.instractorname}  name=\"instractorname\" fullWidth label=\"Instractor Name\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField onChange={change} value={userdata.price}  name=\"price\" fullWidth label=\"Price\" required variant=\"outlined\" helperText=\" Example:-10000 PKR\"/>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Select City</InputLabel>\r\n        <Select\r\n        value={data.city}\r\n          native\r\n          name=\"city\" onChange={change}\r\n          inputProps={{\r\n            name: 'city',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value=\"Peshawar\">Peshawar</option>\r\n          <option value=\"lahore\">lahore</option>\r\n          <option value=\"Karachi\">Karachi</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Catogary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.catogary}\r\n          name=\"catogary\" onChange={change}\r\n          inputProps={{\r\n            name: 'catogary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Web Developer\">Web Developer</option>\r\n          <option  value=\"mobile Developer\">mobile Developer</option>\r\n          <option  value=\"Desktop Developer\">Desktop Developer</option>\r\n          <option  value=\"SEO\">SEO</option>\r\n          <option  value=\"Graphic Desiger\">Graphic Desiger</option>\r\n          <option  value=\"Content Writer\">Content Writer</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Timimg</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.timing}\r\n          name=\"timing\" onChange={change}\r\n          inputProps={{\r\n            name: 'timing',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"10AM-11AM\" >10AM-11AM</option>\r\n          <option  value=\"3PM-4PM\" >3PM-4PM</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n    <TextField  value={data.number}\r\n          name=\"number\" onChange={change} fullWidth variant=\"outlined\" helperText=\"Example:- +923217836328\" label=\"WhatsApp Number\" required type=\"number\"/>\r\n  </Grid>\r\n  \r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.discription}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"discription\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Discription\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.learn}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"learn\" onChange={change}\r\n  type=\"text\" fullWidth label=\" What you'll learn\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.content}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"content\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Course Content\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  \r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.Requirements}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"Requirements\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Requirements\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n</Grid>\r\n<div style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n<input required accept=\"image/*\" type=\"file\" onChange={img}/>\r\n<Button type=\"submit\" style={{marginBottom:\"10px\"}} color=\"secondary\" variant=\"contained\">Create Course</Button>\r\n</div>\r\n\r\n\r\n</form>   \r\n        \r\n\r\n\r\n      </Typography>\r\n    </Container>\r\n    <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity=\"success\">\r\n      {msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n    \r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction Editjob() {\r\n\r\nconst [jobs, setjobs] = useState([])\r\n  useEffect(()=>{\r\n    axios.get(\"/getjobs\").then((res)=>{setjobs(res.data.filter((i)=>{\r\n      return i.accountID==userdata.id\r\n    }))})\r\n  \r\n  },[])\r\n  const {userdata,setuserdata}=useContext(Context)\r\n  \r\n\r\n  \r\n  // var jobss=jobs.filter((i)=>{\r\n  //   return i.accountID==userdata.id\r\n  // })\r\n\r\n\r\n  const path=useRouteMatch().path\r\n  const url=useRouteMatch().url\r\n\r\n  const ddelete=(id)=>{\r\n\r\n  axios.post(\"/deletejob\",{id:id})\r\n axios.get(\"/getjobs\").then((res)=>{setjobs(res.data.filter((i)=>{\r\n  return i.accountID==userdata.id\r\n}))})\r\n  }\r\n  return (\r\n    <>\r\n   \r\n    <Container maxWidth=\"xl\">\r\n        <Typography component=\"div\" style={{ height: '100vh' }}>\r\n          <Typography variant=\"h5\" style={{paddingTop:\"15px\"}}><b>View/Edit/Delete Jobs</b></Typography>\r\n          <br/>\r\n\r\n          {jobs.length==0?\r\n          <Container maxWidth=\"sm\">\r\n          <Paper component={Box} p=\"12px\">\r\n          <Typography align=\"center\" variant=\"body2\">No Jobs has have Register</Typography>\r\n          </Paper>\r\n          </Container>\r\n          :\r\n          \r\n          <Grid container spacing={2}>\r\n          {jobs.map((i)=>\r\n        <Grid item xs={12} sm={6} md={4} >\r\n<Card  >\r\n<CardHeader\r\navatar={\r\n  <Avatar>R</Avatar>\r\n}\r\ntitle={i.jobtitle}\r\nsubheader={`${i.companyname} ${i.city}`}\r\n/>\r\n\r\n<Typography style={{paddingLeft:\"15px\"}} variant=\"body2\" component=\"p\">\r\n{i.discription.slice(0,219)}....\r\n</Typography>\r\n<div>\r\n\r\n   <div style={{display:\"flex\",marginTop:\"5px\"}}>\r\n<Typography title=\"last Date\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faCalendarAlt}/>&nbsp;&nbsp;{i.apply}</Typography>\r\n\r\n<Typography title=\"Experience\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faBriefcase}/>&nbsp;&nbsp;{i.experience}</Typography>\r\n\r\n<Typography title=\"Salary\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faMoneyBillWave}/>&nbsp;&nbsp;{i.salary}</Typography>\r\n\r\n<Typography title=\"Timming\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faClock}/>&nbsp;&nbsp;{i.timing}</Typography>  \r\n   </div>\r\n  <CardActions style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button to={`${url}/${i._id}`}  component={LLink}   size=\"small\" variant=\"outlined\" color=\"primary\">Edit</Button>\r\n<Button  onClick={()=>ddelete(i._id)}  size=\"small\" variant=\"contained\" color=\"primary\">Delete</Button>\r\n</CardActions>\r\n\r\n</div>\r\n\r\n</Card>\r\n</Grid>\r\n      \r\n    )}\r\n    </Grid>        \r\n          \r\n          }\r\n           \r\n        </Typography>\r\n      </Container>\r\n      \r\n\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction Editjobform() {\r\n\r\n  const id=useParams().id\r\n  const {userdata,setdatauser}=useContext(Context)\r\n\r\n\r\n\r\n\r\n  useEffect( async()=>{\r\n   await axios.post(\"/jobdataput\",{id:id}).then((ress)=>{\r\n     \r\n    setdata({\r\n      jobtitle:ress.data[0].jobtitle,\r\n      city:ress.data[0].city,\r\n      catogary:ress.data[0].catogary,\r\n      experience:ress.data[0].experience,\r\n      timing:ress.data[0].timing,\r\n      salary:ress.data[0].salary,\r\n      gender:ress.data[0].gender,\r\n      education:ress.data[0].education,\r\n      position:ress.data[0].position,\r\n      apply:ress.data[0].apply,\r\n      skills:ress.data[0].skills,\r\n      discription:ress.data[0].discription,\r\n      companyname:userdata.companyname,\r\n      accountID:userdata.id,\r\n      img:userdata.img,\r\n      productID:id\r\n    })\r\n  \r\n  })\r\n  },[])\r\n\r\n\r\n  const [data, setdata] = useState({\r\n    jobtitle:\"\",\r\ncity:\"\",\r\ncatogary:\"\",\r\nexperience:\"\",\r\ntiming:\"\",\r\nsalary:\"\",\r\ngender:\"\",\r\neducation:\"\",\r\nposition:\"\",\r\napply:\"\",\r\nskills:\"\",\r\ndiscription:\"\",\r\ncompanyname:userdata.companyname,\r\naccountID:userdata.id,\r\nimg:userdata.img,\r\nproductID:id\r\n  })\r\n\r\n\r\n  //console.log(data)\r\n\r\n  const change=(e)=>{\r\n    setdata({\r\n      ...data,\r\n      [e.target.name]:e.target.value\r\n    })\r\n\r\n  }\r\nconst [msg, setmsg] = useState(\"\")\r\nconst [open, setopen] = useState(false)\r\nconst handleClose = () => {\r\n\r\n  setopen(false)\r\n};\r\n  const submit= async(e)=>{\r\ne.preventDefault();\r\n\r\n await axios.post(\"/updatejob\",data).then((res)=>{setmsg(res.data);setopen(true)})\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <CssBaseline />\r\n    <Container maxWidth=\"md\">\r\n      <Typography component=\"div\" style={{minHeight: 'calc(100vh - 64px)'}}>\r\n\r\n      <Typography variant=\"h4\" style={{padding:\"20px\",fontWeight:\"bold\",textDecorationColor:\"#011842\",color:\"#011842\",textDecoration:\"underline\"}}>UPDATE JOB</Typography>\r\n\r\n      <form onSubmit={submit}>\r\n<Grid container spacing={2}>\r\n\r\n  <Grid item md={8} sm={8} xs={12}>\r\n  <TextField value={data.jobtitle} name=\"jobtitle\" onChange={change} fullWidth label=\"Job Title\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField value={userdata.companyname} disabled name=\"companyname\" fullWidth label=\"CompanyName\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Select City</InputLabel>\r\n        <Select\r\n        value={data.city}\r\n          native\r\n          name=\"city\" onChange={change}\r\n          inputProps={{\r\n            name: 'city',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value=\"Peshawar\">Peshawar</option>\r\n          <option value=\"lahore\">lahore</option>\r\n          <option value=\"Karachi\">Karachi</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Catogary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.catogary}\r\n          name=\"catogary\" onChange={change}\r\n          inputProps={{\r\n            name: 'catogary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Web Developer\">Web Developer</option>\r\n          <option  value=\"mobile Developer\">mobile Developer</option>\r\n          <option  value=\"Desktop Developer\">Desktop Developer</option>\r\n          <option  value=\"SEO\">SEO</option>\r\n          <option  value=\"Graphic Desiger\">Graphic Desiger</option>\r\n          <option  value=\"Content Writer\">Content Writer</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Experience</InputLabel>\r\n        <Select\r\n        \r\n          native\r\n          value={data.experience}\r\n          name=\"experience\" onChange={change}\r\n          inputProps={{\r\n            name: 'experience',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          {[1,2,3,4,5,6,7,8,9,10].map((i)=>\r\n   \r\n   i==1?<option aria-label=\"None\" value={`${i} Year`}>{i} Year</option>:<option aria-label=\"None\" value={`${i} Years`}>{i} Years</option>\r\n  \r\n            )}\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Timimg</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.timing}\r\n          name=\"timing\" onChange={change}\r\n          inputProps={{\r\n            name: 'timing',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"fulltime\" >Full-Time</option>\r\n          <option  value=\"halftime\" >Half-Time</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Salary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.salary}\r\n          name=\"salary\" onChange={change}\r\n          inputProps={{\r\n            name: 'salary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"10k-20k\">10k-20k</option>\r\n          <option  value=\"20k-40k\">20k-40k</option>\r\n          <option  value=\"50k-70k\">50k-70k</option>\r\n          <option  value=\"80k-100k\">80k-100k</option>\r\n          <option  value=\"110k-140k\">110k-140k</option>\r\n          <option  value=\"150k-180k\">150k-180k  </option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.gender}\r\n          name=\"gender\" onChange={change}\r\n          inputProps={{\r\n            name: 'gender',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"No Preference\">No Preference</option>\r\n          <option  value=\"Man\">Man</option>\r\n          <option  value=\"Woman\">Woman</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Minimum Education</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.education}\r\n          name=\"education\" onChange={change}\r\n          inputProps={{\r\n            name: 'education',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Bachelors\">Bachelors</option>\r\n          <option  value=\"Master\">Master</option>\r\n          <option  value=\"PhD\">PhD</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField name=\"position\" value={data  .position} onChange={change} fullWidth label=\"Total Positions\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField name=\"apply\" onChange={change} type=\"date\" fullWidth label=\"Apply Before\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n  \r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\nvalue={data.skills}\r\nname=\"skills\" onChange={change}\r\n  helperText=\"Note:-HTML,CSS,JS\"\r\n  type=\"text\" fullWidth label=\"Skills\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.discription}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"discription\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Discription\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n</Grid>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button type=\"submit\" style={{marginBottom:\"10px\"}} color=\"secondary\" variant=\"contained\">UPDATE Job</Button>\r\n</div>\r\n\r\n\r\n</form>   \r\n      </Typography>\r\n    </Container>\r\n\r\n    <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity=\"success\">\r\n      {msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n\r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction Editintership() {\r\n\r\nconst {userdata,setuserdata}=useContext(Context)\r\nconst url=useRouteMatch().url\r\nconst [intership, setintership] = useState([])\r\n  useEffect(()=>{\r\n\r\n    axios.get(\"/getintership\").then((res)=>{setintership(res.data.filter((i)=>{\r\n      return i.accountID==userdata.id\r\n     })\r\n   )})\r\n  },[])\r\n\r\n\r\n\r\n  const ddelete=(id)=>{\r\n\r\n    axios.post(\"/deleteintersgip\",{id:id})\r\n   axios.get(\"/getintership\").then((res)=>{setintership(res.data.filter((i)=>{\r\n    return i.accountID==userdata.id\r\n   })\r\n )})\r\n\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"xl\">\r\n        <Typography component=\"div\" style={{ height: '100vh' }}>\r\n          <Typography variant=\"h5\" style={{paddingTop:\"15px\"}}><b>View/Edit/Delete INTERSHIP</b></Typography>\r\n          <br/>\r\n\r\n          {intership.length==0?\r\n          <Container maxWidth=\"sm\">\r\n          <Paper component={Box} p=\"12px\">\r\n          <Typography align=\"center\" variant=\"body2\">No Intership has have Register</Typography>\r\n          </Paper>\r\n          </Container>\r\n          :\r\n\r\n          <Grid container spacing={2}>\r\n          \r\n          {intership.map((i)=>\r\n              <Grid item xs={12} sm={6} md={4} >\r\n      <Card >\r\n      <CardHeader\r\n      avatar={\r\n        <Avatar src={i.img}/>\r\n      }\r\n      title={i.intershiptitle}\r\n      subheader={`${i.companyname} ${i.city}`}\r\n      />\r\n      \r\n      <Typography style={{paddingLeft:\"15px\"}} variant=\"body2\" component=\"p\">\r\n      {i.discription.slice(0,219)}....\r\n      </Typography>\r\n      <div>\r\n      \r\n         <div style={{display:\"flex\",marginTop:\"5px\"}}>\r\n      <Typography title=\"last Date\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faCalendarAlt}/>&nbsp;&nbsp;{i.apply}</Typography>\r\n      \r\n      <Typography title=\"Experience\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faBriefcase}/>&nbsp;&nbsp;{i.Intershiptype}</Typography>\r\n      \r\n      <Typography title=\"Timming\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faClock}/>&nbsp;&nbsp;{i.timing}</Typography>  \r\n         </div>\r\n        <CardActions style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n      <Button to={`${url}/${i._id}`} component={LLink}   size=\"small\" variant=\"outlined\" color=\"primary\">edit</Button>\r\n      <Button   onClick={()=>{ddelete(i._id)}}  size=\"small\" variant=\"contained\" color=\"primary\">DELETE</Button>\r\n      </CardActions>\r\n      \r\n      </div>\r\n      \r\n      </Card>\r\n      </Grid>\r\n            \r\n          )}\r\n          </Grid>\r\n\r\n}\r\n\r\n\r\n        </Typography>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction Intershipformedit() {\r\n  \r\nconst id=useParams().id\r\n\r\n  const {userdata,setdatauser}=useContext(Context)  \r\n  const [data, setdata] = useState({\r\n    intershiptitle:\"\",\r\ncity:\"\",\r\ncatogary:\"\",\r\nIntershiptype:\"\",\r\ntiming:\"\",\r\nsalary:\"\",\r\ngender:\"\",\r\nposition:\"\",\r\napply:\"\",\r\nskills:\"\",\r\ndiscription:\"\",\r\ncompanyname:userdata.companyname,\r\naccountID:userdata.id,\r\nimg:userdata.img,\r\nproductID:id\r\n  })\r\n  const change=(e)=>{\r\n    setdata({\r\n      ...data,\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    axios.get(\"/getintership\").then((ress)=>{\r\n\r\n\r\n    const arry=ress.data.find((i)=>{\r\n        return i._id==id\r\n      })\r\n\r\n      setdata(\r\n        {\r\n          intershiptitle:arry.intershiptitle,\r\n      city:arry.city,\r\n      catogary:arry.catogary,\r\n      Intershiptype:arry.Intershiptype,\r\n      timing:arry.timing,\r\n      salary:arry.salary,\r\n      gender:arry.gender,\r\n      position:arry.position,\r\n      apply:arry.apply,\r\n      skills:arry.skills,\r\n      discription:arry.discription,\r\n      companyname:userdata.companyname,\r\n      accountID:userdata.id,\r\n      img:userdata.img,\r\n      productID:id\r\n        }\r\n      )\r\n  })\r\n  },[])\r\n  \r\n  \r\n\r\n  const [msg, setmsg] = useState(\"\")\r\nconst [open, setopen] = useState(false)\r\nconst handleClose = () => {\r\n\r\n  setopen(false)\r\n};\r\n\r\n\r\n  const submit= async(e)=>{\r\ne.preventDefault();\r\nconsole.log(data)\r\n\r\n await axios.post(\"/editintershtip\",data).then((res)=>{setmsg(res.data);setopen(true)})\r\n  }\r\n\r\nconst [salary, setsalary] = useState(false)\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <CssBaseline />\r\n    <Container maxWidth=\"md\">\r\n      <Typography component=\"div\" style={{minHeight: 'calc(100vh - 64px)'}}>\r\n\r\n      <Typography variant=\"h4\" style={{padding:\"20px\",fontWeight:\"bold\",textDecorationColor:\"#011842\",color:\"#011842\",textDecoration:\"underline\"}}>EDIT INTERSHIP</Typography>\r\n\r\n      <form onSubmit={submit}>\r\n<Grid container spacing={2}>\r\n\r\n  <Grid item md={8} sm={8} xs={12}>\r\n  <TextField value={data.intershiptitle} name=\"intershiptitle\" onChange={change} fullWidth label=\"Intership Title\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField value={userdata.companyname} disabled name=\"companyname\" fullWidth label=\"CompanyName\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Select City</InputLabel>\r\n        <Select\r\n        value={data.city}\r\n          native\r\n          name=\"city\" onChange={change}\r\n          inputProps={{\r\n            name: 'city',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value=\"Peshawar\">Peshawar</option>\r\n          <option value=\"lahore\">lahore</option>\r\n          <option value=\"Karachi\">Karachi</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Catogary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.catogary}\r\n          name=\"catogary\" onChange={change}\r\n          inputProps={{\r\n            name: 'catogary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Web Developer\">Web Developer</option>\r\n          <option  value=\"mobile Developer\">mobile Developer</option>\r\n          <option  value=\"Desktop Developer\">Desktop Developer</option>\r\n          <option  value=\"SEO\">SEO</option>\r\n          <option  value=\"Graphic Desiger\">Graphic Desiger</option>\r\n          <option  value=\"Content Writer\">Content Writer</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Intership Type</InputLabel>\r\n        <Select\r\n        \r\n          native\r\n          value={data.Intershiptype}\r\n          name=\"Intershiptype\" onChange={(e)=>{change(e);\r\n            if(e.target.value==\"UnPaid\"){\r\n              setsalary(true)\r\n            }\r\n            else{\r\n              setsalary(false)\r\n            }\r\n            \r\n          }}\r\n          inputProps={{\r\n            name: 'Intershiptype',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  aria-label=\"None\" value=\"Paid\">Paid</option>\r\n          <option  aria-label=\"None\" value=\"UnPaid\">UnPaid</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Timimg</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.timing}\r\n          name=\"timing\" onChange={change}\r\n          inputProps={{\r\n            name: 'timing',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"8AM-2PM\" >8AM-2PM</option>\r\n          <option  value=\"3PM-8PM\" >3PM-8PM</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Salary</InputLabel>\r\n        <Select\r\n        disabled={salary}\r\n          native\r\n          value={data.salary}\r\n          name=\"salary\" onChange={change}\r\n          inputProps={{\r\n            name: 'salary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"10k\">10k</option>\r\n          <option  value=\"20k\">20k</option>\r\n          <option  value=\"30k\">30k</option>\r\n          <option  value=\"40k\">40k</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.gender}\r\n          name=\"gender\" onChange={change}\r\n          inputProps={{\r\n            name: 'gender',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"No Preference\">No Preference</option>\r\n          <option  value=\"Man\">Man</option>\r\n          <option  value=\"Woman\">Woman</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={6} sm={6} xs={12}>\r\n  <TextField name=\"position\" value={data  .position} onChange={change} fullWidth label=\"Total Positions\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  <Grid item md={6} sm={6} xs={12}>\r\n  <TextField name=\"apply\" onChange={change} type=\"date\" fullWidth label=\"Apply Before\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n  \r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\nvalue={data.skills}\r\nname=\"skills\" onChange={change}\r\n  helperText=\"Note:-HTML,CSS,JS\"\r\n  type=\"text\" fullWidth label=\"Skills\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.discription}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"discription\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Discription\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n</Grid>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button type=\"submit\" style={{marginBottom:\"10px\"}} color=\"secondary\" variant=\"contained\">Update Interships</Button>\r\n</div>\r\n\r\n\r\n</form>   \r\n        \r\n\r\n\r\n      </Typography>\r\n    </Container>\r\n    <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity=\"success\">\r\n      {msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n    \r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction Coursepage() {\r\n  const url=useRouteMatch().url;\r\n\r\n  const {userdata,setuserdata}=useContext(Context)\r\n  const useStyles = makeStyles({\r\n    root: {\r\n     \r\n      boxShadow:\"0px 0px 5px -1px rgba(0,0,0,0.75)\"\r\n    },\r\n    media: {\r\n      height: 200,\r\n    },\r\n  });\r\n  const classes = useStyles();  \r\n\r\nconst [dataa, setcourese] = useState([])\r\n  // useEffect(()=>{\r\n\r\n  //   axios.get(\"/getcourse\").then((ress)=>{setcourese(ress.data)})\r\n\r\n  // },[])\r\n\r\n  useEffect(()=>{\r\n\r\n    axios.get(\"/getcourse\").then((res)=>{setcourese(res.data.filter((i)=>{\r\n      return i.accountID==userdata.id\r\n     })\r\n   )})\r\n  },[])\r\n  const ddelete=(id)=>{\r\n\r\n    axios.post(\"/deletecourse\",{id:id})\r\n   axios.get(\"/getcourse\").then((res)=>{setcourese(res.data.filter((i)=>{\r\n    return i.accountID==userdata.id\r\n   })\r\n )})\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n    <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', minHeight: '100vh' }}>\r\n<Typography variant=\"h5\" style={{paddingTop:\"15px\"}}><b>View/Delete/Edit Course</b></Typography>\r\n\r\n\r\n<br/>\r\n\r\n\r\n{dataa.length==0?\r\n          <Container maxWidth=\"sm\">\r\n          <Paper component={Box} p=\"12px\">\r\n          <Typography align=\"center\" variant=\"body2\">No Course has have Register</Typography>\r\n          </Paper>\r\n          </Container>\r\n          :\r\n          <Grid container spacing={2}>\r\n{dataa.map((i)=>\r\n\r\n<Grid item xs={12} md={4}>\r\n<Card className={classes.root}>\r\n\r\n<CardMedia\r\nclassName={classes.media}\r\nimage={i.img}\r\ntitle=\"Contemplative Reptile\"\r\n/>\r\n<CardContent>\r\n<Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n{i.coursetitle}\r\n</Typography>\r\n<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n{i.companyname}  {i.city}\r\n</Typography>\r\n<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n  {i.instractorname}\r\n</Typography>\r\n<br/>\r\n<Typography style={{fontWeight:\"bold\"}} variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n  Discription:-<br/>\r\n  \r\n</Typography>\r\n<Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n{i.discription.slice(0,200)}.....\r\n  \r\n</Typography>\r\n\r\n</CardContent>\r\n\r\n<CardActions style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n\r\n<Box fontWeight=\"bold\" fontSize=\"h5.fontSize\">{i.price}</Box>\r\n  \r\n<div>\r\n<Button to={`${url}/${i._id}`} style={{marginRight:\"10px\"}} component={LLink} variant=\"contained\" size=\"small\" color=\"primary\">\r\nLearn More\r\n</Button>\r\n\r\n<Button onClick={()=>{ddelete(i._id)}}  variant=\"outlined\" size=\"small\" color=\"primary\">\r\n Delete\r\n</Button>\r\n\r\n\r\n</div>\r\n</CardActions>\r\n</Card>\r\n\r\n</Grid>\r\n\r\n )} \r\n      </Grid>\r\n          }\r\n\r\n    </Typography>\r\n  </Container>\r\n  )\r\n}\r\n\r\nexport default Account\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Courseform() {\r\n  \r\nconst id=useParams().id;\r\n\r\n\r\n\r\n  const {userdata,setdatauser}=useContext(Context)\r\n  \r\n  const [data, setdata] = useState({\r\n    coursetitle:null,\r\ncity:\"\",\r\ncatogary:\"\",\r\nprice:\"\",\r\ntiming:\"\",\r\ninstractorname:\"\",\r\nRequirements:\"\",\r\nlearn:\"\",\r\ncontent:\"\",\r\ndiscription:\"\",\r\naccountID:userdata.id,\r\nnumber:\"\",\r\n  })\r\n  const change=(e)=>{\r\n    setdata({\r\n      ...data,\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n\r\n\r\n\r\n  const [msg, setmsg] = useState(\"\")\r\nconst [open, setopen] = useState(false)\r\nconst [selectimg, setselectimg] = useState({})\r\n\r\n\r\nconst img=(e)=>{\r\nsetselectimg(e.target.files[0])\r\n  //console.log(e.target.files[0])\r\n}\r\nconst handleClose = () => {\r\n  setopen(false)\r\n};\r\n\r\n\r\n  const submit= async(e)=>{\r\ne.preventDefault();\r\nconst formData=new FormData();\r\nformData.append(\"coursetitle\",data.coursetitle)\r\nformData.append(\"city\",data.city)\r\nformData.append(\"catogary\",data.catogary)\r\nformData.append(\"price\",data.price)\r\nformData.append(\"timing\",data.timing)\r\nformData.append(\"instractorname\",data.instractorname)\r\nformData.append(\"Requirements\",data.Requirements)\r\nformData.append(\"learn\",data.learn)\r\nformData.append(\"content\",data.content)\r\nformData.append(\"discription\",data.discription)\r\nformData.append(\"accountID\",userdata.id)\r\nformData.append(\"companyname\",userdata.companyname)\r\nformData.append(\"selectimg\",selectimg)\r\nformData.append(\"number\",userdata.number)\r\nformData.append(\"productID\",id)\r\n\r\n\r\n await axios.post(\"/updatecourse\",formData).then((res)=>{setmsg(res.data);setopen(true)})\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n  \r\n    axios.get(\"/getcourse\").then((res)=>{\r\n     const arry= res.data.find((i)=>{\r\n            return i._id==id\r\n      })\r\n\r\n      console.log(arry.instractorname)\r\n      console.log(arry)\r\n    setdata({\r\n      coursetitle:arry.coursetitle,\r\n      city:arry.city,\r\n      catogary:arry.catogary,\r\n      price:arry.price,\r\n      timing:arry.timing,\r\n      instractorname:arry.instractorname,\r\n      Requirements:arry.Requirements,\r\n      learn:arry.learn,\r\n      content:arry.content,\r\n      discription:arry.discription,\r\n      accountID:userdata.id,\r\n      number:arry.number,\r\n    })\r\n    })\r\n  },[])\r\n  \r\n  return (\r\n    <React.Fragment>\r\n    <CssBaseline />\r\n    <Container maxWidth=\"md\">\r\n      <Typography component=\"div\" style={{minHeight: 'calc(100vh - 64px)'}}>\r\n\r\n      <Typography variant=\"h4\" style={{padding:\"20px\",fontWeight:\"bold\",textDecorationColor:\"#011842\",color:\"#011842\",textDecoration:\"underline\"}}>ADD COURSE</Typography>\r\n\r\n      <form onSubmit={submit}>\r\n<Grid container spacing={2}>\r\n\r\n  <Grid item md={8} sm={8} xs={12}>\r\n  <TextField value={data.coursetitle} name=\"coursetitle\" onChange={change} fullWidth label=\"Course Title\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  \r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField value={userdata.companyname} disabled name=\"companyname\" fullWidth label=\"CompanyName\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField onChange={change} value={data.instractorname}  name=\"instractorname\" fullWidth label=\"Instractor Name\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField onChange={change} value={data.price}  name=\"price\" fullWidth label=\"Price\" required variant=\"outlined\" helperText=\" Example:-10000 PKR\"/>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Select City</InputLabel>\r\n        <Select\r\n        value={data.city}\r\n          native\r\n          name=\"city\" onChange={change}\r\n          inputProps={{\r\n            name: 'city',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value=\"Peshawar\">Peshawar</option>\r\n          <option value=\"lahore\">lahore</option>\r\n          <option value=\"Karachi\">Karachi</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Catogary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.catogary}\r\n          name=\"catogary\" onChange={change}\r\n          inputProps={{\r\n            name: 'catogary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Web Developer\">Web Developer</option>\r\n          <option  value=\"mobile Developer\">mobile Developer</option>\r\n          <option  value=\"Desktop Developer\">Desktop Developer</option>\r\n          <option  value=\"SEO\">SEO</option>\r\n          <option  value=\"Graphic Desiger\">Graphic Desiger</option>\r\n          <option  value=\"Content Writer\">Content Writer</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Timimg</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.timing}\r\n          name=\"timing\" onChange={change}\r\n          inputProps={{\r\n            name: 'timing',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"10AM-11AM\" >10AM-11AM</option>\r\n          <option  value=\"3PM-4PM\" >3PM-4PM</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n    <TextField  value={data.number}\r\n          name=\"number\" onChange={change} fullWidth variant=\"outlined\" helperText=\"Example:- +923217836328\" label=\"WhatsApp Number\" required type=\"number\"/>\r\n  </Grid>\r\n  \r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.discription}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"discription\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Discription\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.learn}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"learn\" onChange={change}\r\n  type=\"text\" fullWidth label=\" What you'll learn\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.content}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"content\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Course Content\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  \r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.Requirements}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"Requirements\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Requirements\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n</Grid>\r\n<div style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n<input accept=\"image/*\" type=\"file\" onChange={img}/>\r\n<Button type=\"submit\" style={{marginBottom:\"10px\"}} color=\"secondary\" variant=\"contained\">Update Course</Button>\r\n</div>\r\n\r\n\r\n</form>   \r\n        \r\n\r\n\r\n      </Typography>\r\n    </Container>\r\n    <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity=\"success\">\r\n      {msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n    \r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\MERN stack\\sh1\\client\\src\\components\\IntershipsCards.js",["242","243","244","245"],"import React from 'react';\r\nimport {Avatar,CardHeader,makeStyles,Card,CardActions,Grid,Button,Typography  } from '@material-ui/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCalendarAlt,faBriefcase,faMoneyBillWave,faClock} from '@fortawesome/free-solid-svg-icons'\r\nimport { BrowserRouter as Router, Switch,useRouteMatch, Route, Link as LLink} from \"react-router-dom\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    boxShadow:\"0px 0px 5px -1px rgba(0,0,0,0.75)\"\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default function IntershipsCards(props) {\r\n  const classes = useStyles();\r\n  const url=useRouteMatch().url;\r\n  \r\n  return (\r\n      <>\r\n      <Grid container spacing={2}>\r\n          \r\n    {props.data.map((i)=>\r\n        <Grid item xs={12} sm={6} md={4} >\r\n<Card  className={classes.root}>\r\n<CardHeader\r\navatar={\r\n  <Avatar src={i.img}/>\r\n}\r\ntitle={i.intershiptitle}\r\nsubheader={`${i.companyname} ${i.city}`}\r\n/>\r\n\r\n<Typography style={{paddingLeft:\"15px\"}} variant=\"body2\" component=\"p\">\r\n{i.discription.slice(0,219)}....\r\n</Typography>\r\n<div>\r\n\r\n   <div style={{display:\"flex\",marginTop:\"5px\"}}>\r\n<Typography title=\"last Date\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faCalendarAlt}/>&nbsp;&nbsp;{i.apply}</Typography>\r\n\r\n<Typography title=\"Experience\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faBriefcase}/>&nbsp;&nbsp;{i.Intershiptype}</Typography>\r\n\r\n<Typography title=\"Timming\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faClock}/>&nbsp;&nbsp;{i.timing}</Typography>  \r\n   </div>\r\n  <CardActions style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button component={LLink} to={`${url}/${i._id}`}  size=\"small\" variant=\"outlined\" color=\"primary\">SEE More</Button>\r\n</CardActions>\r\n\r\n</div>\r\n\r\n</Card>\r\n</Grid>\r\n      \r\n    )}\r\n    </Grid>\r\n    <br/>\r\n    </>\r\n  );\r\n}\r\n","D:\\MERN stack\\sh1\\client\\src\\components\\about.js",[],"D:\\MERN stack\\sh1\\client\\src\\components\\Mobiledown.js",["246","247","248","249"],"D:\\MERN stack\\sh1\\client\\src\\components\\Segisstion.js",["250","251","252","253"],"import React from 'react'\r\nimport {Grid,Paper, Typography,Button,Box} from \"@material-ui/core\"\r\nimport {Link, useRouteMatch,useHistory} from \"react-router-dom\"\r\nfunction Segisstion(props) {\r\n\r\n  console.log(props.path2)\r\n\r\n    function shuffle(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n      \r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n      \r\n          // Pick a remaining element...\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n      \r\n          // And swap it with the current element.\r\n          temporaryValue = array[currentIndex];\r\n          array[currentIndex] = array[randomIndex];\r\n          array[randomIndex] = temporaryValue;\r\n        }\r\n      \r\n        return array; \r\n      }\r\n      \r\n      // Used like so\r\n      var arr = [2, 11, 37, 42];\r\n      shuffle(props.arrry);\r\n\r\n\r\n\r\n      \r\n        const  ary=props.arrry\r\n\r\n const aynew= ary.filter((i,v)=>{\r\n        return v<=2\r\n   })\r\n    \r\n    console.log(aynew)\r\n    \r\n    return (\r\n        <>\r\n\r\n<Grid container spacing={2} >\r\n\r\n{aynew.map((i)=>\r\n\r\n\r\n<Grid item xs={12}  >\r\n<Paper  style={{height:\"auto\",padding:\"10px\",boxSizing:\"border-box\"}}>\r\n<Typography style={{fontSize:\"15px\"}}><b>{i.jobtitle}</b></Typography>\r\n<Typography variant=\"body2\" color=\"textSecondary\">{i.companyname}</Typography><br/>\r\n<Typography variant=\"body2\" color=\"textSecondary\"><b>Skills:-</b>{i.skills }</Typography>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button   component={Link} to={`${props.path2}/${i._id}`} textAlign=\"center\" mt=\"10px\" variant=\"contained\" color=\"secondary\" size=\"small\">See More</Button>\r\n</div>\r\n</Paper>\r\n</Grid>\r\n\r\n\r\n\r\n)}\r\n\r\n\r\n</Grid>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Segisstion\r\n","D:\\MERN stack\\sh1\\client\\src\\components\\Segueestion2.js",["254","255"],"import React from 'react'\r\nimport {Grid,Paper, Typography,Button,Box} from \"@material-ui/core\"\r\nimport {Link} from \"react-router-dom\"\r\nfunction Segisstion2(props) {\r\n\r\n  \r\n//console.log(props.path)\r\n    function shuffle(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n      \r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n      \r\n          // Pick a remaining element...\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n      \r\n          // And swap it with the current element.\r\n          temporaryValue = array[currentIndex];\r\n          array[currentIndex] = array[randomIndex];\r\n          array[randomIndex] = temporaryValue;\r\n        }\r\n      \r\n        return array; \r\n      }\r\n      \r\n      // Used like so\r\n      var arr = [2, 11, 37, 42];\r\n      shuffle(props.arrry);\r\n\r\n\r\n\r\n      \r\n        const  ary=props.arrry\r\n\r\n const aynew= ary.filter((i,v)=>{\r\n        return v<=2\r\n   })\r\n    \r\n    console.log(aynew)\r\n    \r\n    return (\r\n        <>\r\n\r\n<Grid container spacing={2} >\r\n\r\n{aynew.map((i)=>\r\n\r\n\r\n<Grid item xs={12}  >\r\n<Paper  style={{height:\"auto\",\r\npadding:\"10px\",boxSizing:\"border-box\"}}>\r\n<Typography style={{fontSize:\"15px\"}}><b>{i.intershiptitle}</b></Typography>\r\n<Typography variant=\"body2\" color=\"textSecondary\">{i.companyname}</Typography><br/>\r\n<Typography variant=\"body2\" color=\"textSecondary\"><b>Skills:-</b>{i.skills }</Typography>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button to={`${props.path}/${i._id}`} textAlign=\"center\" component={Link} mt=\"10px\" variant=\"contained\" color=\"secondary\" size=\"small\">See More</Button>\r\n</div>\r\n</Paper>\r\n</Grid>\r\n\r\n\r\n\r\n)}\r\n\r\n\r\n</Grid>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Segisstion2\r\n","D:\\MERN stack\\sh1\\client\\src\\components\\Segisstion3.js",["256","257"],"import React from 'react'\r\nimport {Grid,Paper, Typography,Button,Box} from \"@material-ui/core\"\r\nimport {Link} from \"react-router-dom\"\r\nfunction Segisstion3(props) {\r\n\r\n  \r\nconsole.log(props.path)\r\n    function shuffle(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n      \r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n      \r\n          // Pick a remaining element...\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n      \r\n          // And swap it with the current element.\r\n          temporaryValue = array[currentIndex];\r\n          array[currentIndex] = array[randomIndex];\r\n          array[randomIndex] = temporaryValue;\r\n        }\r\n      \r\n        return array; \r\n      }\r\n      \r\n      // Used like so\r\n      var arr = [2, 11, 37, 42];\r\n      shuffle(props.arrry);\r\n\r\n\r\n\r\n      \r\n        const  ary=props.arrry\r\n\r\n const aynew= ary.filter((i,v)=>{\r\n        return v<=2\r\n   })\r\n    \r\n    console.log(aynew)\r\n    \r\n    return (\r\n        <>\r\n\r\n<Grid container spacing={2} >\r\n\r\n{aynew.map((i)=>\r\n\r\n\r\n<Grid item xs={12}  >\r\n<Paper  style={{height:\"auto\",padding:\"10px\",boxSizing:\"border-box\"}}>\r\n    \r\n<Typography style={{fontSize:\"15px\"}}><b>{i.coursetitle}</b></Typography>\r\n<Typography variant=\"body2\" color=\"textSecondary\">{i.companyname}</Typography>\r\n<Typography variant=\"body2\" color=\"textSecondary\">{i.content.split(0,100) }</Typography><br/>\r\n\r\n<Typography variant=\"body2\" color=\"textSecondary\"><b>Price:-{i.price}</b></Typography><br/>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button \r\nto={`${props.path}/${i._id}`} \r\ntextAlign=\"center\" component={Link} mt=\"4px\" variant=\"contained\" color=\"secondary\" size=\"small\">See More</Button>\r\n</div>\r\n</Paper>\r\n</Grid>\r\n\r\n\r\n\r\n)}\r\n\r\n\r\n</Grid>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Segisstion3","D:\\MERN stack\\sh1\\client\\src\\components\\Customhook.js",[],{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":13,"column":35,"nodeType":"264","messageId":"265","endLine":13,"endColumn":41},{"ruleId":"262","severity":1,"message":"266","line":13,"column":50,"nodeType":"264","messageId":"265","endLine":13,"endColumn":54},{"ruleId":"262","severity":1,"message":"267","line":3,"column":155,"nodeType":"264","messageId":"265","endLine":3,"endColumn":165},{"ruleId":"262","severity":1,"message":"268","line":4,"column":27,"nodeType":"264","messageId":"265","endLine":4,"endColumn":33},{"ruleId":"262","severity":1,"message":"263","line":4,"column":35,"nodeType":"264","messageId":"265","endLine":4,"endColumn":41},{"ruleId":"262","severity":1,"message":"269","line":4,"column":43,"nodeType":"264","messageId":"265","endLine":4,"endColumn":48},{"ruleId":"262","severity":1,"message":"270","line":9,"column":32,"nodeType":"264","messageId":"265","endLine":9,"endColumn":44},{"ruleId":"262","severity":1,"message":"271","line":11,"column":9,"nodeType":"264","messageId":"265","endLine":11,"endColumn":13},{"ruleId":"262","severity":1,"message":"272","line":11,"column":14,"nodeType":"264","messageId":"265","endLine":11,"endColumn":18},{"ruleId":"262","severity":1,"message":"273","line":11,"column":19,"nodeType":"264","messageId":"265","endLine":11,"endColumn":27},{"ruleId":"262","severity":1,"message":"274","line":11,"column":28,"nodeType":"264","messageId":"265","endLine":11,"endColumn":40},{"ruleId":"262","severity":1,"message":"275","line":11,"column":41,"nodeType":"264","messageId":"265","endLine":11,"endColumn":45},{"ruleId":"276","severity":1,"message":"277","line":231,"column":25,"nodeType":"278","messageId":"279","endLine":231,"endColumn":27},{"ruleId":"280","severity":1,"message":"281","line":256,"column":30,"nodeType":"282","messageId":"283","endLine":256,"endColumn":31},{"ruleId":"284","severity":1,"message":"285","line":416,"column":38,"nodeType":"286","endLine":416,"endColumn":72},{"ruleId":"262","severity":1,"message":"287","line":1,"column":34,"nodeType":"264","messageId":"265","endLine":1,"endColumn":44},{"ruleId":"262","severity":1,"message":"268","line":4,"column":27,"nodeType":"264","messageId":"265","endLine":4,"endColumn":33},{"ruleId":"262","severity":1,"message":"263","line":4,"column":35,"nodeType":"264","messageId":"265","endLine":4,"endColumn":41},{"ruleId":"262","severity":1,"message":"266","line":5,"column":9,"nodeType":"264","messageId":"265","endLine":5,"endColumn":13},{"ruleId":"262","severity":1,"message":"288","line":5,"column":26,"nodeType":"264","messageId":"265","endLine":5,"endColumn":29},{"ruleId":"262","severity":1,"message":"289","line":9,"column":51,"nodeType":"264","messageId":"265","endLine":9,"endColumn":58},{"ruleId":"290","severity":1,"message":"291","line":47,"column":13,"nodeType":"292","endLine":64,"endColumn":4},{"ruleId":"276","severity":1,"message":"277","line":49,"column":17,"nodeType":"278","messageId":"279","endLine":49,"endColumn":19},{"ruleId":"276","severity":1,"message":"277","line":86,"column":13,"nodeType":"278","messageId":"279","endLine":86,"endColumn":15},{"ruleId":"276","severity":1,"message":"277","line":86,"column":37,"nodeType":"278","messageId":"279","endLine":86,"endColumn":39},{"ruleId":"276","severity":1,"message":"277","line":86,"column":63,"nodeType":"278","messageId":"279","endLine":86,"endColumn":65},{"ruleId":"276","severity":1,"message":"277","line":253,"column":19,"nodeType":"278","messageId":"279","endLine":253,"endColumn":21},{"ruleId":"276","severity":1,"message":"277","line":263,"column":21,"nodeType":"278","messageId":"279","endLine":263,"endColumn":23},{"ruleId":"290","severity":1,"message":"293","line":268,"column":3,"nodeType":"294","endLine":268,"endColumn":5,"suggestions":"295"},{"ruleId":"262","severity":1,"message":"296","line":3,"column":8,"nodeType":"264","messageId":"265","endLine":3,"endColumn":15},{"ruleId":"262","severity":1,"message":"289","line":7,"column":51,"nodeType":"264","messageId":"265","endLine":7,"endColumn":58},{"ruleId":"262","severity":1,"message":"266","line":8,"column":9,"nodeType":"264","messageId":"265","endLine":8,"endColumn":13},{"ruleId":"262","severity":1,"message":"288","line":8,"column":26,"nodeType":"264","messageId":"265","endLine":8,"endColumn":29},{"ruleId":"262","severity":1,"message":"268","line":9,"column":27,"nodeType":"264","messageId":"265","endLine":9,"endColumn":33},{"ruleId":"262","severity":1,"message":"263","line":9,"column":45,"nodeType":"264","messageId":"265","endLine":9,"endColumn":51},{"ruleId":"290","severity":1,"message":"291","line":30,"column":13,"nodeType":"292","endLine":43,"endColumn":4},{"ruleId":"276","severity":1,"message":"277","line":32,"column":17,"nodeType":"278","messageId":"279","endLine":32,"endColumn":19},{"ruleId":"262","severity":1,"message":"297","line":47,"column":9,"nodeType":"264","messageId":"265","endLine":47,"endColumn":12},{"ruleId":"276","severity":1,"message":"277","line":72,"column":13,"nodeType":"278","messageId":"279","endLine":72,"endColumn":15},{"ruleId":"276","severity":1,"message":"277","line":72,"column":44,"nodeType":"278","messageId":"279","endLine":72,"endColumn":46},{"ruleId":"276","severity":1,"message":"277","line":72,"column":70,"nodeType":"278","messageId":"279","endLine":72,"endColumn":72},{"ruleId":"276","severity":1,"message":"277","line":246,"column":17,"nodeType":"278","messageId":"279","endLine":246,"endColumn":19},{"ruleId":"276","severity":1,"message":"277","line":256,"column":23,"nodeType":"278","messageId":"279","endLine":256,"endColumn":25},{"ruleId":"290","severity":1,"message":"293","line":261,"column":5,"nodeType":"294","endLine":261,"endColumn":7,"suggestions":"298"},{"ruleId":"262","severity":1,"message":"299","line":275,"column":9,"nodeType":"264","messageId":"265","endLine":275,"endColumn":13},{"ruleId":"276","severity":1,"message":"277","line":302,"column":23,"nodeType":"278","messageId":"279","endLine":302,"endColumn":25},{"ruleId":"262","severity":1,"message":"288","line":10,"column":8,"nodeType":"264","messageId":"265","endLine":10,"endColumn":11},{"ruleId":"276","severity":1,"message":"277","line":110,"column":18,"nodeType":"278","messageId":"279","endLine":110,"endColumn":20},{"ruleId":"262","severity":1,"message":"300","line":8,"column":8,"nodeType":"264","messageId":"265","endLine":8,"endColumn":24},{"ruleId":"262","severity":1,"message":"301","line":9,"column":8,"nodeType":"264","messageId":"265","endLine":9,"endColumn":16},{"ruleId":"262","severity":1,"message":"288","line":12,"column":8,"nodeType":"264","messageId":"265","endLine":12,"endColumn":11},{"ruleId":"262","severity":1,"message":"302","line":102,"column":19,"nodeType":"264","messageId":"265","endLine":102,"endColumn":30},{"ruleId":"276","severity":1,"message":"277","line":103,"column":20,"nodeType":"278","messageId":"279","endLine":103,"endColumn":22},{"ruleId":"262","severity":1,"message":"266","line":3,"column":47,"nodeType":"264","messageId":"265","endLine":3,"endColumn":51},{"ruleId":"262","severity":1,"message":"288","line":3,"column":52,"nodeType":"264","messageId":"265","endLine":3,"endColumn":55},{"ruleId":"262","severity":1,"message":"268","line":6,"column":27,"nodeType":"264","messageId":"265","endLine":6,"endColumn":33},{"ruleId":"262","severity":1,"message":"263","line":6,"column":35,"nodeType":"264","messageId":"265","endLine":6,"endColumn":41},{"ruleId":"290","severity":1,"message":"291","line":27,"column":15,"nodeType":"292","endLine":39,"endColumn":6},{"ruleId":"276","severity":1,"message":"277","line":30,"column":19,"nodeType":"278","messageId":"279","endLine":30,"endColumn":21},{"ruleId":"276","severity":1,"message":"277","line":64,"column":15,"nodeType":"278","messageId":"279","endLine":64,"endColumn":17},{"ruleId":"276","severity":1,"message":"277","line":64,"column":39,"nodeType":"278","messageId":"279","endLine":64,"endColumn":41},{"ruleId":"276","severity":1,"message":"277","line":200,"column":19,"nodeType":"278","messageId":"279","endLine":200,"endColumn":21},{"ruleId":"276","severity":1,"message":"277","line":210,"column":25,"nodeType":"278","messageId":"279","endLine":210,"endColumn":27},{"ruleId":"290","severity":1,"message":"293","line":215,"column":7,"nodeType":"294","endLine":215,"endColumn":9,"suggestions":"303"},{"ruleId":"262","severity":1,"message":"304","line":13,"column":8,"nodeType":"264","messageId":"265","endLine":13,"endColumn":17},{"ruleId":"262","severity":1,"message":"305","line":14,"column":8,"nodeType":"264","messageId":"265","endLine":14,"endColumn":16},{"ruleId":"262","severity":1,"message":"306","line":19,"column":8,"nodeType":"264","messageId":"265","endLine":19,"endColumn":18},{"ruleId":"276","severity":1,"message":"277","line":80,"column":24,"nodeType":"278","messageId":"279","endLine":80,"endColumn":26},{"ruleId":"307","severity":1,"message":"308","line":119,"column":10,"nodeType":"294","messageId":"309","endLine":156,"endColumn":8},{"ruleId":"262","severity":1,"message":"310","line":1,"column":24,"nodeType":"264","messageId":"265","endLine":1,"endColumn":37},{"ruleId":"262","severity":1,"message":"288","line":2,"column":26,"nodeType":"264","messageId":"265","endLine":2,"endColumn":29},{"ruleId":"262","severity":1,"message":"311","line":3,"column":8,"nodeType":"264","messageId":"265","endLine":3,"endColumn":12},{"ruleId":"262","severity":1,"message":"312","line":13,"column":7,"nodeType":"264","messageId":"265","endLine":13,"endColumn":9},{"ruleId":"262","severity":1,"message":"313","line":2,"column":16,"nodeType":"264","messageId":"265","endLine":2,"endColumn":25},{"ruleId":"262","severity":1,"message":"268","line":3,"column":27,"nodeType":"264","messageId":"265","endLine":3,"endColumn":33},{"ruleId":"262","severity":1,"message":"263","line":3,"column":35,"nodeType":"264","messageId":"265","endLine":3,"endColumn":41},{"ruleId":"262","severity":1,"message":"269","line":3,"column":57,"nodeType":"264","messageId":"265","endLine":3,"endColumn":62},{"ruleId":"262","severity":1,"message":"314","line":1,"column":15,"nodeType":"264","messageId":"265","endLine":1,"endColumn":24},{"ruleId":"262","severity":1,"message":"315","line":1,"column":25,"nodeType":"264","messageId":"265","endLine":1,"endColumn":33},{"ruleId":"262","severity":1,"message":"316","line":4,"column":8,"nodeType":"264","messageId":"265","endLine":4,"endColumn":22},{"ruleId":"262","severity":1,"message":"317","line":10,"column":8,"nodeType":"264","messageId":"265","endLine":10,"endColumn":13},{"ruleId":"262","severity":1,"message":"268","line":13,"column":27,"nodeType":"264","messageId":"265","endLine":13,"endColumn":33},{"ruleId":"262","severity":1,"message":"263","line":13,"column":35,"nodeType":"264","messageId":"265","endLine":13,"endColumn":41},{"ruleId":"262","severity":1,"message":"318","line":13,"column":56,"nodeType":"264","messageId":"265","endLine":13,"endColumn":65},{"ruleId":"262","severity":1,"message":"269","line":13,"column":67,"nodeType":"264","messageId":"265","endLine":13,"endColumn":72},{"ruleId":"262","severity":1,"message":"268","line":2,"column":26,"nodeType":"264","messageId":"265","endLine":2,"endColumn":32},{"ruleId":"262","severity":1,"message":"263","line":2,"column":40,"nodeType":"264","messageId":"265","endLine":2,"endColumn":46},{"ruleId":"262","severity":1,"message":"302","line":15,"column":21,"nodeType":"264","messageId":"265","endLine":15,"endColumn":32},{"ruleId":"276","severity":1,"message":"277","line":17,"column":18,"nodeType":"278","messageId":"279","endLine":17,"endColumn":20},{"ruleId":"262","severity":1,"message":"302","line":190,"column":21,"nodeType":"264","messageId":"265","endLine":190,"endColumn":32},{"ruleId":"262","severity":1,"message":"319","line":205,"column":11,"nodeType":"264","messageId":"265","endLine":205,"endColumn":14},{"ruleId":"262","severity":1,"message":"320","line":278,"column":19,"nodeType":"264","messageId":"265","endLine":278,"endColumn":30},{"ruleId":"276","severity":1,"message":"277","line":399,"column":5,"nodeType":"278","messageId":"279","endLine":399,"endColumn":7},{"ruleId":"321","severity":1,"message":"322","line":492,"column":37,"nodeType":"323","messageId":"324","endLine":492,"endColumn":52,"fix":"325"},{"ruleId":"326","severity":1,"message":"327","line":528,"column":3,"nodeType":"328","endLine":528,"endColumn":11},{"ruleId":"262","severity":1,"message":"320","line":558,"column":19,"nodeType":"264","messageId":"265","endLine":558,"endColumn":30},{"ruleId":"276","severity":1,"message":"277","line":676,"column":30,"nodeType":"278","messageId":"279","endLine":676,"endColumn":32},{"ruleId":"321","severity":1,"message":"322","line":759,"column":37,"nodeType":"323","messageId":"324","endLine":759,"endColumn":52,"fix":"329"},{"ruleId":"326","severity":1,"message":"327","line":795,"column":3,"nodeType":"328","endLine":795,"endColumn":11},{"ruleId":"262","severity":1,"message":"320","line":829,"column":19,"nodeType":"264","messageId":"265","endLine":829,"endColumn":30},{"ruleId":"326","severity":1,"message":"327","line":1005,"column":3,"nodeType":"328","endLine":1005,"endColumn":11},{"ruleId":"326","severity":1,"message":"327","line":1021,"column":3,"nodeType":"328","endLine":1021,"endColumn":11},{"ruleId":"326","severity":1,"message":"327","line":1039,"column":3,"nodeType":"328","endLine":1039,"endColumn":11},{"ruleId":"326","severity":1,"message":"327","line":1058,"column":3,"nodeType":"328","endLine":1058,"endColumn":11},{"ruleId":"276","severity":1,"message":"277","line":1092,"column":25,"nodeType":"278","messageId":"279","endLine":1092,"endColumn":27},{"ruleId":"290","severity":1,"message":"330","line":1095,"column":5,"nodeType":"294","endLine":1095,"endColumn":7,"suggestions":"331"},{"ruleId":"262","severity":1,"message":"302","line":1096,"column":19,"nodeType":"264","messageId":"265","endLine":1096,"endColumn":30},{"ruleId":"262","severity":1,"message":"299","line":1105,"column":9,"nodeType":"264","messageId":"265","endLine":1105,"endColumn":13},{"ruleId":"276","severity":1,"message":"277","line":1112,"column":21,"nodeType":"278","messageId":"279","endLine":1112,"endColumn":23},{"ruleId":"276","severity":1,"message":"277","line":1123,"column":23,"nodeType":"278","messageId":"279","endLine":1123,"endColumn":25},{"ruleId":"262","severity":1,"message":"320","line":1185,"column":19,"nodeType":"264","messageId":"265","endLine":1185,"endColumn":30},{"ruleId":"290","severity":1,"message":"291","line":1190,"column":14,"nodeType":"292","endLine":1213,"endColumn":4},{"ruleId":"290","severity":1,"message":"332","line":1213,"column":5,"nodeType":"294","endLine":1213,"endColumn":7,"suggestions":"333"},{"ruleId":"276","severity":1,"message":"277","line":1340,"column":5,"nodeType":"278","messageId":"279","endLine":1340,"endColumn":7},{"ruleId":"321","severity":1,"message":"322","line":1433,"column":37,"nodeType":"323","messageId":"324","endLine":1433,"endColumn":52,"fix":"334"},{"ruleId":"326","severity":1,"message":"327","line":1469,"column":3,"nodeType":"328","endLine":1469,"endColumn":11},{"ruleId":"262","severity":1,"message":"302","line":1496,"column":17,"nodeType":"264","messageId":"265","endLine":1496,"endColumn":28},{"ruleId":"276","severity":1,"message":"277","line":1502,"column":25,"nodeType":"278","messageId":"279","endLine":1502,"endColumn":27},{"ruleId":"290","severity":1,"message":"330","line":1505,"column":5,"nodeType":"294","endLine":1505,"endColumn":7,"suggestions":"335"},{"ruleId":"276","severity":1,"message":"277","line":1513,"column":23,"nodeType":"278","messageId":"279","endLine":1513,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":1527,"column":28,"nodeType":"278","messageId":"279","endLine":1527,"endColumn":30},{"ruleId":"262","severity":1,"message":"320","line":1588,"column":19,"nodeType":"264","messageId":"265","endLine":1588,"endColumn":30},{"ruleId":"276","severity":1,"message":"277","line":1618,"column":21,"nodeType":"278","messageId":"279","endLine":1618,"endColumn":23},{"ruleId":"290","severity":1,"message":"332","line":1641,"column":5,"nodeType":"294","endLine":1641,"endColumn":7,"suggestions":"336"},{"ruleId":"276","severity":1,"message":"277","line":1736,"column":30,"nodeType":"278","messageId":"279","endLine":1736,"endColumn":32},{"ruleId":"321","severity":1,"message":"322","line":1819,"column":37,"nodeType":"323","messageId":"324","endLine":1819,"endColumn":52,"fix":"337"},{"ruleId":"326","severity":1,"message":"327","line":1855,"column":3,"nodeType":"328","endLine":1855,"endColumn":11},{"ruleId":"262","severity":1,"message":"302","line":1885,"column":19,"nodeType":"264","messageId":"265","endLine":1885,"endColumn":30},{"ruleId":"276","severity":1,"message":"277","line":1907,"column":25,"nodeType":"278","messageId":"279","endLine":1907,"endColumn":27},{"ruleId":"290","severity":1,"message":"330","line":1910,"column":5,"nodeType":"294","endLine":1910,"endColumn":7,"suggestions":"338"},{"ruleId":"276","severity":1,"message":"277","line":1915,"column":23,"nodeType":"278","messageId":"279","endLine":1915,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":1931,"column":14,"nodeType":"278","messageId":"279","endLine":1931,"endColumn":16},{"ruleId":"262","severity":1,"message":"320","line":2013,"column":19,"nodeType":"264","messageId":"265","endLine":2013,"endColumn":30},{"ruleId":"276","severity":1,"message":"277","line":2080,"column":25,"nodeType":"278","messageId":"279","endLine":2080,"endColumn":27},{"ruleId":"290","severity":1,"message":"339","line":2100,"column":5,"nodeType":"294","endLine":2100,"endColumn":7,"suggestions":"340"},{"ruleId":"326","severity":1,"message":"327","line":2214,"column":3,"nodeType":"328","endLine":2214,"endColumn":11},{"ruleId":"326","severity":1,"message":"327","line":2230,"column":3,"nodeType":"328","endLine":2230,"endColumn":11},{"ruleId":"326","severity":1,"message":"327","line":2248,"column":3,"nodeType":"328","endLine":2248,"endColumn":11},{"ruleId":"326","severity":1,"message":"327","line":2267,"column":3,"nodeType":"328","endLine":2267,"endColumn":11},{"ruleId":"262","severity":1,"message":"341","line":4,"column":35,"nodeType":"264","messageId":"265","endLine":4,"endColumn":50},{"ruleId":"262","severity":1,"message":"268","line":5,"column":27,"nodeType":"264","messageId":"265","endLine":5,"endColumn":33},{"ruleId":"262","severity":1,"message":"263","line":5,"column":35,"nodeType":"264","messageId":"265","endLine":5,"endColumn":41},{"ruleId":"262","severity":1,"message":"269","line":5,"column":57,"nodeType":"264","messageId":"265","endLine":5,"endColumn":62},{"ruleId":"262","severity":1,"message":"342","line":5,"column":8,"nodeType":"264","messageId":"265","endLine":5,"endColumn":19},{"ruleId":"262","severity":1,"message":"343","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":20},{"ruleId":"262","severity":1,"message":"344","line":7,"column":8,"nodeType":"264","messageId":"265","endLine":7,"endColumn":22},{"ruleId":"262","severity":1,"message":"275","line":8,"column":41,"nodeType":"264","messageId":"265","endLine":8,"endColumn":45},{"ruleId":"262","severity":1,"message":"288","line":2,"column":39,"nodeType":"264","messageId":"265","endLine":2,"endColumn":42},{"ruleId":"262","severity":1,"message":"345","line":3,"column":15,"nodeType":"264","messageId":"265","endLine":3,"endColumn":28},{"ruleId":"262","severity":1,"message":"346","line":3,"column":29,"nodeType":"264","messageId":"265","endLine":3,"endColumn":39},{"ruleId":"262","severity":1,"message":"347","line":28,"column":11,"nodeType":"264","messageId":"265","endLine":28,"endColumn":14},{"ruleId":"262","severity":1,"message":"288","line":2,"column":39,"nodeType":"264","messageId":"265","endLine":2,"endColumn":42},{"ruleId":"262","severity":1,"message":"347","line":28,"column":11,"nodeType":"264","messageId":"265","endLine":28,"endColumn":14},{"ruleId":"262","severity":1,"message":"288","line":2,"column":39,"nodeType":"264","messageId":"265","endLine":2,"endColumn":42},{"ruleId":"262","severity":1,"message":"347","line":28,"column":11,"nodeType":"264","messageId":"265","endLine":28,"endColumn":14},"no-native-reassign",["348"],"no-negated-in-lhs",["349"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'InputLabel' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'LinkedinIcon' is defined but never used.","'Work' is defined but never used.","'Home' is defined but never used.","'HomeWork' is defined but never used.","'LibraryBooks' is defined but never used.","'Info' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","'Box' is defined but never used.","'faClock' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'jobdata.catogary'. Either include it or remove the dependency array.","ArrayExpression",["350"],"'Filters' is defined but never used.","'url' is assigned a value but never used.",["351"],"'path' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'setuserdata' is assigned a value but never used.",["352"],"'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'StarBorder' is defined but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'createContext' is defined but never used.","'Jobs' is defined but never used.","'aa' is assigned a value but never used.","'Container' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'CardActionArea' is defined but never used.","'axios' is defined but never used.","'useParams' is defined but never used.","'msg' is assigned a value but never used.","'setdatauser' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property position.","MemberExpression","unexpectedWhitespace",{"range":"353","text":"354"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",{"range":"355","text":"354"},"React Hook useEffect has a missing dependency: 'userdata.id'. Either include it or remove the dependency array.",["356"],"React Hook useEffect has missing dependencies: 'id', 'userdata.companyname', 'userdata.id', and 'userdata.img'. Either include them or remove the dependency array.",["357"],{"range":"358","text":"354"},["359"],["360"],{"range":"361","text":"354"},["362"],"React Hook useEffect has missing dependencies: 'id' and 'userdata.id'. Either include them or remove the dependency array.",["363"],"'faMoneyBillWave' is defined but never used.","'RestoreIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'LocationOnIcon' is defined but never used.","'useRouteMatch' is defined but never used.","'useHistory' is defined but never used.","'arr' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"364","fix":"365"},{"desc":"364","fix":"366"},{"desc":"364","fix":"367"},[15390,15393],".",[22988,22991],{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},[41789,41792],{"desc":"368","fix":"372"},{"desc":"370","fix":"373"},[52804,52807],{"desc":"368","fix":"374"},{"desc":"375","fix":"376"},"Update the dependencies array to be: [jobdata.catogary]",{"range":"377","text":"378"},{"range":"379","text":"378"},{"range":"380","text":"378"},"Update the dependencies array to be: [userdata.id]",{"range":"381","text":"382"},"Update the dependencies array to be: [id, userdata.companyname, userdata.id, userdata.img]",{"range":"383","text":"384"},{"range":"385","text":"382"},{"range":"386","text":"384"},{"range":"387","text":"382"},"Update the dependencies array to be: [id, userdata.id]",{"range":"388","text":"389"},[5273,5275],"[jobdata.catogary]",[5368,5370],[4534,4536],[31670,31672],"[userdata.id]",[35068,35070],"[id, userdata.companyname, userdata.id, userdata.img]",[43522,43524],[47109,47111],[54861,54863],[59138,59140],"[id, userdata.id]"]