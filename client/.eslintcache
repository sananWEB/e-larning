[{"D:\\MERN stack\\sh1\\client\\src\\index.js":"1","D:\\MERN stack\\sh1\\client\\src\\App.js":"2","D:\\MERN stack\\sh1\\client\\src\\reportWebVitals.js":"3","D:\\MERN stack\\sh1\\client\\src\\components\\Home.js":"4","D:\\MERN stack\\sh1\\client\\src\\components\\Jobs.js":"5","D:\\MERN stack\\sh1\\client\\src\\components\\Intership.js":"6","D:\\MERN stack\\sh1\\client\\src\\components\\Signin.js":"7","D:\\MERN stack\\sh1\\client\\src\\components\\Signup.js":"8","D:\\MERN stack\\sh1\\client\\src\\components\\Courses.js":"9","D:\\MERN stack\\sh1\\client\\src\\components\\mobilenav.js":"10","D:\\MERN stack\\sh1\\client\\src\\components\\Filters.js":"11","D:\\MERN stack\\sh1\\client\\src\\components\\Cards.js":"12","D:\\MERN stack\\sh1\\client\\src\\components\\CourseCard.js":"13","D:\\MERN stack\\sh1\\client\\src\\components\\Account.js":"14","D:\\MERN stack\\sh1\\client\\src\\components\\IntershipsCards.js":"15","D:\\MERN stack\\sh1\\client\\src\\components\\about.js":"16","D:\\MERN stack\\sh1\\client\\src\\components\\Mobiledown.js":"17","D:\\MERN stack\\sh1\\client\\src\\components\\Segisstion.js":"18","D:\\MERN stack\\sh1\\client\\src\\components\\Segueestion2.js":"19","D:\\MERN stack\\sh1\\client\\src\\components\\Segisstion3.js":"20","D:\\MERN stack\\sh1\\client\\src\\components\\Customhook.js":"21"},{"size":500,"mtime":1609479979629,"results":"22","hashOfConfig":"23"},{"size":2414,"mtime":1613807684365,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1609479979636,"results":"25","hashOfConfig":"23"},{"size":14815,"mtime":1614072830740,"results":"26","hashOfConfig":"23"},{"size":10204,"mtime":1614003086328,"results":"27","hashOfConfig":"23"},{"size":10140,"mtime":1614003261810,"results":"28","hashOfConfig":"23"},{"size":4958,"mtime":1613925435830,"results":"29","hashOfConfig":"23"},{"size":6339,"mtime":1613925399286,"results":"30","hashOfConfig":"23"},{"size":7442,"mtime":1614066370727,"results":"31","hashOfConfig":"23"},{"size":6919,"mtime":1614072535515,"results":"32","hashOfConfig":"23"},{"size":3082,"mtime":1613925947892,"results":"33","hashOfConfig":"23"},{"size":2539,"mtime":1614071799111,"results":"34","hashOfConfig":"23"},{"size":2341,"mtime":1614071957281,"results":"35","hashOfConfig":"23"},{"size":64604,"mtime":1613926142467,"results":"36","hashOfConfig":"23"},{"size":2273,"mtime":1614072031004,"results":"37","hashOfConfig":"23"},{"size":851,"mtime":1613926217194,"results":"38","hashOfConfig":"23"},{"size":1432,"mtime":1613925601282,"results":"39","hashOfConfig":"23"},{"size":1854,"mtime":1613966032687,"results":"40","hashOfConfig":"23"},{"size":1816,"mtime":1613925474411,"results":"41","hashOfConfig":"23"},{"size":1903,"mtime":1613925315244,"results":"42","hashOfConfig":"23"},{"size":61,"mtime":1612709390378,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1kgmx21",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":4,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\MERN stack\\sh1\\client\\src\\index.js",[],["98","99"],"D:\\MERN stack\\sh1\\client\\src\\App.js",["100","101"],"import React,{createContext,useState,useEffect} from 'react'\nimport \"./App.css\"\nimport { createMuiTheme,ThemeProvider, responsiveFontSizes } from '@material-ui/core';\nimport {Navbar,Search,Cards} from \"./components/Home\"\nimport Jobs from \"./components/Jobs\"\nimport Intership from \"./components/Intership\"\nimport SignIn from \"./components/Signin\"\nimport SignUp from \"./components/Signup\"\nimport Courses from \"./components/Courses\"\nimport axios from \"axios\"\nimport SimpleBottomNavigation from \"./components/Mobiledown\"\nimport About from \"./components/about\"\nimport { BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport {Account} from \"./components/Account\"\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#334667',\n      main: '#011842',\n      dark: '#00102e',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#005a2c',\n      main: '#008140',\n      dark: '#339a66',\n      contrastText: '#fff',\n    },\n  },\n  shape:\"0px\",\n // shadows:[\"none\"]\n});\n\n\n\ntheme = responsiveFontSizes(theme);\nexport const Context=createContext(null)\nfunction App() {\n  const [userdata, setuserdata] = useState({\n    email: \"\",\n        id: \"\",\n        companyname:\"\",\n        password: \"\",\n        img:\"\",\n        login:false,\n  })\n\n  useEffect( ()=>{\n   \n      if(!localStorage.getItem(\"Ltoken\")){\n       localStorage.setItem(\"Ltoken\",\"\")\n      }\nelse{\n  axios.get(\"/getdata\",{headers:{token:localStorage.getItem(\"Ltoken\")}})\n  .then(res=>{\n    //console.log(res.data)\n    setuserdata({\n    \n      email: res.data.email,\n      id: res.data.id,\n      companyname: res.data.companyname,\n      password: res.data.password,\n      login:res.data.login,\n      img:res.data.img,\n    });\n    })\n}\n},[])\n  \n  return (\n    <Router>\n    <ThemeProvider theme={theme}>\n     \n<Context.Provider value={{userdata,setuserdata}}>\n\n  <SimpleBottomNavigation/>\n       <Route exact path=\"/\">\n    <Navbar/>\n    <Search name=\"FIND A JOB YOU LOVE.\"/>\n    <Cards/>\n    </Route>\n\n    <Route path=\"/jobs/:id\">\n    <Jobs/>\n    </Route>\n\n    <Route path=\"/interships/:id\">\n<Intership/>\n</Route>\n\n<Route path=\"/signin\">\n<SignIn/>\n</Route>\n<Route path=\"/signup\">\n<SignUp/>\n</Route>\n\n<Route path=\"/courses/:id\">\n<Courses/>\n</Route>\n\n\n<Route  path=\"/account\">\n<Account/>\n</Route>\n\n<Route  path=\"/aboutus\">\n<About/>\n</Route>\n\n\n</Context.Provider>\n    </ThemeProvider>\n    </Router>\n  )\n}\n\nexport default App\n","D:\\MERN stack\\sh1\\client\\src\\reportWebVitals.js",[],"D:\\MERN stack\\sh1\\client\\src\\components\\Home.js",["102","103","104"],"D:\\MERN stack\\sh1\\client\\src\\components\\Jobs.js",["105","106","107","108","109","110","111","112","113","114"],"import React,{useEffect,useState} from 'react'\r\nimport {Navbar,Search} from \"./Home\"\r\n// import Filters from \"./Filters\"\r\nimport {useRouteMatch,useParams, Route, Link as LLink} from \"react-router-dom\";\r\nimport {FormControl,InputLabel,Select,Breadcrumbs,Grid,Avatar,Paper,Typography,Container, Button } from '@material-ui/core';\r\nimport Ccard from \"./Cards\"\r\nimport axios from \"axios\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCalendarAlt,faBriefcase,faMoneyBillWave} from '@fortawesome/free-solid-svg-icons'\r\nimport Segisstion from \"./Segisstion\"\r\nimport {Dialog,DialogActions ,DialogContent ,DialogContentText ,DialogTitle} from \"@material-ui/core\"\r\nfunction Breadcrumb(){\r\n\r\n\r\n    return (\r\n        <Breadcrumbs style={{display:\"flex\",justifyContent:\"center\",margin:\"10px 0px 10px 0px\"}}>    \r\n           <Typography component={LLink} to=\"/\" style={{textDecoration:\"none\"}} color=\"inherit\">Home</Typography>\r\n      <Typography color=\"textPrimary\">\r\n        jobs\r\n      </Typography>\r\n    \r\n    </Breadcrumbs> \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Jobs() {\r\n\r\n  var params=useParams()\r\n  \r\n \r\n  var [state, setState] = useState({\r\n   jobs: \"\",\r\n   salary:\"\",\r\n   timing:\"\",\r\n });\r\n\r\n  const path =useRouteMatch().path\r\n\r\n  const [jobs, setjobs] = useState([])\r\n  \r\n  useEffect(async()=>{\r\n\r\n    if(params.id==\"all\"){\r\n      await  axios.get(\"/getjobs\").then((ress)=>{setjobs(ress.data)})\r\n   \r\n    }\r\n  \r\n\r\n    else{\r\n     \r\n  await axios.get(\"/getjobs\").then((ress)=>{setjobs(ress.data.filter((i)=>\r\n    i.catogary.toLowerCase().includes(params.id.toLowerCase())\r\n         ))})\r\n\r\n   \r\n    }\r\n    \r\n  },[params.id])\r\n\r\n//console.log(jobs)\r\n\r\n\r\n\r\n  // console.log(jobs.map((i)=>\r\n  // console.log(i.catogary)\r\n  // ))\r\n  \r\n\r\n\r\n\r\n\r\n  var searchbtn=async()=>{\r\n\r\n    \r\n\r\n  //   console.log(jobs.filter((i)=>\r\n  //   i.catogary==state.jobs && i.salary==state.salary && i.timing==state.timing\r\n  //  ))\r\nawait axios.get(\"/getjobs\").then((ress)=>{setjobs(ress.data.filter((i)=>\r\n  i.catogary==state.jobs && i.salary==state.salary && i.timing==state.timing\r\n ))})\r\n //console.log(jobs)\r\n  }\r\n\r\n  var props=[{\r\n    Jobs:[\"Jobs\",\"Web Developer\",\"mobile Developer\",\"Desktop Developer\",\r\n\"SEO\",\"Graphic Desiger\",\"Content Writer\"],\r\nsalary:[\"Salary\",\"10k-20k\",\"20k-40k\",\"50k-70k\",\"80-100k\",\"110-140k\",\"150k-180k\"],\r\ntiming:[\"Timing\",\"fulltime\",\"halftime\"]\r\n\r\n}]\r\n   \r\n    return (\r\n        <>\r\n        <Navbar/>\r\n        <Route exact path={`${useRouteMatch().path}`}>\r\n          \r\n          \r\n          <Search name=\"ALL JOBS\"/> \r\n          <Container >\r\n        <Breadcrumb/>\r\n        \r\n\r\n\r\n          \r\n         <Grid container spacing={1}>\r\n\r\n<Grid item xs={12} sm={3} md={3} >\r\n<FormControl fullWidth variant=\"outlined\" >\r\n<InputLabel >{props[0].Jobs[0]}</InputLabel>\r\n<Select\r\n native\r\n value={state.jobs}\r\n onChange={(e)=>{\r\n\r\n   setState({\r\n     ...state,\r\n     [e.target.name]:e.target.value\r\n   })\r\n }}\r\n label=\"jobs\"\r\n inputProps={{\r\n   name: 'jobs',\r\n  \r\n }}\r\n>\r\n <option aria-label=\"None\" value=\"\" />\r\n\r\n {props[0].Jobs.slice(1).map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n )}\r\n \r\n \r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n\r\n\r\n\r\n<Grid item xs={12} sm={3} md={3} >\r\n<FormControl fullWidth variant=\"outlined\" >\r\n<InputLabel >{props[0].salary[0]}</InputLabel>\r\n<Select\r\n native\r\n value={state.salary}\r\n onChange={(e)=>{\r\n\r\n   setState({\r\n     ...state,\r\n     [e.target.name]:e.target.value\r\n   })\r\n }}\r\n label=\"salary\"\r\n inputProps={{\r\n   name: 'salary',\r\n  \r\n }}\r\n>\r\n <option aria-label=\"None\" value=\"\" />\r\n\r\n {props[0].salary.slice(1).map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n )}\r\n \r\n \r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n\r\n\r\n<Grid item xs={12} sm={3} md={3} >\r\n<FormControl fullWidth variant=\"outlined\" >\r\n<InputLabel >{props[0].timing[0]}</InputLabel>\r\n<Select\r\n native\r\n value={state.timing}\r\n onChange={(e)=>{\r\n\r\n   setState({\r\n     ...state,\r\n     [e.target.name]:e.target.value\r\n   })\r\n }}\r\n label=\"timing\"\r\n inputProps={{\r\n   name: 'timing',\r\n  \r\n }}\r\n>\r\n <option aria-label=\"None\" value=\"\" />\r\n\r\n {props[0].timing.slice(1).map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n )} \r\n \r\n \r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n<Grid style={{display:\"flex\",justifyContent:\"center\"}} item xs={12} sm={3} md={3} >\r\n\r\n{state.jobs.length>0 && state.salary.length>0 && state.timing.length>0?<Button   onClick={()=>{searchbtn(state)}} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">Search</Button>\r\n:\r\n\r\n<Button disabled   size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">Search</Button>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n</Grid>  \r\n\r\n\r\n          <br/>\r\n          <Ccard data={jobs} />\r\n          </Container>\r\n          </Route>\r\n\r\n          <Route exact path={`${useRouteMatch().path}/:id`}>\r\n          <Jobpage data={jobs} path={path}  />\r\n          </Route>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Jobs\r\n\r\n\r\n\r\nfunction Jobpage(props) {\r\n//console.log(props.path)\r\n\r\n  //console.log(props.filtersearch)\r\n  const jobid=useParams().id\r\n    const arry=props.data;\r\n\r\n\r\n\r\n\r\n\r\n    const jobdata=arry.find((i)=>{\r\n      return i._id==jobid;\r\n    })  \r\n//console.log(jobdata.catogary)\r\n\r\n const [similar, setsimilar] = useState([])\r\nuseEffect(()=>{\r\n\r\n  axios.get(\"/getjobs\").then((ress)=>{\r\n    setsimilar(ress.data.filter((i)=>\r\n            \r\n    jobdata.catogary==i.catogary\r\n    ))\r\n  \r\n  \r\n  })\r\n},[])\r\n\r\n\r\n  \r\n\r\n const filterarray= similar.filter((i)=>{\r\n  \r\n\r\n    return jobid!==i._id\r\n  \r\n  })\r\n\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  \r\n\r\n  const [btn1, setbtn1] = React.useState(true);\r\n  const [cvfile, setcvfile] = React.useState();\r\n  \r\n  const pdffile=(e)=>{\r\n   \r\n\r\nif(e.target.files[0].type==\"application/pdf\"){\r\nconsole.log(\"pdf\");\r\nsetcvfile(e.target.files[0])\r\nsetbtn1(false)\r\n}else{\r\n  console.log(\"not pdf\")\r\n  setbtn1(true)\r\n}\r\n\r\n\r\n  }\r\n\r\n  const handleClose = () => {\r\n \r\n    const formData = new FormData();\r\n\r\n    formData.append(\"v1\",jobdata.jobtitle)\r\n    formData.append(\"v2\",jobdata.companyname)\r\n    formData.append(\"v3\",cvfile)\r\n\r\n   \r\n      axios.post(\"/getcv\",formData)\r\n     console.log(jobdata)\r\n     console.log(cvfile)\r\n    setbtn1(false)\r\n    setOpen(false);\r\n    \r\n  };\r\n\r\n  const handleClose1 = () => {\r\n\r\n  \r\n   setOpen(false);\r\n };\r\n\r\n  return (\r\n    <>\r\n      \r\n      \r\n      <Container maxWidth=\"xl\" >\r\n    <Typography component=\"div\" style={{marginTop:\"10px\", height: 'calc(100vh - 64px)' }}>\r\n      <Breadcrumb2 id={jobdata.jobtitle}/>\r\n<Grid container spacing={1} >\r\n  <Grid item xs={12} sm={12} md={9} >\r\n<Paper style={{height:\"auto\",padding:\"20px\"}}>\r\n\r\n  <div style={{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\r\n\r\n\r\n    <div>\r\n<Typography variant=\"h5\" style={{fontWeight:\"bold\"}}>{jobdata.jobtitle}</Typography>\r\n<Typography color=\"textSecondary\" variant=\"body2\" >{jobdata.companyname} {jobdata.city} </Typography>\r\n</div>\r\n<Avatar  src={jobdata.img}/>\r\n</div>\r\n\r\n\r\n<div style={{display:\"flex\",marginTop:\"5px\"}}>\r\n<Typography title=\"last Date\" color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faCalendarAlt}/>&nbsp;&nbsp;{jobdata.apply}</Typography>\r\n\r\n<Typography title=\"Experience\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faBriefcase}/>&nbsp;&nbsp;{jobdata.experience}</Typography>\r\n\r\n<Typography title=\"Salary\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faMoneyBillWave}/>&nbsp;&nbsp;{jobdata.salary}</Typography>\r\n   </div>\r\n   <br/>\r\n   <hr/>\r\n   <br/>\r\n<Typography varient=\"h6\" style={{fontWeight:\"bold\"}}>Job Description:-</Typography>\r\n   <Typography color=\"textsecondary\" variant=\"body1\">{jobdata.discription}</Typography>\r\n<br/>\r\n<Typography varient=\"h6\" style={{fontWeight:\"bold\"}}>Skills:-</Typography>\r\n   <Typography >{jobdata.skills}</Typography>\r\n   <br/>\r\n\r\n   <span>\r\n\r\n\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>Gender:-</b> {jobdata.gender}</Typography>\r\n\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>Education:-</b> {jobdata.education}</Typography>\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>Position:-</b> {jobdata.position}</Typography>\r\n\r\n\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>experience:-</b> {jobdata.experience}</Typography>\r\n\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>Timing:-</b> {jobdata.timing}</Typography>\r\n   </span>\r\n<br/>\r\n<br/>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button onClick={handleClickOpen} variant=\"contained\" color=\"secondary\">Apply Now</Button>\r\n</div>\r\n</Paper>\r\n\r\n  </Grid>\r\n\r\n\r\n\r\n  <Grid item xs={12} sm={12} md={3}>\r\n\r\n    <Segisstion arrry={filterarray}  path2={props.path}/>\r\n  </Grid>\r\n</Grid>\r\n        </Typography>\r\n      </Container>\r\n\r\n\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Submit Your CV\"}</DialogTitle>\r\n        <DialogContent>\r\n          <input type=\"file\" name=\"CV\" onChange={pdffile}/>\r\n          <Typography style={{marginTop:\"10px\"}} variant=\"subtitle2\" color=\"textPrimary\">CV must be in PDF format</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose1} variant=\"contained\" color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button  disabled={btn1} onClick={handleClose} variant=\"contained\" color=\"secondary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction Breadcrumb2(props){\r\n  return (\r\n      <Breadcrumbs style={{display:\"flex\",justifyContent:\"center\",margin:\"10px 0px 10px 0px\"}}>    \r\n         <Typography component={LLink} to=\"/\" style={{textDecoration:\"none\"}} color=\"inherit\">Home</Typography>\r\n    <Typography component={LLink} to=\"/jobs\" style={{textDecoration:\"none\"}}  color=\"inherit\">Jobs</Typography>\r\n    <Typography  color=\"textPrimary\">{props.id}</Typography>\r\n  \r\n  </Breadcrumbs> \r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\MERN stack\\sh1\\client\\src\\components\\Intership.js",["115","116","117","118","119","120","121","122","123","124","125","126","127"],"import React,{useEffect,useState} from 'react'\r\nimport {Navbar,Search} from \"./Home\"\r\nimport axios from \"axios\"\r\nimport Segisstion2 from \"./Segueestion2\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCalendarAlt,faBriefcase,faMoneyBillWave} from '@fortawesome/free-solid-svg-icons'\r\nimport {FormControl,InputLabel,Select,Breadcrumbs,Grid,Avatar,Paper,Typography,Container, Button } from '@material-ui/core';\r\nimport { useParams,useRouteMatch, Route, Link as LLink} from \"react-router-dom\";\r\nimport IntershipsCards from \"./IntershipsCards\"\r\nimport {Dialog,DialogActions ,DialogContent ,DialogContentText ,DialogTitle} from \"@material-ui/core\"\r\nfunction Breadcrumb(){\r\n    return (\r\n        <Breadcrumbs style={{display:\"flex\",justifyContent:\"center\",margin:\"10px 0px 10px 0px\"}}>    \r\n           <Typography component={LLink} to=\"/\" style={{textDecoration:\"none\"}} color=\"inherit\">Home</Typography>\r\n      <Typography color=\"textPrimary\">Interships</Typography>\r\n    \r\n    </Breadcrumbs> \r\n    )\r\n}\r\n\r\n\r\n\r\nfunction Intership() {\r\n\r\n\r\n  const params=useParams()\r\n  //console.log(params.id)\r\n  const [jobs, setjobs] = useState([])\r\n  useEffect(async()=>{\r\n\r\n    if(params.id==\"all\"){\r\n      await  axios.get(\"/getintership\").then((ress)=>{setjobs(ress.data)})\r\n    }\r\n    else{\r\n      await axios.get(\"/getintership\").then((ress)=>{setjobs(ress.data.filter((i)=>\r\n        i.catogary.toLowerCase().includes(params.id.toLowerCase())\r\n             ))})\r\n    \r\n    }\r\n    \r\n   // await axios.get(\"/getintership\").then((ress)=>{setjobs(ress.data)})\r\n  },[params.id])\r\n\r\n\r\n  const path=useRouteMatch().path;\r\n  const url=useRouteMatch().url;\r\n\r\n\r\n  const props=[{\r\n    Jobs:[\"All Intership\",\"Web Developer\",\"mobile Developer\",\"Desktop Developer\",\r\n    \"SEO\",\"Graphic Desiger\",\"Content Writer\"],\r\nsalary:[\"Payment\",\"Paid\",\"UnPaid\"],\r\ntiming:[\"Timing\",\"3PM-8PM\",\"8AM-2PM\"]\r\n\r\n}]\r\n\r\nconst [state, setState] = useState({\r\n  jobs: \"\",\r\n  salary:\"\",\r\n  timing:\"\",\r\n});\r\n\r\n\r\n\r\nvar searchbtn=async()=>{\r\n\r\n    \r\n\r\n  \r\nawait axios.get(\"/getintership\").then((ress)=>{setjobs(ress.data.filter((i)=>\r\n  i.catogary==state.jobs && i.Intershiptype==state.salary && i.timing==state.timing\r\n ))})\r\n \r\n\r\n\r\n\r\n  }\r\n\r\n    return (\r\n        <>\r\n          <Navbar/>\r\n          <Route exact path={`${path}`}>\r\n          <Search name=\"ALL INTERSHIP\"/> \r\n\r\n          <Container >\r\n        <Breadcrumb/>\r\n          {/* <Filters Catogary={[{\r\n              Jobs:[\"All Intership\",\"Web Developer\",\"mobile Developer\",\"Desktop Developer\",\r\n\"SEO\",\"Graphic Desiger\",\"Content Writer\"],\r\n          salary:[\"Payment\",\"Paid\",\"Unpaid\"],\r\n          timing:[\"Timing\",\"PartTime\",\"FullTime\"]\r\n          \r\n          }]}/> */}\r\n\r\n\r\n\r\n\r\n<Grid container spacing={1}>\r\n\r\n<Grid item xs={12} sm={3} md={3} >\r\n<FormControl fullWidth variant=\"outlined\" >\r\n<InputLabel >{props[0].Jobs[0]}</InputLabel>\r\n<Select\r\n native\r\n value={state.jobs}\r\n onChange={(e)=>{\r\n\r\n   setState({\r\n     ...state,\r\n     [e.target.name]:e.target.value\r\n   })\r\n }}\r\n label=\"jobs\"\r\n inputProps={{\r\n   name: 'jobs',\r\n  \r\n }}\r\n>\r\n <option aria-label=\"None\" value=\"\" />\r\n\r\n {props[0].Jobs.slice(1).map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n )}\r\n \r\n \r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n\r\n\r\n\r\n<Grid item xs={12} sm={3} md={3} >\r\n<FormControl fullWidth variant=\"outlined\" >\r\n<InputLabel >{props[0].salary[0]}</InputLabel>\r\n<Select\r\n native\r\n value={state.salary}\r\n onChange={(e)=>{\r\n\r\n   setState({\r\n     ...state,\r\n     [e.target.name]:e.target.value\r\n   })\r\n }}\r\n label=\"salary\"\r\n inputProps={{\r\n   name: 'salary',\r\n  \r\n }}\r\n>\r\n <option aria-label=\"None\" value=\"\" />\r\n\r\n {props[0].salary.slice(1).map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n )}\r\n \r\n \r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n\r\n\r\n<Grid item xs={12} sm={3} md={3} >\r\n<FormControl fullWidth variant=\"outlined\" >\r\n<InputLabel >{props[0].timing[0]}</InputLabel>\r\n<Select\r\n native\r\n value={state.timing}\r\n onChange={(e)=>{\r\n\r\n   setState({\r\n     ...state,\r\n     [e.target.name]:e.target.value\r\n   })\r\n }}\r\n label=\"timing\"\r\n inputProps={{\r\n   name: 'timing',\r\n  \r\n }}\r\n>\r\n <option aria-label=\"None\" value=\"\" />\r\n\r\n {props[0].timing.slice(1).map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n )} \r\n \r\n \r\n</Select>\r\n</FormControl>\r\n</Grid>\r\n<Grid style={{display:\"flex\",justifyContent:\"center\"}} item xs={12} sm={3} md={3} >\r\n\r\n{state.jobs.length>0 && state.salary.length>0 && state.timing.length>0?<Button   onClick={()=>{searchbtn()}} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">Search</Button>\r\n:\r\n\r\n<Button disabled   onClick={()=>{console.log(state)}} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">Search</Button>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n</Grid>  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <br/>\r\n         <IntershipsCards data={jobs}/>\r\n          </Container>\r\n</Route>\r\n\r\n              <Route exact path={`${path}/:id`}>\r\n        <IntershipPage data={jobs} path={path}/>\r\n        </Route>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Intership\r\n\r\n\r\n\r\n\r\nfunction IntershipPage(props) {\r\n\r\n\r\n  \r\n  const jobid=useParams().id;\r\n  const arry=props.data;\r\n\r\n  const jobdata=arry.find((i)=>{\r\n    return i._id==jobid;\r\n  })\r\n\r\n\r\n  const [similar, setsimilar] = useState([])\r\n  useEffect(()=>{\r\n  \r\n    axios.get(\"/getintership\").then((ress)=>{\r\n      setsimilar(ress.data.filter((i)=>\r\n              \r\n      jobdata.catogary==i.catogary\r\n      ))\r\n    \r\n    \r\n    })\r\n  },[])\r\n  \r\n  \r\n    \r\n  \r\n   const filterarray= similar.filter((i)=>{\r\n    \r\n  \r\n      return jobid!==i._id\r\n    \r\n    })\r\n\r\n  //console.log(jobdata)\r\n\r\n  const path=useRouteMatch().path;\r\n\r\n\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  \r\n\r\n  const [btn1, setbtn1] = React.useState(true);\r\n  const [cvfile, setcvfile] = React.useState();\r\n  \r\n  const pdffile=(e)=>{\r\n   \r\n\r\nif(e.target.files[0].type==\"application/pdf\"){\r\nconsole.log(\"pdf\");\r\nsetcvfile(e.target.files[0])\r\nsetbtn1(false)\r\n}else{\r\n  console.log(\"not pdf\")\r\n  setbtn1(true)\r\n}\r\n\r\n\r\n  }\r\n\r\n  const handleClose = () => {\r\n \r\n    const formData = new FormData();\r\n\r\n   formData.append(\"v1\",jobdata.intershiptitle)\r\n    formData.append(\"v2\",jobdata.companyname)\r\n    formData.append(\"v3\",cvfile)\r\n\r\n   \r\n      axios.post(\"/getcvInter\",formData)\r\n   \r\n    setbtn1(false)\r\n    setOpen(false);\r\n    \r\n  };\r\n\r\n  const handleClose1 = () => {\r\n\r\n  \r\n   setOpen(false);\r\n };\r\n  return (\r\n    <React.Fragment>\r\n    \r\n    <Container maxWidth=\"xl\" >\r\n    <Typography component=\"div\" style={{marginTop:\"10px\", height: 'calc(100vh - 64px)' }}>\r\n      <Breadcrumb2 id={jobdata.intershiptitle}/>\r\n<Grid container spacing={1} >\r\n  <Grid item xs={12} sm={12} md={9} >\r\n<Paper style={{height:\"auto\",padding:\"20px\"}}>\r\n\r\n  <div style={{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}}>\r\n\r\n\r\n    <div>\r\n<Typography variant=\"h5\" style={{fontWeight:\"bold\"}}>{jobdata.intershiptitle}</Typography>\r\n<Typography color=\"textSecondary\" variant=\"body2\" >{jobdata.companyname} {jobdata.city} </Typography>\r\n</div>\r\n<Avatar  src={jobdata.img}/>\r\n</div>\r\n\r\n\r\n<div style={{display:\"flex\",marginTop:\"5px\"}}>\r\n<Typography title=\"last Date\" color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faCalendarAlt}/>&nbsp;&nbsp;{jobdata.apply}</Typography>\r\n\r\n<Typography title=\"Experience\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faBriefcase}/>&nbsp;&nbsp;{jobdata.Intershiptype}</Typography>\r\n\r\n{jobdata.Intershiptype==\"UnPaid\"?null:\r\n<Typography title=\"Salary\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faMoneyBillWave}/>&nbsp;&nbsp;{jobdata.salary}</Typography>}\r\n\r\n   </div>\r\n   <br/>\r\n   <hr/>\r\n   <br/>\r\n<Typography varient=\"h6\" style={{fontWeight:\"bold\"}}>Job Description:-</Typography>\r\n   <Typography color=\"textsecondary\" variant=\"body1\">{jobdata.discription}</Typography>\r\n<br/>\r\n<Typography varient=\"h6\" style={{fontWeight:\"bold\"}}>Skills:-</Typography>\r\n   <Typography >{jobdata.skills}</Typography>\r\n   <br/>\r\n\r\n   <span>\r\n\r\n\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>Gender:-</b> {jobdata.gender}</Typography>\r\n\r\n\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>Position:-</b> {jobdata.position}</Typography>\r\n\r\n\r\n\r\n\r\n   <Typography varient=\"h6\" style={{paddingLeft:\"10px\"}} ><b>Timing:-</b> {jobdata.timing}</Typography>\r\n   </span>\r\n<br/>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button onClick={handleClickOpen}  variant=\"contained\" color=\"secondary\">Apply Now</Button>\r\n</div>\r\n</Paper>\r\n\r\n  </Grid>\r\n\r\n\r\n\r\n \r\n <Grid item xs={12} sm={12} md={3}>\r\n\r\n<Segisstion2 arrry={filterarray} path={props.path}/>\r\n</Grid>\r\n</Grid>\r\n        </Typography>\r\n      </Container>\r\n\r\n\r\n\r\n      \r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Submit Your CV\"}</DialogTitle>\r\n        <DialogContent>\r\n          <input type=\"file\" name=\"CV\" onChange={pdffile}/>\r\n          <Typography style={{marginTop:\"10px\"}} variant=\"subtitle2\" color=\"textPrimary\">CV must be in PDF format</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose1} variant=\"contained\" color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button  disabled={btn1} onClick={handleClose} variant=\"contained\" color=\"secondary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction Breadcrumb2(props){\r\n  return (\r\n      <Breadcrumbs style={{display:\"flex\",justifyContent:\"center\",margin:\"10px 0px 10px 0px\"}}>    \r\n         <Typography component={LLink} to=\"/\" style={{textDecoration:\"none\"}} color=\"inherit\">Home</Typography>\r\n    <Typography component={LLink} to=\"/interships\" style={{textDecoration:\"none\"}}  color=\"inherit\">interships</Typography>\r\n    <Typography  color=\"textPrimary\">{props.id}</Typography>\r\n  \r\n  </Breadcrumbs> \r\n  )\r\n}\r\n","D:\\MERN stack\\sh1\\client\\src\\components\\Signin.js",["128"],"import React,{useState,useContext} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles,Snackbar } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Navbar} from \"./Home\"\r\nimport { Link as LLink} from \"react-router-dom\";\r\nimport axios from \"axios\"\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {Context} from \"../App.js\"\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const {userdata,setuserdata}=useContext(Context)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [user, setuser] = useState({\r\n    email:\"\",\r\n    password:\"\"\r\n  })\r\n  const [response, setresponse] = React.useState({\r\n    open:false,\r\n    msg:null,\r\n    msgscreen:null\r\n  });\r\n  const change=(e)=>{\r\n         setuser({\r\n           ...user,\r\n           [e.target.name]:e.target.value\r\n         })\r\n  }\r\n\r\n\r\n const history=useHistory();\r\nconst submit= async(e)=>{\r\n  e.preventDefault();\r\n  //console.log(user)\r\n  await axios.post(\"/signin\",user).then((res)=>{\r\n    \r\n    if(res.data.token){\r\n      setresponse({\r\n        open:true,\r\n        msg:res.data.msg,\r\n        msgscreen:res.data.msgscreen\r\n      });\r\n      \r\n      setuserdata({\r\nemail: res.data.email,\r\n        id:  res.data.id,\r\n        companyname: res.data.companyname,\r\n        password:  res.data.password,\r\n        img:res.data.img,\r\n        login:res.data.login,\r\n      })\r\n\r\n      localStorage.setItem(\"Ltoken\",res.data.token)\r\n      history.push(\"/account\")\r\n\r\n    }\r\n    else{\r\n      setresponse({\r\n        open:true,\r\n        msg:res.data.msg,\r\n        msgscreen:res.data.msgscreen\r\n      });\r\n    }\r\n    \r\n})\r\n}\r\n\r\nconst handleClose = () => {\r\n\r\n  setresponse({\r\n    ...response,\r\n    open:false\r\n  });\r\n};\r\n  \r\nif(userdata.login==true){\r\n  history.push(\"/account\")\r\n\r\n}\r\n  return (\r\n      <>\r\n      <Navbar/>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form onSubmit={submit} className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={user.email}\r\n            onChange={change}\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={user.password}\r\n            onChange={change}\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {/* Forgot password? */}\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link component={LLink} to=\"/signup\" href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      \r\n    </Container>\r\n\r\n    <Snackbar open={response.open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity={response.msgscreen}>\r\n      {response.msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n    </>\r\n  );\r\n}","D:\\MERN stack\\sh1\\client\\src\\components\\Signup.js",["129","130"],"import React,{useState,useContext} from 'react';\r\nimport {Context} from \"../App\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles,Snackbar } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Navbar} from \"./Home\"\r\nimport { Link as LLink} from \"react-router-dom\";\r\nimport axios from \"axios\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n\r\n  const [formdara, setformdara] = useState({\r\n    CompanyName:\"\",\r\n    password:\"\",\r\n    cpassword:\"\",\r\n    email:\"\",\r\n    weblink:\"\"\r\n    \r\n\r\n  })\r\n  const [file, setfile] = useState({})\r\n\r\n  const change=(e)=>{\r\n    setformdara({\r\n      ...formdara,\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n\r\n  const image=(e)=>{\r\n    setfile(e.target.files[0])\r\n  }\r\n\r\n\r\n  const [response, setresponse] = React.useState({\r\n    open:false,\r\n    msg:null,\r\n    msgscreen:null\r\n  });\r\n  const submit=(e)=>{\r\ne.preventDefault();\r\n//console.log(formdara)\r\nconst formData = new FormData();\r\nformData.append('file', file);\r\nformData.append('CompanyName',formdara.CompanyName);\r\nformData.append('password',formdara.password);\r\nformData.append('cpassword',formdara.cpassword);\r\nformData.append('email',formdara.email);\r\nformData.append('weblink',formdara.weblink);\r\n\r\naxios.post(\"/signup\",formData).then((res)=>{setresponse({\r\n  open:true,\r\n  msg:res.data.msg,\r\n  msgscreen:res.data.msgscreen\r\n\r\n})})\r\n\r\n  }\r\n\r\n  const handleClose = () => {\r\n\r\n    setresponse({\r\n      ...response,\r\n      open:false\r\n    });\r\n  };\r\nconst history=useHistory();\r\n  const {userdata,setuserdata}=useContext(Context)\r\n  if(userdata.login==true){\r\nhistory.push(\"/account\")\r\n  }\r\n  return (\r\n      <>\r\n      <Navbar/>\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form onSubmit={submit} className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} >\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"CompanyName\"\r\n                value={formdara.CompanyName}\r\n                onChange={change}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Company Name\"\r\n                label=\"Company Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                value={formdara.email}\r\n                onChange={change}\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                value={formdara.password}\r\n                onChange={change}\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"cpassword\"\r\n                value={formdara.cpassword}\r\n                onChange={change}\r\n                label=\"ConfirmPassword\"\r\n                type=\"password\"\r\n                id=\"cpassword\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              \r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"weblink\"\r\n                value={formdara.weblink}\r\n                onChange={change}\r\n                label=\"WebSite link\"\r\n                type=\"text\"\r\n                \r\n        \r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <label>\r\n                Choose image\r\n                </label>\r\n                <br/>\r\n                \r\n            <input      \r\n        accept=\"image/*\"\r\n        required\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        type=\"file\"\r\n        onChange={image}\r\n      />\r\n     \r\n\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link component={LLink} to=\"/signin\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n    <Snackbar open={response.open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity={response.msgscreen}>\r\n      {response.msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n    </>\r\n  );\r\n}","D:\\MERN stack\\sh1\\client\\src\\components\\Courses.js",["131","132","133","134","135","136","137","138","139"],"D:\\MERN stack\\sh1\\client\\src\\components\\mobilenav.js",["140","141"],"D:\\MERN stack\\sh1\\client\\src\\components\\Filters.js",["142","143","144","145"],"import React,{useState,createContext} from 'react'\r\nimport {Grid,FormControl,Box,InputLabel,Select, Button} from '@material-ui/core';\r\nimport Jobs from \"./Jobs\"\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\nfunction Filters(props) {\r\n  var aa=props.Catogary[0].Jobs\r\n \r\n   const [state, setState] = useState({\r\n    jobs: \"\",\r\n    salary:\"\",\r\n    timing:\"\",\r\n  });\r\n\r\n \r\n    return (\r\n        <>\r\n     \r\n         <Grid container spacing={1}>\r\n\r\n         <Grid item xs={12} sm={3} md={3} >\r\n         <FormControl fullWidth variant=\"outlined\" >\r\n        <InputLabel >{props.Catogary[0].Jobs[0]}</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.jobs}\r\n          onChange={(e)=>{\r\n\r\n            setState({\r\n              ...state,\r\n              [e.target.name]:e.target.value\r\n            })\r\n          }}\r\n          label=\"jobs\"\r\n          inputProps={{\r\n            name: 'jobs',\r\n           \r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n\r\n          {props.Catogary[0].Jobs.map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n          )}\r\n          \r\n          \r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n\r\n\r\n\r\n      <Grid item xs={12} sm={3} md={3} >\r\n         <FormControl fullWidth variant=\"outlined\" >\r\n        <InputLabel >{props.Catogary[0].salary[0]}</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.salary}\r\n          onChange={(e)=>{\r\n\r\n            setState({\r\n              ...state,\r\n              [e.target.name]:e.target.value\r\n            })\r\n          }}\r\n          label=\"salary\"\r\n          inputProps={{\r\n            name: 'salary',\r\n           \r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n\r\n          {props.Catogary[0].salary.map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n          )}\r\n          \r\n          \r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n\r\n\r\n      <Grid item xs={12} sm={3} md={3} >\r\n         <FormControl fullWidth variant=\"outlined\" >\r\n        <InputLabel >{props.Catogary[0].timing[0]}</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.timing}\r\n          onChange={(e)=>{\r\n\r\n            setState({\r\n              ...state,\r\n              [e.target.name]:e.target.value\r\n            })\r\n          }}\r\n          label=\"timing\"\r\n          inputProps={{\r\n            name: 'timing',\r\n           \r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n\r\n          {props.Catogary[0].timing.map((i)=>\r\n\r\n<option value={i}>{i}</option>\r\n          )}\r\n          \r\n          \r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n <Grid style={{display:\"flex\",justifyContent:\"center\"}} item xs={12} sm={3} md={3} >\r\n\r\n{state.jobs.length>0 && state.salary.length>0 && state.timing.length>0?<Button   onClick={()=>{console.log(state)}} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">Search</Button>\r\n:\r\n\r\n<Button disabled   onClick={()=>{console.log(state)}} size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">Search</Button>\r\n}\r\n\r\n\r\n\r\n  \r\n   \r\n </Grid>\r\n   </Grid>  \r\n  \r\n  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filters\r\n\r\n\r\n\r\n\r\n",["146","147"],"D:\\MERN stack\\sh1\\client\\src\\components\\Cards.js",["148"],"D:\\MERN stack\\sh1\\client\\src\\components\\CourseCard.js",[],"D:\\MERN stack\\sh1\\client\\src\\components\\Account.js",["149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"import React,{useContext,useEffect, useState} from 'react'\r\nimport {Route, useHistory,useRouteMatch,Link as LLink, useParams} from \"react-router-dom\"\r\nimport {Context} from \"../App\"\r\nimport {Navbar} from \"./Home\"\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {CssBaseline,Card,CardHeader,CardActions,Container,Select,Snackbar,InputLabel,FormControl,TextField,Grid,CardMedia,CardContent,Box,Typography,makeStyles,Button,MenuItem,Menu,Avatar, Paper} from '@material-ui/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios';\r\nimport {faCalendarAlt,faBriefcase,faMoneyBillWave,faClock} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nexport function Account() {   \r\n    const {userdata,setuserdata}=useContext(Context)\r\nconst history=useHistory();\r\nif(userdata.login==false){\r\n    history.push(\"/signin\")\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container:{\r\n       // backgroundColor:\"#cfe8fc\" ,\r\n        height:\"calc(100vh - 64px)\" ,\r\n        display:\"flex\",\r\n       \r\n        alignItems:\"center\",\r\n        flexDirection:\"column\",\r\n        paddingTop:\"80px\"\r\n    },\r\n    large: {\r\n      width: theme.spacing(19),\r\n      height: theme.spacing(19),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n     // this is for edit/view\r\n     const [anchorEl, setAnchorEl] = React.useState(null);\r\n    \r\n     const handleClick = (event) => {\r\n       setAnchorEl(event.currentTarget);\r\n     };\r\n   \r\n     const handleClose = () => {\r\n       setAnchorEl(null);\r\n     };\r\n\r\n// this is for add services\r\n     const [anchorEl1, setAnchorEl1] = React.useState(null);\r\n   \r\n     const handleClick1 = (event) => {\r\n       setAnchorEl1(event.currentTarget);\r\n     };\r\n   \r\n     const handleClose1 = () => {\r\n       setAnchorEl1(null);\r\n     };\r\n\r\n\r\n    \r\n        const path=useRouteMatch().path;\r\n        const url=useRouteMatch().url;\r\n  \r\n    \r\n    return (\r\n    <>\r\n<Navbar/>\r\n<Route exact  path={`${path}`}>\r\n<React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\">\r\n<Typography component=\"div\" className={classes.container}>\r\n\r\n<Avatar alt=\"Remy Sharp\" src={userdata.img} className={classes.large} />\r\n<center>\r\n<Typography variant=\"h3\" style={{fontWeight:\"bold\",margin:\"20px\"}}>Welcome <span style={{textDecoration:\"underline\",textDecorationColor:\"#011842\"}}>{userdata.companyname}</span></Typography>\r\n</center>\r\n\r\n<Grid container spacing={3}>\r\n    <Grid item xs={12} sm={6} md={4} >\r\n        <Button component={LLink} to={`${url}/profileedit`} fullWidth variant=\"contained\" color=\"primary\">Profile</Button>\r\n    </Grid >\r\n    <Grid item xs={12} sm={6} md={4}>\r\n        <Button onClick={handleClick} endIcon={<FontAwesomeIcon style={{paddingBottom:\"5px\"}} icon={faSortDown}/>} fullWidth variant=\"contained\" color=\"primary\">Add Service</Button>\r\n\r\n        <Menu            \r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'center',\r\n                }}\r\n            \r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem component={LLink} to={`${url}/addjobs`} onClick={handleClose}>Jobs</MenuItem>\r\n      <MenuItem component={LLink} to={`${url}/addinterships`}  onClick={handleClose}>Interships</MenuItem>\r\n        <MenuItem component={LLink} to={`${url}/addcourse`}  onClick={handleClose}>Courses</MenuItem>\r\n      </Menu>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6} md={4}>\r\n        <Button onClick={handleClick1} endIcon={<FontAwesomeIcon style={{paddingBottom:\"5px\"}} icon={faSortDown}/>}  fullWidth variant=\"contained\" color=\"primary\">Edit/View Service</Button>\r\n\r\n\r\n        <Menu\r\n                elevation={3}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'center',\r\n                }}\r\n            \r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl1}\r\n        keepMounted\r\n        open={Boolean(anchorEl1)}\r\n        onClose={handleClose1}\r\n      >\r\n        <MenuItem to={`${url}/editjob`} component={LLink} onClick={handleClose1}>Jobs</MenuItem>\r\n        <MenuItem to={`${url}/editintership`} component={LLink} onClick={handleClose1}>Interships</MenuItem>\r\n        <MenuItem to={`${url}/coursepage`} component={LLink} onClick={handleClose1}>Courses</MenuItem>\r\n      </Menu>\r\n    </Grid>\r\n    \r\n</Grid>\r\n</Typography>\r\n      </Container>   \r\n    </React.Fragment>\r\n    </Route>\r\n          <Route exact  path={`${path}/profileedit`}>\r\n          <EditProfile/>\r\n          </Route>\r\n\r\n          <Route exact  path={`${path}/addjobs`}>\r\n          <Addjobs/>\r\n          </Route>\r\n          <Route exact  path={`${path}/addinterships`}>\r\n          <Addinterships/>\r\n          </Route>\r\n          <Route exact  path={`${path}/addcourse`}>\r\n          <Addcourse/>\r\n          </Route>\r\n          \r\n          <Route exact  path={`${path}/editjob`}>\r\n          <Editjob/>\r\n          </Route>\r\n          \r\n\r\n          <Route exact  path={`${path}/editjob/:id`}>\r\n          <Editjobform/>\r\n          </Route>\r\n\r\n          <Route exact  path={`${path}/editintership`}>\r\n          <Editintership/>\r\n          </Route>\r\n\r\n          <Route exact  path={`${path}/editintership/:id`}>\r\n          <Intershipformedit/>\r\n          </Route>\r\n          \r\n          <Route exact  path={`${path}/coursepage`}>\r\n          <Coursepage/>\r\n          </Route>\r\n\r\n          <Route exact  path={`${path}/coursepage/:id`}>\r\n          <Courseform/>\r\n          </Route>\r\n\r\n           </>\r\n    )\r\n}\r\n\r\n \r\n\r\n function EditProfile() {\r\n    const {userdata,setuserdata}=useContext(Context)\r\n     const [state, setstate] = useState({\r\n         email:userdata.email,\r\n         password:userdata.password,\r\n         companyname:userdata.companyname,\r\n         userID:userdata.id\r\n     })\r\n\r\n     const change=(e)=>{\r\n        setstate({\r\n            ...state,\r\n            [e.target.name]:e.target.value\r\n        })\r\n     }\r\n     const history=useHistory();\r\n   const [msg, setmsg] = useState(\"\")\r\n   const [img, setimg] = useState(\"\")\r\n     const submit= (e)=>{\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n\r\n        formData.append(\"companyname\",state.companyname)\r\n        formData.append(\"email\",state.email)\r\n        formData.append(\"password\",state.password)\r\n        formData.append(\"img\",img)\r\n        formData.append(\"userid\",state.userID)\r\n         \r\n     \r\n         axios.post(\"/updateuser\",formData)\r\n        .then((res)=>{setmsg(res.data.msg);\r\n        localStorage.setItem(\"Ltoken\",res.data.token);\r\n        history.push(\"/account\")\r\n        window.location.reload();\r\n        \r\n        })\r\n\r\n     }\r\n\r\n     const imageChange=(e)=>{\r\n        setimg(e.target.files[0])\r\n     }\r\n     \r\n    return (\r\n        <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"xs\">\r\n        <Typography component=\"div\" style={{ marginTop:\"100px\", height: '100vh' }}>\r\n            <Typography variant=\"h4\" style={{padding:\"20px\",fontWeight:\"bold\",textDecorationColor:\"#011842\",color:\"#011842\",textDecoration:\"underline\"}}>EDIT PROFILE</Typography>\r\n\r\n            <form onSubmit={submit}>\r\n\r\n\r\n\r\n\r\n            <TextField name=\"companyname\" onChange={change} required type=\"text\" margin=\"normal\" fullWidth  InputLabelProps={{shrink: true,\r\n          }} label=\"CompanyName\" variant=\"outlined\" value={state.companyname} />\r\n\r\n\r\n\r\n        \r\n            <TextField name=\"password\" onChange={change} required type=\"password\" fullWidth margin=\"normal\"  InputLabelProps={{\r\n            shrink: true,\r\n          }} label=\"Password\" variant=\"outlined\" value={state.password} />\r\n            \r\n          \r\n   <TextField disabled type=\"email\" fullWidth  margin=\"normal\" InputLabelProps={{  shrink: true,\r\n          }} label=\"Email\" variant=\"outlined\" value={state.email} />\r\n          <label>Update image</label><br/>\r\n        <input onChange={imageChange} type=\"file\"/>\r\n\r\n<Button type=\"submit\" style={{marginTop:\"10px\"}} variant=\"contained\" color=\"secondary\" fullWidth>UPDATE</Button>\r\n            </form>\r\n        </Typography>\r\n      </Container>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Addjobs() {\r\n  \r\n\r\n\r\n  const {userdata,setdatauser}=useContext(Context)\r\n  \r\n  const [data, setdata] = useState({\r\n    jobtitle:\"\",\r\ncity:\"\",\r\ncatogary:\"\",\r\nexperience:\"\",\r\ntiming:\"\",\r\nsalary:\"\",\r\ngender:\"\",\r\neducation:\"\",\r\nposition:\"\",\r\napply:\"\",\r\nskills:\"\",\r\ndiscription:\"\",\r\ncompanyname:userdata.companyname,\r\naccountID:userdata.id,\r\nimg:userdata.img,\r\n  })\r\n  const change=(e)=>{\r\n    setdata({\r\n      ...data,\r\n      [e.target.name]:e.target.value\r\n    })\r\n\r\n  }\r\nconst [msg, setmsg] = useState(\"\")\r\nconst [open, setopen] = useState(false)\r\nconst handleClose = () => {\r\n\r\n  setopen(false)\r\n};\r\n  const submit= async(e)=>{\r\ne.preventDefault();\r\n\r\n await axios.post(\"/addjob\",data).then((res)=>{setmsg(res.data);setopen(true)})\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <CssBaseline />\r\n    <Container maxWidth=\"md\">\r\n      <Typography component=\"div\" style={{minHeight: 'calc(100vh - 64px)'}}>\r\n\r\n      <Typography variant=\"h4\" style={{padding:\"20px\",fontWeight:\"bold\",textDecorationColor:\"#011842\",color:\"#011842\",textDecoration:\"underline\"}}>ADD JOBS</Typography>\r\n\r\n      <form onSubmit={submit}>\r\n<Grid container spacing={2}>\r\n\r\n  <Grid item md={8} sm={8} xs={12}>\r\n  <TextField value={data.jobtitle} name=\"jobtitle\" onChange={change} fullWidth label=\"Job Title\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField value={userdata.companyname} disabled name=\"companyname\" fullWidth label=\"CompanyName\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Select City</InputLabel>\r\n        <Select\r\n        value={data.city}\r\n          native\r\n          name=\"city\" onChange={change}\r\n          inputProps={{\r\n            name: 'city',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value=\"Peshawar\">Peshawar</option>\r\n          <option value=\"lahore\">lahore</option>\r\n          <option value=\"Karachi\">Karachi</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Catogary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.catogary}\r\n          name=\"catogary\" onChange={change}\r\n          inputProps={{\r\n            name: 'catogary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Web Developer\">Web Developer</option>\r\n          <option  value=\"mobile Developer\">mobile Developer</option>\r\n          <option  value=\"Desktop Developer\">Desktop Developer</option>\r\n          <option  value=\"SEO\">SEO</option>\r\n          <option  value=\"Graphic Desiger\">Graphic Desiger</option>\r\n          <option  value=\"Content Writer\">Content Writer</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Experience</InputLabel>\r\n        <Select\r\n        \r\n          native\r\n          value={data.experience}\r\n          name=\"experience\" onChange={change}\r\n          inputProps={{\r\n            name: 'experience',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          {[1,2,3,4,5,6,7,8,9,10].map((i)=>\r\n   \r\n   i==1?<option aria-label=\"None\" value={`${i} Year`}>{i} Year</option>:<option aria-label=\"None\" value={`${i} Years`}>{i} Years</option>\r\n  \r\n            )}\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Timimg</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.timing}\r\n          name=\"timing\" onChange={change}\r\n          inputProps={{\r\n            name: 'timing',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"fulltime\" >Full-Time</option>\r\n          <option  value=\"halftime\" >Half-Time</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Salary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.salary}\r\n          name=\"salary\" onChange={change}\r\n          inputProps={{\r\n            name: 'salary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"10k-20k\">10k-20k</option>\r\n          <option  value=\"20k-40k\">20k-40k</option>\r\n          <option  value=\"50k-70k\">50k-70k</option>\r\n          <option  value=\"80k-100k\">80k-100k</option>\r\n          <option  value=\"110k-140k\">110k-140k</option>\r\n          <option  value=\"150k-180k\">150k-180k  </option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.gender}\r\n          name=\"gender\" onChange={change}\r\n          inputProps={{\r\n            name: 'gender',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"No Preference\">No Preference</option>\r\n          <option  value=\"Man\">Man</option>\r\n          <option  value=\"Woman\">Woman</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Minimum Education</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.education}\r\n          name=\"education\" onChange={change}\r\n          inputProps={{\r\n            name: 'education',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Bachelors\">Bachelors</option>\r\n          <option  value=\"Master\">Master</option>\r\n          <option  value=\"PhD\">PhD</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField name=\"position\" value={data  .position} onChange={change} fullWidth label=\"Total Positions\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField name=\"apply\" onChange={change} type=\"date\" fullWidth label=\"Apply Before\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n  \r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\nvalue={data.skills}\r\nname=\"skills\" onChange={change}\r\n  helperText=\"Note:-HTML,CSS,JS\"\r\n  type=\"text\" fullWidth label=\"Skills\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.discription}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"discription\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Discription\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n</Grid>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button type=\"submit\" style={{marginBottom:\"10px\"}} color=\"secondary\" variant=\"contained\">Create Job</Button>\r\n</div>\r\n\r\n\r\n</form>   \r\n      </Typography>\r\n    </Container>\r\n\r\n    <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity=\"success\">\r\n      {msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n\r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  function Addinterships() {\r\n  \r\n\r\n\r\n  const {userdata,setdatauser}=useContext(Context)\r\n  \r\n  const [data, setdata] = useState({\r\n    intershiptitle:null,\r\ncity:null,\r\ncatogary:null,\r\nIntershiptype:null,\r\ntiming:null,\r\nsalary:null,\r\ngender:null,\r\nposition:null,\r\napply:null,\r\nskills:null,\r\ndiscription:null,\r\ncompanyname:userdata.companyname,\r\naccountID:userdata.id,\r\nimg:userdata.img,\r\n  })\r\n  const change=(e)=>{\r\n    setdata({\r\n      ...data,\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n\r\n\r\n\r\n  const [msg, setmsg] = useState(\"\")\r\nconst [open, setopen] = useState(false)\r\nconst handleClose = () => {\r\n\r\n  setopen(false)\r\n};\r\n\r\n\r\n  const submit= async(e)=>{\r\ne.preventDefault();\r\nconsole.log(data)\r\n\r\n await axios.post(\"/Addinterships\",data).then((res)=>{setmsg(res.data);setopen(true)})\r\n  }\r\n\r\nconst [salary, setsalary] = useState(false)\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <CssBaseline />\r\n    <Container maxWidth=\"md\">\r\n      <Typography component=\"div\" style={{minHeight: 'calc(100vh - 64px)'}}>\r\n\r\n      <Typography variant=\"h4\" style={{padding:\"20px\",fontWeight:\"bold\",textDecorationColor:\"#011842\",color:\"#011842\",textDecoration:\"underline\"}}>ADD INTERSHIP</Typography>\r\n\r\n      <form onSubmit={submit}>\r\n<Grid container spacing={2}>\r\n\r\n  <Grid item md={8} sm={8} xs={12}>\r\n  <TextField value={data.intershiptitle} name=\"intershiptitle\" onChange={change} fullWidth label=\"Intership Title\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField value={userdata.companyname} disabled name=\"companyname\" fullWidth label=\"CompanyName\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Select City</InputLabel>\r\n        <Select\r\n        value={data.city}\r\n          native\r\n          name=\"city\" onChange={change}\r\n          inputProps={{\r\n            name: 'city',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value=\"Peshawar\">Peshawar</option>\r\n          <option value=\"lahore\">lahore</option>\r\n          <option value=\"Karachi\">Karachi</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Catogary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.catogary}\r\n          name=\"catogary\" onChange={change}\r\n          inputProps={{\r\n            name: 'catogary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Web Developer\">Web Developer</option>\r\n          <option  value=\"mobile Developer\">mobile Developer</option>\r\n          <option  value=\"Desktop Developer\">Desktop Developer</option>\r\n          <option  value=\"SEO\">SEO</option>\r\n          <option  value=\"Graphic Desiger\">Graphic Desiger</option>\r\n          <option  value=\"Content Writer\">Content Writer</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Intership Type</InputLabel>\r\n        <Select\r\n        \r\n          native\r\n          value={data.Intershiptype}\r\n          name=\"Intershiptype\" onChange={(e)=>{change(e);\r\n            if(e.target.value==\"UnPaid\"){\r\n              setsalary(true)\r\n            }\r\n            else{\r\n              setsalary(false)\r\n            }\r\n            \r\n          }}\r\n          inputProps={{\r\n            name: 'Intershiptype',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  aria-label=\"None\" value=\"Paid\">Paid</option>\r\n          <option  aria-label=\"None\" value=\"UnPaid\">UnPaid</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Timimg</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.timing}\r\n          name=\"timing\" onChange={change}\r\n          inputProps={{\r\n            name: 'timing',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"8AM-2PM\" >8AM-2PM</option>\r\n          <option  value=\"3PM-8PM\" >3PM-8PM</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Salary</InputLabel>\r\n        <Select\r\n        disabled={salary}\r\n          native\r\n          value={data.salary}\r\n          name=\"salary\" onChange={change}\r\n          inputProps={{\r\n            name: 'salary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"10k\">10k</option>\r\n          <option  value=\"20k\">20k</option>\r\n          <option  value=\"30k\">30k</option>\r\n          <option  value=\"40k\">40k</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.gender}\r\n          name=\"gender\" onChange={change}\r\n          inputProps={{\r\n            name: 'gender',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"No Preference\">No Preference</option>\r\n          <option  value=\"Man\">Man</option>\r\n          <option  value=\"Woman\">Woman</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={6} sm={6} xs={12}>\r\n  <TextField name=\"position\" value={data  .position} onChange={change} fullWidth label=\"Total Positions\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  <Grid item md={6} sm={6} xs={12}>\r\n  <TextField name=\"apply\" onChange={change} type=\"date\" fullWidth label=\"Apply Before\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n  \r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\nvalue={data.skills}\r\nname=\"skills\" onChange={change}\r\n  helperText=\"Note:-HTML,CSS,JS\"\r\n  type=\"text\" fullWidth label=\"Skills\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.discription}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"discription\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Discription\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n</Grid>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button type=\"submit\" style={{marginBottom:\"10px\"}} color=\"secondary\" variant=\"contained\">Create Interships</Button>\r\n</div>\r\n\r\n\r\n</form>   \r\n        \r\n\r\n\r\n      </Typography>\r\n    </Container>\r\n    <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity=\"success\">\r\n      {msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n    \r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Addcourse() {\r\n  \r\n\r\n\r\n  const {userdata,setdatauser}=useContext(Context)\r\n  \r\n  const [data, setdata] = useState({\r\n    coursetitle:null,\r\ncity:null,\r\ncatogary:null,\r\nprice:null,\r\ntiming:null,\r\ninstractorname:null,\r\nRequirements:null,\r\nlearn:null,\r\ncontent:null,\r\ndiscription:null,\r\naccountID:userdata.id,\r\nnumber:null,\r\n  })\r\n  const change=(e)=>{\r\n    setdata({\r\n      ...data,\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n\r\n\r\n\r\n  const [msg, setmsg] = useState(\"\")\r\nconst [open, setopen] = useState(false)\r\nconst [selectimg, setselectimg] = useState({})\r\n\r\n\r\nconst img=(e)=>{\r\nsetselectimg(e.target.files[0])\r\n  //console.log(e.target.files[0])\r\n}\r\nconst handleClose = () => {\r\n  setopen(false)\r\n};\r\n\r\n\r\n  const submit= async(e)=>{\r\ne.preventDefault();\r\nconst formData=new FormData();\r\nformData.append(\"coursetitle\",data.coursetitle)\r\nformData.append(\"city\",data.city)\r\nformData.append(\"catogary\",data.catogary)\r\nformData.append(\"price\",data.price)\r\nformData.append(\"timing\",data.timing)\r\nformData.append(\"instractorname\",data.instractorname)\r\nformData.append(\"Requirements\",data.Requirements)\r\nformData.append(\"learn\",data.learn)\r\nformData.append(\"content\",data.content)\r\nformData.append(\"discription\",data.discription)\r\nformData.append(\"accountID\",userdata.id)\r\nformData.append(\"companyname\",userdata.companyname)\r\nformData.append(\"selectimg\",selectimg)\r\nformData.append(\"number\",userdata.number)\r\n\r\n\r\n\r\n await axios.post(\"/addcourse\",formData).then((res)=>{setmsg(res.data);setopen(true)})\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <CssBaseline />\r\n    <Container maxWidth=\"md\">\r\n      <Typography component=\"div\" style={{minHeight: 'calc(100vh - 64px)'}}>\r\n\r\n      <Typography variant=\"h4\" style={{padding:\"20px\",fontWeight:\"bold\",textDecorationColor:\"#011842\",color:\"#011842\",textDecoration:\"underline\"}}>ADD COURSE</Typography>\r\n\r\n      <form onSubmit={submit}>\r\n<Grid container spacing={2}>\r\n\r\n  <Grid item md={8} sm={8} xs={12}>\r\n  <TextField value={data.coursetitle} name=\"coursetitle\" onChange={change} fullWidth label=\"Course Title\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  \r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField value={userdata.companyname} disabled name=\"companyname\" fullWidth label=\"CompanyName\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField onChange={change} value={userdata.instractorname}  name=\"instractorname\" fullWidth label=\"Instractor Name\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField onChange={change} value={userdata.price}  name=\"price\" fullWidth label=\"Price\" required variant=\"outlined\" helperText=\" Example:-10000 PKR\"/>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Select City</InputLabel>\r\n        <Select\r\n        value={data.city}\r\n          native\r\n          name=\"city\" onChange={change}\r\n          inputProps={{\r\n            name: 'city',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value=\"Peshawar\">Peshawar</option>\r\n          <option value=\"lahore\">lahore</option>\r\n          <option value=\"Karachi\">Karachi</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Catogary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.catogary}\r\n          name=\"catogary\" onChange={change}\r\n          inputProps={{\r\n            name: 'catogary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Web Developer\">Web Developer</option>\r\n          <option  value=\"mobile Developer\">mobile Developer</option>\r\n          <option  value=\"Desktop Developer\">Desktop Developer</option>\r\n          <option  value=\"SEO\">SEO</option>\r\n          <option  value=\"Graphic Desiger\">Graphic Desiger</option>\r\n          <option  value=\"Content Writer\">Content Writer</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Timimg</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.timing}\r\n          name=\"timing\" onChange={change}\r\n          inputProps={{\r\n            name: 'timing',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"10AM-11AM\" >10AM-11AM</option>\r\n          <option  value=\"3PM-4PM\" >3PM-4PM</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n    <TextField  value={data.number}\r\n          name=\"number\" onChange={change} fullWidth variant=\"outlined\" helperText=\"Example:- +923217836328\" label=\"WhatsApp Number\" required type=\"number\"/>\r\n  </Grid>\r\n  \r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.discription}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"discription\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Discription\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.learn}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"learn\" onChange={change}\r\n  type=\"text\" fullWidth label=\" What you'll learn\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.content}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"content\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Course Content\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  \r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.Requirements}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"Requirements\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Requirements\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n</Grid>\r\n<div style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n<input required accept=\"image/*\" type=\"file\" onChange={img}/>\r\n<Button type=\"submit\" style={{marginBottom:\"10px\"}} color=\"secondary\" variant=\"contained\">Create Course</Button>\r\n</div>\r\n\r\n\r\n</form>   \r\n        \r\n\r\n\r\n      </Typography>\r\n    </Container>\r\n    <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity=\"success\">\r\n      {msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n    \r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction Editjob() {\r\n\r\nconst [jobs, setjobs] = useState([])\r\n  useEffect(()=>{\r\n    axios.get(\"/getjobs\").then((res)=>{setjobs(res.data.filter((i)=>{\r\n      return i.accountID==userdata.id\r\n    }))})\r\n  \r\n  },[])\r\n  const {userdata,setuserdata}=useContext(Context)\r\n  \r\n\r\n  \r\n  // var jobss=jobs.filter((i)=>{\r\n  //   return i.accountID==userdata.id\r\n  // })\r\n\r\n\r\n  const path=useRouteMatch().path\r\n  const url=useRouteMatch().url\r\n\r\n  const ddelete=(id)=>{\r\n\r\n  axios.post(\"/deletejob\",{id:id})\r\n axios.get(\"/getjobs\").then((res)=>{setjobs(res.data.filter((i)=>{\r\n  return i.accountID==userdata.id\r\n}))})\r\n  }\r\n  return (\r\n    <>\r\n   \r\n    <Container maxWidth=\"xl\">\r\n        <Typography component=\"div\" style={{ height: '100vh' }}>\r\n          <Typography variant=\"h5\" style={{paddingTop:\"15px\"}}><b>View/Edit/Delete Jobs</b></Typography>\r\n          <br/>\r\n\r\n          {jobs.length==0?\r\n          <Container maxWidth=\"sm\">\r\n          <Paper component={Box} p=\"12px\">\r\n          <Typography align=\"center\" variant=\"body2\">No Jobs has have Register</Typography>\r\n          </Paper>\r\n          </Container>\r\n          :\r\n          \r\n          <Grid container spacing={2}>\r\n          {jobs.map((i)=>\r\n        <Grid item xs={12} sm={6} md={4} >\r\n<Card  >\r\n<CardHeader\r\navatar={\r\n  <Avatar>R</Avatar>\r\n}\r\ntitle={i.jobtitle}\r\nsubheader={`${i.companyname} ${i.city}`}\r\n/>\r\n\r\n<Typography style={{paddingLeft:\"15px\"}} variant=\"body2\" component=\"p\">\r\n{i.discription.slice(0,219)}....\r\n</Typography>\r\n<div>\r\n\r\n   <div style={{display:\"flex\",marginTop:\"5px\"}}>\r\n<Typography title=\"last Date\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faCalendarAlt}/>&nbsp;&nbsp;{i.apply}</Typography>\r\n\r\n<Typography title=\"Experience\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faBriefcase}/>&nbsp;&nbsp;{i.experience}</Typography>\r\n\r\n<Typography title=\"Salary\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faMoneyBillWave}/>&nbsp;&nbsp;{i.salary}</Typography>\r\n\r\n<Typography title=\"Timming\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faClock}/>&nbsp;&nbsp;{i.timing}</Typography>  \r\n   </div>\r\n  <CardActions style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button to={`${url}/${i._id}`}  component={LLink}   size=\"small\" variant=\"outlined\" color=\"primary\">Edit</Button>\r\n<Button  onClick={()=>ddelete(i._id)}  size=\"small\" variant=\"contained\" color=\"primary\">Delete</Button>\r\n</CardActions>\r\n\r\n</div>\r\n\r\n</Card>\r\n</Grid>\r\n      \r\n    )}\r\n    </Grid>        \r\n          \r\n          }\r\n           \r\n        </Typography>\r\n      </Container>\r\n      \r\n\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction Editjobform() {\r\n\r\n  const id=useParams().id\r\n  const {userdata,setdatauser}=useContext(Context)\r\n\r\n\r\n\r\n\r\n  useEffect( async()=>{\r\n   await axios.post(\"/jobdataput\",{id:id}).then((ress)=>{\r\n     \r\n    setdata({\r\n      jobtitle:ress.data[0].jobtitle,\r\n      city:ress.data[0].city,\r\n      catogary:ress.data[0].catogary,\r\n      experience:ress.data[0].experience,\r\n      timing:ress.data[0].timing,\r\n      salary:ress.data[0].salary,\r\n      gender:ress.data[0].gender,\r\n      education:ress.data[0].education,\r\n      position:ress.data[0].position,\r\n      apply:ress.data[0].apply,\r\n      skills:ress.data[0].skills,\r\n      discription:ress.data[0].discription,\r\n      companyname:userdata.companyname,\r\n      accountID:userdata.id,\r\n      img:userdata.img,\r\n      productID:id\r\n    })\r\n  \r\n  })\r\n  },[])\r\n\r\n\r\n  const [data, setdata] = useState({\r\n    jobtitle:\"\",\r\ncity:\"\",\r\ncatogary:\"\",\r\nexperience:\"\",\r\ntiming:\"\",\r\nsalary:\"\",\r\ngender:\"\",\r\neducation:\"\",\r\nposition:\"\",\r\napply:\"\",\r\nskills:\"\",\r\ndiscription:\"\",\r\ncompanyname:userdata.companyname,\r\naccountID:userdata.id,\r\nimg:userdata.img,\r\nproductID:id\r\n  })\r\n\r\n\r\n  //console.log(data)\r\n\r\n  const change=(e)=>{\r\n    setdata({\r\n      ...data,\r\n      [e.target.name]:e.target.value\r\n    })\r\n\r\n  }\r\nconst [msg, setmsg] = useState(\"\")\r\nconst [open, setopen] = useState(false)\r\nconst handleClose = () => {\r\n\r\n  setopen(false)\r\n};\r\n  const submit= async(e)=>{\r\ne.preventDefault();\r\n\r\n await axios.post(\"/updatejob\",data).then((res)=>{setmsg(res.data);setopen(true)})\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <CssBaseline />\r\n    <Container maxWidth=\"md\">\r\n      <Typography component=\"div\" style={{minHeight: 'calc(100vh - 64px)'}}>\r\n\r\n      <Typography variant=\"h4\" style={{padding:\"20px\",fontWeight:\"bold\",textDecorationColor:\"#011842\",color:\"#011842\",textDecoration:\"underline\"}}>UPDATE JOB</Typography>\r\n\r\n      <form onSubmit={submit}>\r\n<Grid container spacing={2}>\r\n\r\n  <Grid item md={8} sm={8} xs={12}>\r\n  <TextField value={data.jobtitle} name=\"jobtitle\" onChange={change} fullWidth label=\"Job Title\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField value={userdata.companyname} disabled name=\"companyname\" fullWidth label=\"CompanyName\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Select City</InputLabel>\r\n        <Select\r\n        value={data.city}\r\n          native\r\n          name=\"city\" onChange={change}\r\n          inputProps={{\r\n            name: 'city',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value=\"Peshawar\">Peshawar</option>\r\n          <option value=\"lahore\">lahore</option>\r\n          <option value=\"Karachi\">Karachi</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Catogary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.catogary}\r\n          name=\"catogary\" onChange={change}\r\n          inputProps={{\r\n            name: 'catogary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Web Developer\">Web Developer</option>\r\n          <option  value=\"mobile Developer\">mobile Developer</option>\r\n          <option  value=\"Desktop Developer\">Desktop Developer</option>\r\n          <option  value=\"SEO\">SEO</option>\r\n          <option  value=\"Graphic Desiger\">Graphic Desiger</option>\r\n          <option  value=\"Content Writer\">Content Writer</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Experience</InputLabel>\r\n        <Select\r\n        \r\n          native\r\n          value={data.experience}\r\n          name=\"experience\" onChange={change}\r\n          inputProps={{\r\n            name: 'experience',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          {[1,2,3,4,5,6,7,8,9,10].map((i)=>\r\n   \r\n   i==1?<option aria-label=\"None\" value={`${i} Year`}>{i} Year</option>:<option aria-label=\"None\" value={`${i} Years`}>{i} Years</option>\r\n  \r\n            )}\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Timimg</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.timing}\r\n          name=\"timing\" onChange={change}\r\n          inputProps={{\r\n            name: 'timing',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"fulltime\" >Full-Time</option>\r\n          <option  value=\"halftime\" >Half-Time</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Salary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.salary}\r\n          name=\"salary\" onChange={change}\r\n          inputProps={{\r\n            name: 'salary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"10k-20k\">10k-20k</option>\r\n          <option  value=\"20k-40k\">20k-40k</option>\r\n          <option  value=\"50k-70k\">50k-70k</option>\r\n          <option  value=\"80k-100k\">80k-100k</option>\r\n          <option  value=\"110k-140k\">110k-140k</option>\r\n          <option  value=\"150k-180k\">150k-180k  </option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.gender}\r\n          name=\"gender\" onChange={change}\r\n          inputProps={{\r\n            name: 'gender',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"No Preference\">No Preference</option>\r\n          <option  value=\"Man\">Man</option>\r\n          <option  value=\"Woman\">Woman</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Minimum Education</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.education}\r\n          name=\"education\" onChange={change}\r\n          inputProps={{\r\n            name: 'education',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Bachelors\">Bachelors</option>\r\n          <option  value=\"Master\">Master</option>\r\n          <option  value=\"PhD\">PhD</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField name=\"position\" value={data  .position} onChange={change} fullWidth label=\"Total Positions\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField name=\"apply\" onChange={change} type=\"date\" fullWidth label=\"Apply Before\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n  \r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\nvalue={data.skills}\r\nname=\"skills\" onChange={change}\r\n  helperText=\"Note:-HTML,CSS,JS\"\r\n  type=\"text\" fullWidth label=\"Skills\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.discription}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"discription\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Discription\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n</Grid>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button type=\"submit\" style={{marginBottom:\"10px\"}} color=\"secondary\" variant=\"contained\">UPDATE Job</Button>\r\n</div>\r\n\r\n\r\n</form>   \r\n      </Typography>\r\n    </Container>\r\n\r\n    <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity=\"success\">\r\n      {msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n\r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction Editintership() {\r\n\r\nconst {userdata,setuserdata}=useContext(Context)\r\nconst url=useRouteMatch().url\r\nconst [intership, setintership] = useState([])\r\n  useEffect(()=>{\r\n\r\n    axios.get(\"/getintership\").then((res)=>{setintership(res.data.filter((i)=>{\r\n      return i.accountID==userdata.id\r\n     })\r\n   )})\r\n  },[])\r\n\r\n\r\n\r\n  const ddelete=(id)=>{\r\n\r\n    axios.post(\"/deleteintersgip\",{id:id})\r\n   axios.get(\"/getintership\").then((res)=>{setintership(res.data.filter((i)=>{\r\n    return i.accountID==userdata.id\r\n   })\r\n )})\r\n\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"xl\">\r\n        <Typography component=\"div\" style={{ height: '100vh' }}>\r\n          <Typography variant=\"h5\" style={{paddingTop:\"15px\"}}><b>View/Edit/Delete INTERSHIP</b></Typography>\r\n          <br/>\r\n\r\n          {intership.length==0?\r\n          <Container maxWidth=\"sm\">\r\n          <Paper component={Box} p=\"12px\">\r\n          <Typography align=\"center\" variant=\"body2\">No Intership has have Register</Typography>\r\n          </Paper>\r\n          </Container>\r\n          :\r\n\r\n          <Grid container spacing={2}>\r\n          \r\n          {intership.map((i)=>\r\n              <Grid item xs={12} sm={6} md={4} >\r\n      <Card >\r\n      <CardHeader\r\n      avatar={\r\n        <Avatar src={i.img}/>\r\n      }\r\n      title={i.intershiptitle}\r\n      subheader={`${i.companyname} ${i.city}`}\r\n      />\r\n      \r\n      <Typography style={{paddingLeft:\"15px\"}} variant=\"body2\" component=\"p\">\r\n      {i.discription.slice(0,219)}....\r\n      </Typography>\r\n      <div>\r\n      \r\n         <div style={{display:\"flex\",marginTop:\"5px\"}}>\r\n      <Typography title=\"last Date\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faCalendarAlt}/>&nbsp;&nbsp;{i.apply}</Typography>\r\n      \r\n      <Typography title=\"Experience\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faBriefcase}/>&nbsp;&nbsp;{i.Intershiptype}</Typography>\r\n      \r\n      <Typography title=\"Timming\" style={{paddingLeft:\"15px\"}} color=\"textSecondary\" variant=\"body2\" component=\"p\"><FontAwesomeIcon icon={faClock}/>&nbsp;&nbsp;{i.timing}</Typography>  \r\n         </div>\r\n        <CardActions style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n      <Button to={`${url}/${i._id}`} component={LLink}   size=\"small\" variant=\"outlined\" color=\"primary\">edit</Button>\r\n      <Button   onClick={()=>{ddelete(i._id)}}  size=\"small\" variant=\"contained\" color=\"primary\">DELETE</Button>\r\n      </CardActions>\r\n      \r\n      </div>\r\n      \r\n      </Card>\r\n      </Grid>\r\n            \r\n          )}\r\n          </Grid>\r\n\r\n}\r\n\r\n\r\n        </Typography>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction Intershipformedit() {\r\n  \r\nconst id=useParams().id\r\n\r\n  const {userdata,setdatauser}=useContext(Context)  \r\n  const [data, setdata] = useState({\r\n    intershiptitle:\"\",\r\ncity:\"\",\r\ncatogary:\"\",\r\nIntershiptype:\"\",\r\ntiming:\"\",\r\nsalary:\"\",\r\ngender:\"\",\r\nposition:\"\",\r\napply:\"\",\r\nskills:\"\",\r\ndiscription:\"\",\r\ncompanyname:userdata.companyname,\r\naccountID:userdata.id,\r\nimg:userdata.img,\r\nproductID:id\r\n  })\r\n  const change=(e)=>{\r\n    setdata({\r\n      ...data,\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    axios.get(\"/getintership\").then((ress)=>{\r\n\r\n\r\n    const arry=ress.data.find((i)=>{\r\n        return i._id==id\r\n      })\r\n\r\n      setdata(\r\n        {\r\n          intershiptitle:arry.intershiptitle,\r\n      city:arry.city,\r\n      catogary:arry.catogary,\r\n      Intershiptype:arry.Intershiptype,\r\n      timing:arry.timing,\r\n      salary:arry.salary,\r\n      gender:arry.gender,\r\n      position:arry.position,\r\n      apply:arry.apply,\r\n      skills:arry.skills,\r\n      discription:arry.discription,\r\n      companyname:userdata.companyname,\r\n      accountID:userdata.id,\r\n      img:userdata.img,\r\n      productID:id\r\n        }\r\n      )\r\n  })\r\n  },[])\r\n  \r\n  \r\n\r\n  const [msg, setmsg] = useState(\"\")\r\nconst [open, setopen] = useState(false)\r\nconst handleClose = () => {\r\n\r\n  setopen(false)\r\n};\r\n\r\n\r\n  const submit= async(e)=>{\r\ne.preventDefault();\r\nconsole.log(data)\r\n\r\n await axios.post(\"/editintershtip\",data).then((res)=>{setmsg(res.data);setopen(true)})\r\n  }\r\n\r\nconst [salary, setsalary] = useState(false)\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <CssBaseline />\r\n    <Container maxWidth=\"md\">\r\n      <Typography component=\"div\" style={{minHeight: 'calc(100vh - 64px)'}}>\r\n\r\n      <Typography variant=\"h4\" style={{padding:\"20px\",fontWeight:\"bold\",textDecorationColor:\"#011842\",color:\"#011842\",textDecoration:\"underline\"}}>EDIT INTERSHIP</Typography>\r\n\r\n      <form onSubmit={submit}>\r\n<Grid container spacing={2}>\r\n\r\n  <Grid item md={8} sm={8} xs={12}>\r\n  <TextField value={data.intershiptitle} name=\"intershiptitle\" onChange={change} fullWidth label=\"Intership Title\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField value={userdata.companyname} disabled name=\"companyname\" fullWidth label=\"CompanyName\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Select City</InputLabel>\r\n        <Select\r\n        value={data.city}\r\n          native\r\n          name=\"city\" onChange={change}\r\n          inputProps={{\r\n            name: 'city',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value=\"Peshawar\">Peshawar</option>\r\n          <option value=\"lahore\">lahore</option>\r\n          <option value=\"Karachi\">Karachi</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Catogary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.catogary}\r\n          name=\"catogary\" onChange={change}\r\n          inputProps={{\r\n            name: 'catogary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Web Developer\">Web Developer</option>\r\n          <option  value=\"mobile Developer\">mobile Developer</option>\r\n          <option  value=\"Desktop Developer\">Desktop Developer</option>\r\n          <option  value=\"SEO\">SEO</option>\r\n          <option  value=\"Graphic Desiger\">Graphic Desiger</option>\r\n          <option  value=\"Content Writer\">Content Writer</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Intership Type</InputLabel>\r\n        <Select\r\n        \r\n          native\r\n          value={data.Intershiptype}\r\n          name=\"Intershiptype\" onChange={(e)=>{change(e);\r\n            if(e.target.value==\"UnPaid\"){\r\n              setsalary(true)\r\n            }\r\n            else{\r\n              setsalary(false)\r\n            }\r\n            \r\n          }}\r\n          inputProps={{\r\n            name: 'Intershiptype',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  aria-label=\"None\" value=\"Paid\">Paid</option>\r\n          <option  aria-label=\"None\" value=\"UnPaid\">UnPaid</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Timimg</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.timing}\r\n          name=\"timing\" onChange={change}\r\n          inputProps={{\r\n            name: 'timing',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"8AM-2PM\" >8AM-2PM</option>\r\n          <option  value=\"3PM-8PM\" >3PM-8PM</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Salary</InputLabel>\r\n        <Select\r\n        disabled={salary}\r\n          native\r\n          value={data.salary}\r\n          name=\"salary\" onChange={change}\r\n          inputProps={{\r\n            name: 'salary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"10k\">10k</option>\r\n          <option  value=\"20k\">20k</option>\r\n          <option  value=\"30k\">30k</option>\r\n          <option  value=\"40k\">40k</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Gender</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.gender}\r\n          name=\"gender\" onChange={change}\r\n          inputProps={{\r\n            name: 'gender',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"No Preference\">No Preference</option>\r\n          <option  value=\"Man\">Man</option>\r\n          <option  value=\"Woman\">Woman</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={6} sm={6} xs={12}>\r\n  <TextField name=\"position\" value={data  .position} onChange={change} fullWidth label=\"Total Positions\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  <Grid item md={6} sm={6} xs={12}>\r\n  <TextField name=\"apply\" onChange={change} type=\"date\" fullWidth label=\"Apply Before\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n  \r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\nvalue={data.skills}\r\nname=\"skills\" onChange={change}\r\n  helperText=\"Note:-HTML,CSS,JS\"\r\n  type=\"text\" fullWidth label=\"Skills\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.discription}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"discription\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Discription\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n</Grid>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button type=\"submit\" style={{marginBottom:\"10px\"}} color=\"secondary\" variant=\"contained\">Update Interships</Button>\r\n</div>\r\n\r\n\r\n</form>   \r\n        \r\n\r\n\r\n      </Typography>\r\n    </Container>\r\n    <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity=\"success\">\r\n      {msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n    \r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction Coursepage() {\r\n  const url=useRouteMatch().url;\r\n\r\n  const {userdata,setuserdata}=useContext(Context)\r\n  const useStyles = makeStyles({\r\n    root: {\r\n     \r\n      boxShadow:\"0px 0px 5px -1px rgba(0,0,0,0.75)\"\r\n    },\r\n    media: {\r\n      height: 200,\r\n    },\r\n  });\r\n  const classes = useStyles();  \r\n\r\nconst [dataa, setcourese] = useState([])\r\n  // useEffect(()=>{\r\n\r\n  //   axios.get(\"/getcourse\").then((ress)=>{setcourese(ress.data)})\r\n\r\n  // },[])\r\n\r\n  useEffect(()=>{\r\n\r\n    axios.get(\"/getcourse\").then((res)=>{setcourese(res.data.filter((i)=>{\r\n      return i.accountID==userdata.id\r\n     })\r\n   )})\r\n  },[])\r\n  const ddelete=(id)=>{\r\n\r\n    axios.post(\"/deletecourse\",{id:id})\r\n   axios.get(\"/getcourse\").then((res)=>{setcourese(res.data.filter((i)=>{\r\n    return i.accountID==userdata.id\r\n   })\r\n )})\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n    <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', minHeight: '100vh' }}>\r\n<Typography variant=\"h5\" style={{paddingTop:\"15px\"}}><b>View/Delete/Edit Course</b></Typography>\r\n\r\n\r\n<br/>\r\n\r\n\r\n{dataa.length==0?\r\n          <Container maxWidth=\"sm\">\r\n          <Paper component={Box} p=\"12px\">\r\n          <Typography align=\"center\" variant=\"body2\">No Course has have Register</Typography>\r\n          </Paper>\r\n          </Container>\r\n          :\r\n          <Grid container spacing={2}>\r\n{dataa.map((i)=>\r\n\r\n<Grid item xs={12} md={4}>\r\n<Card className={classes.root}>\r\n\r\n<CardMedia\r\nclassName={classes.media}\r\nimage={i.img}\r\ntitle=\"Contemplative Reptile\"\r\n/>\r\n<CardContent>\r\n<Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n{i.coursetitle}\r\n</Typography>\r\n<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n{i.companyname}  {i.city}\r\n</Typography>\r\n<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n  {i.instractorname}\r\n</Typography>\r\n<br/>\r\n<Typography style={{fontWeight:\"bold\"}} variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n  Discription:-<br/>\r\n  \r\n</Typography>\r\n<Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n{i.discription.slice(0,200)}.....\r\n  \r\n</Typography>\r\n\r\n</CardContent>\r\n\r\n<CardActions style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n\r\n<Box fontWeight=\"bold\" fontSize=\"h5.fontSize\">{i.price}</Box>\r\n  \r\n<div>\r\n<Button to={`${url}/${i._id}`} style={{marginRight:\"10px\"}} component={LLink} variant=\"contained\" size=\"small\" color=\"primary\">\r\nLearn More\r\n</Button>\r\n\r\n<Button onClick={()=>{ddelete(i._id)}}  variant=\"outlined\" size=\"small\" color=\"primary\">\r\n Delete\r\n</Button>\r\n\r\n\r\n</div>\r\n</CardActions>\r\n</Card>\r\n\r\n</Grid>\r\n\r\n )} \r\n      </Grid>\r\n          }\r\n\r\n    </Typography>\r\n  </Container>\r\n  )\r\n}\r\n\r\nexport default Account\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Courseform() {\r\n  \r\nconst id=useParams().id;\r\n\r\n\r\n\r\n  const {userdata,setdatauser}=useContext(Context)\r\n  \r\n  const [data, setdata] = useState({\r\n    coursetitle:null,\r\ncity:\"\",\r\ncatogary:\"\",\r\nprice:\"\",\r\ntiming:\"\",\r\ninstractorname:\"\",\r\nRequirements:\"\",\r\nlearn:\"\",\r\ncontent:\"\",\r\ndiscription:\"\",\r\naccountID:userdata.id,\r\nnumber:\"\",\r\n  })\r\n  const change=(e)=>{\r\n    setdata({\r\n      ...data,\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n\r\n\r\n\r\n  const [msg, setmsg] = useState(\"\")\r\nconst [open, setopen] = useState(false)\r\nconst [selectimg, setselectimg] = useState({})\r\n\r\n\r\nconst img=(e)=>{\r\nsetselectimg(e.target.files[0])\r\n  //console.log(e.target.files[0])\r\n}\r\nconst handleClose = () => {\r\n  setopen(false)\r\n};\r\n\r\n\r\n  const submit= async(e)=>{\r\ne.preventDefault();\r\nconst formData=new FormData();\r\nformData.append(\"coursetitle\",data.coursetitle)\r\nformData.append(\"city\",data.city)\r\nformData.append(\"catogary\",data.catogary)\r\nformData.append(\"price\",data.price)\r\nformData.append(\"timing\",data.timing)\r\nformData.append(\"instractorname\",data.instractorname)\r\nformData.append(\"Requirements\",data.Requirements)\r\nformData.append(\"learn\",data.learn)\r\nformData.append(\"content\",data.content)\r\nformData.append(\"discription\",data.discription)\r\nformData.append(\"accountID\",userdata.id)\r\nformData.append(\"companyname\",userdata.companyname)\r\nformData.append(\"selectimg\",selectimg)\r\nformData.append(\"number\",userdata.number)\r\nformData.append(\"productID\",id)\r\n\r\n\r\n await axios.post(\"/updatecourse\",formData).then((res)=>{setmsg(res.data);setopen(true)})\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n  \r\n    axios.get(\"/getcourse\").then((res)=>{\r\n     const arry= res.data.find((i)=>{\r\n            return i._id==id\r\n      })\r\n\r\n      console.log(arry.instractorname)\r\n      console.log(arry)\r\n    setdata({\r\n      coursetitle:arry.coursetitle,\r\n      city:arry.city,\r\n      catogary:arry.catogary,\r\n      price:arry.price,\r\n      timing:arry.timing,\r\n      instractorname:arry.instractorname,\r\n      Requirements:arry.Requirements,\r\n      learn:arry.learn,\r\n      content:arry.content,\r\n      discription:arry.discription,\r\n      accountID:userdata.id,\r\n      number:arry.number,\r\n    })\r\n    })\r\n  },[])\r\n  \r\n  return (\r\n    <React.Fragment>\r\n    <CssBaseline />\r\n    <Container maxWidth=\"md\">\r\n      <Typography component=\"div\" style={{minHeight: 'calc(100vh - 64px)'}}>\r\n\r\n      <Typography variant=\"h4\" style={{padding:\"20px\",fontWeight:\"bold\",textDecorationColor:\"#011842\",color:\"#011842\",textDecoration:\"underline\"}}>ADD COURSE</Typography>\r\n\r\n      <form onSubmit={submit}>\r\n<Grid container spacing={2}>\r\n\r\n  <Grid item md={8} sm={8} xs={12}>\r\n  <TextField value={data.coursetitle} name=\"coursetitle\" onChange={change} fullWidth label=\"Course Title\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  \r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField value={userdata.companyname} disabled name=\"companyname\" fullWidth label=\"CompanyName\" required variant=\"outlined\"/>\r\n  </Grid>\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField onChange={change} value={data.instractorname}  name=\"instractorname\" fullWidth label=\"Instractor Name\" required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <TextField onChange={change} value={data.price}  name=\"price\" fullWidth label=\"Price\" required variant=\"outlined\" helperText=\" Example:-10000 PKR\"/>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Select City</InputLabel>\r\n        <Select\r\n        value={data.city}\r\n          native\r\n          name=\"city\" onChange={change}\r\n          inputProps={{\r\n            name: 'city',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value=\"Peshawar\">Peshawar</option>\r\n          <option value=\"lahore\">lahore</option>\r\n          <option value=\"Karachi\">Karachi</option>\r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Catogary</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.catogary}\r\n          name=\"catogary\" onChange={change}\r\n          inputProps={{\r\n            name: 'catogary',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"Web Developer\">Web Developer</option>\r\n          <option  value=\"mobile Developer\">mobile Developer</option>\r\n          <option  value=\"Desktop Developer\">Desktop Developer</option>\r\n          <option  value=\"SEO\">SEO</option>\r\n          <option  value=\"Graphic Desiger\">Graphic Desiger</option>\r\n          <option  value=\"Content Writer\">Content Writer</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n  <FormControl required fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Timimg</InputLabel>\r\n        <Select\r\n          native\r\n          value={data.timing}\r\n          name=\"timing\" onChange={change}\r\n          inputProps={{\r\n            name: 'timing',\r\n            id: 'outlined-age-native-simple',\r\n          }}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option  value=\"10AM-11AM\" >10AM-11AM</option>\r\n          <option  value=\"3PM-4PM\" >3PM-4PM</option>\r\n          \r\n        </Select>\r\n      </FormControl>\r\n  </Grid>\r\n\r\n  <Grid item md={4} sm={4} xs={12}>\r\n    <TextField  value={data.number}\r\n          name=\"number\" onChange={change} fullWidth variant=\"outlined\" helperText=\"Example:- +923217836328\" label=\"WhatsApp Number\" required type=\"number\"/>\r\n  </Grid>\r\n  \r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.discription}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"discription\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Discription\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.learn}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"learn\" onChange={change}\r\n  type=\"text\" fullWidth label=\" What you'll learn\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.content}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"content\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Course Content\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n  \r\n\r\n\r\n  <Grid item md={12} sm={12} xs={12}>\r\n  <TextField\r\n  multiline\r\n  value={data.Requirements}\r\n  margin=\"normal\"\r\n  required\r\n  rows={6}\r\n  \r\n  name=\"Requirements\" onChange={change}\r\n  type=\"text\" fullWidth label=\"Requirements\"\r\n   InputLabelProps={{\r\n    shrink: true,\r\n  }}\r\n  required variant=\"outlined\"/>\r\n  </Grid>\r\n\r\n</Grid>\r\n<div style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n<input accept=\"image/*\" type=\"file\" onChange={img}/>\r\n<Button type=\"submit\" style={{marginBottom:\"10px\"}} color=\"secondary\" variant=\"contained\">Update Course</Button>\r\n</div>\r\n\r\n\r\n</form>   \r\n        \r\n\r\n\r\n      </Typography>\r\n    </Container>\r\n    <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n  <MuiAlert elevation={6} variant=\"filled\" onClose={handleClose} severity=\"success\">\r\n      {msg}\r\n    </MuiAlert>\r\n    </Snackbar>\r\n    \r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\MERN stack\\sh1\\client\\src\\components\\IntershipsCards.js",[],"D:\\MERN stack\\sh1\\client\\src\\components\\about.js",[],"D:\\MERN stack\\sh1\\client\\src\\components\\Mobiledown.js",[],"D:\\MERN stack\\sh1\\client\\src\\components\\Segisstion.js",["201","202"],"import React from 'react'\r\nimport {Grid,Paper, Typography,Button,} from \"@material-ui/core\"\r\nimport {Link,useParams} from \"react-router-dom\"\r\nfunction Segisstion(props) {\r\n\r\n // console.log(props.path2)\r\n\r\n    function shuffle(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n      \r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n      \r\n          // Pick a remaining element...\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n      \r\n          // And swap it with the current element.\r\n          temporaryValue = array[currentIndex];\r\n          array[currentIndex] = array[randomIndex];\r\n          array[randomIndex] = temporaryValue;\r\n        }\r\n      \r\n        return array; \r\n      }\r\n      \r\n      // Used like so\r\n      var arr = [2, 11, 37, 42];\r\n      shuffle(props.arrry);\r\n\r\n\r\n\r\n      \r\n        const  ary=props.arrry\r\n\r\n const aynew= ary.filter((i,v)=>{\r\n        return v<=2\r\n   })\r\n    \r\n    //console.log(props.path2)\r\n    //console.log(useParams())\r\n    \r\n    return (\r\n        <>\r\n\r\n<Grid container spacing={2} >\r\n\r\n{aynew.map((i)=>\r\n\r\n\r\n<Grid item xs={12}  >\r\n<Paper  style={{height:\"auto\",padding:\"10px\",boxSizing:\"border-box\"}}>\r\n<Typography style={{fontSize:\"15px\"}}><b>{i.jobtitle}</b></Typography>\r\n<Typography variant=\"body2\" color=\"textSecondary\">{i.companyname}</Typography><br/>\r\n<Typography variant=\"body2\" color=\"textSecondary\"><b>Skills:-</b>{i.skills }</Typography>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button  \r\n component={Link} to={`/jobs/all/${i._id}`}\r\n textAlign=\"center\" mt=\"10px\" variant=\"contained\" color=\"secondary\" size=\"small\">See More</Button>\r\n</div>\r\n</Paper>\r\n</Grid>\r\n\r\n\r\n\r\n)}\r\n\r\n\r\n</Grid>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Segisstion\r\n","D:\\MERN stack\\sh1\\client\\src\\components\\Segueestion2.js",["203","204"],"import React from 'react'\r\nimport {Grid,Paper, Typography,Button,Box} from \"@material-ui/core\"\r\nimport {Link} from \"react-router-dom\"\r\nfunction Segisstion2(props) {\r\n\r\n  \r\n//console.log(props.path)\r\n    function shuffle(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n      \r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n      \r\n          // Pick a remaining element...\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n      \r\n          // And swap it with the current element.\r\n          temporaryValue = array[currentIndex];\r\n          array[currentIndex] = array[randomIndex];\r\n          array[randomIndex] = temporaryValue;\r\n        }\r\n      \r\n        return array; \r\n      }\r\n      \r\n      // Used like so\r\n      var arr = [2, 11, 37, 42];\r\n      shuffle(props.arrry);\r\n\r\n\r\n\r\n      \r\n        const  ary=props.arrry\r\n\r\n const aynew= ary.filter((i,v)=>{\r\n        return v<=2\r\n   })\r\n    \r\n    console.log(aynew)\r\n    \r\n    return (\r\n        <>\r\n\r\n<Grid container spacing={2} >\r\n\r\n{aynew.map((i)=>\r\n\r\n\r\n<Grid item xs={12}  >\r\n<Paper  style={{height:\"auto\",\r\npadding:\"10px\",boxSizing:\"border-box\"}}>\r\n<Typography style={{fontSize:\"15px\"}}><b>{i.intershiptitle}</b></Typography>\r\n<Typography variant=\"body2\" color=\"textSecondary\">{i.companyname}</Typography><br/>\r\n<Typography variant=\"body2\" color=\"textSecondary\"><b>Skills:-</b>{i.skills }</Typography>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button to={`/interships/all/${i._id}`} textAlign=\"center\" component={Link} mt=\"10px\" variant=\"contained\" color=\"secondary\" size=\"small\">See More</Button>\r\n</div>\r\n</Paper>\r\n</Grid>\r\n\r\n\r\n\r\n)}\r\n\r\n\r\n</Grid>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Segisstion2\r\n","D:\\MERN stack\\sh1\\client\\src\\components\\Segisstion3.js",["205"],"import React from 'react'\r\nimport {Grid,Paper, Typography,Button} from \"@material-ui/core\"\r\nimport {Link} from \"react-router-dom\"\r\nfunction Segisstion3(props) {\r\n\r\n  \r\nconsole.log(props.path)\r\n    function shuffle(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n      \r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n      \r\n          // Pick a remaining element...\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n      \r\n          // And swap it with the current element.\r\n          temporaryValue = array[currentIndex];\r\n          array[currentIndex] = array[randomIndex];\r\n          array[randomIndex] = temporaryValue;\r\n        }\r\n      \r\n        return array; \r\n      }\r\n      \r\n      // Used like so\r\n      var arr = [2, 11, 37, 42];\r\n      shuffle(props.arrry);\r\n\r\n\r\n\r\n      \r\n        const  ary=props.arrry\r\n\r\n const aynew= ary.filter((i,v)=>{\r\n        return v<=2\r\n   })\r\n    \r\n    console.log(aynew)\r\n    \r\n    return (\r\n        <>\r\n\r\n<Grid container spacing={2} >\r\n\r\n{aynew.map((i)=>\r\n\r\n\r\n<Grid item xs={12}  >\r\n<Paper  style={{height:\"auto\",padding:\"10px\",boxSizing:\"border-box\"}}>\r\n    \r\n<Typography style={{fontSize:\"15px\"}}><b>{i.coursetitle}</b></Typography>\r\n<Typography variant=\"body2\" color=\"textSecondary\">{i.companyname}</Typography>\r\n<Typography variant=\"body2\" color=\"textSecondary\">{i.content.split(0,100) }</Typography><br/>\r\n\r\n<Typography variant=\"body2\" color=\"textSecondary\"><b>Price:-{i.price}</b></Typography><br/>\r\n<div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n<Button \r\nto={`/courses/all/${i._id}`} \r\ntextAlign=\"center\" component={Link} mt=\"4px\" variant=\"contained\" color=\"secondary\" size=\"small\">See More</Button>\r\n</div>\r\n</Paper>\r\n</Grid>\r\n\r\n\r\n\r\n)}\r\n\r\n\r\n</Grid>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Segisstion3","D:\\MERN stack\\sh1\\client\\src\\components\\Customhook.js",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":13,"column":35,"nodeType":"212","messageId":"213","endLine":13,"endColumn":41},{"ruleId":"210","severity":1,"message":"214","line":13,"column":50,"nodeType":"212","messageId":"213","endLine":13,"endColumn":54},{"ruleId":"215","severity":1,"message":"216","line":231,"column":25,"nodeType":"217","messageId":"218","endLine":231,"endColumn":27},{"ruleId":"219","severity":1,"message":"220","line":256,"column":30,"nodeType":"221","messageId":"222","endLine":256,"endColumn":31},{"ruleId":"223","severity":1,"message":"224","line":416,"column":38,"nodeType":"225","endLine":416,"endColumn":72},{"ruleId":"210","severity":1,"message":"226","line":11,"column":46,"nodeType":"212","messageId":"213","endLine":11,"endColumn":63},{"ruleId":"227","severity":1,"message":"228","line":47,"column":13,"nodeType":"229","endLine":64,"endColumn":4},{"ruleId":"215","severity":1,"message":"216","line":49,"column":17,"nodeType":"217","messageId":"218","endLine":49,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":86,"column":13,"nodeType":"217","messageId":"218","endLine":86,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":86,"column":37,"nodeType":"217","messageId":"218","endLine":86,"endColumn":39},{"ruleId":"215","severity":1,"message":"216","line":86,"column":63,"nodeType":"217","messageId":"218","endLine":86,"endColumn":65},{"ruleId":"215","severity":1,"message":"216","line":253,"column":19,"nodeType":"217","messageId":"218","endLine":253,"endColumn":21},{"ruleId":"215","severity":1,"message":"216","line":263,"column":21,"nodeType":"217","messageId":"218","endLine":263,"endColumn":23},{"ruleId":"227","severity":1,"message":"230","line":268,"column":3,"nodeType":"231","endLine":268,"endColumn":5,"suggestions":"232"},{"ruleId":"215","severity":1,"message":"216","line":295,"column":26,"nodeType":"217","messageId":"218","endLine":295,"endColumn":28},{"ruleId":"210","severity":1,"message":"226","line":10,"column":46,"nodeType":"212","messageId":"213","endLine":10,"endColumn":63},{"ruleId":"227","severity":1,"message":"228","line":29,"column":13,"nodeType":"229","endLine":42,"endColumn":4},{"ruleId":"215","severity":1,"message":"216","line":31,"column":17,"nodeType":"217","messageId":"218","endLine":31,"endColumn":19},{"ruleId":"210","severity":1,"message":"233","line":46,"column":9,"nodeType":"212","messageId":"213","endLine":46,"endColumn":12},{"ruleId":"215","severity":1,"message":"216","line":71,"column":13,"nodeType":"217","messageId":"218","endLine":71,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":71,"column":44,"nodeType":"217","messageId":"218","endLine":71,"endColumn":46},{"ruleId":"215","severity":1,"message":"216","line":71,"column":70,"nodeType":"217","messageId":"218","endLine":71,"endColumn":72},{"ruleId":"215","severity":1,"message":"216","line":245,"column":17,"nodeType":"217","messageId":"218","endLine":245,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":255,"column":23,"nodeType":"217","messageId":"218","endLine":255,"endColumn":25},{"ruleId":"227","severity":1,"message":"230","line":260,"column":5,"nodeType":"231","endLine":260,"endColumn":7,"suggestions":"234"},{"ruleId":"210","severity":1,"message":"235","line":274,"column":9,"nodeType":"212","messageId":"213","endLine":274,"endColumn":13},{"ruleId":"215","severity":1,"message":"216","line":292,"column":26,"nodeType":"217","messageId":"218","endLine":292,"endColumn":28},{"ruleId":"215","severity":1,"message":"216","line":351,"column":23,"nodeType":"217","messageId":"218","endLine":351,"endColumn":25},{"ruleId":"215","severity":1,"message":"216","line":109,"column":18,"nodeType":"217","messageId":"218","endLine":109,"endColumn":20},{"ruleId":"210","severity":1,"message":"236","line":99,"column":19,"nodeType":"212","messageId":"213","endLine":99,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":100,"column":20,"nodeType":"217","messageId":"218","endLine":100,"endColumn":22},{"ruleId":"227","severity":1,"message":"228","line":27,"column":15,"nodeType":"229","endLine":39,"endColumn":6},{"ruleId":"215","severity":1,"message":"216","line":30,"column":19,"nodeType":"217","messageId":"218","endLine":30,"endColumn":21},{"ruleId":"215","severity":1,"message":"216","line":64,"column":15,"nodeType":"217","messageId":"218","endLine":64,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":64,"column":39,"nodeType":"217","messageId":"218","endLine":64,"endColumn":41},{"ruleId":"215","severity":1,"message":"216","line":200,"column":19,"nodeType":"217","messageId":"218","endLine":200,"endColumn":21},{"ruleId":"215","severity":1,"message":"216","line":210,"column":25,"nodeType":"217","messageId":"218","endLine":210,"endColumn":27},{"ruleId":"227","severity":1,"message":"230","line":215,"column":7,"nodeType":"231","endLine":215,"endColumn":9,"suggestions":"237"},{"ruleId":"227","severity":1,"message":"228","line":226,"column":17,"nodeType":"229","endLine":230,"endColumn":8},{"ruleId":"227","severity":1,"message":"238","line":230,"column":9,"nodeType":"231","endLine":230,"endColumn":11,"suggestions":"239"},{"ruleId":"215","severity":1,"message":"216","line":77,"column":24,"nodeType":"217","messageId":"218","endLine":77,"endColumn":26},{"ruleId":"240","severity":1,"message":"241","line":116,"column":10,"nodeType":"231","messageId":"242","endLine":153,"endColumn":8},{"ruleId":"210","severity":1,"message":"243","line":1,"column":24,"nodeType":"212","messageId":"213","endLine":1,"endColumn":37},{"ruleId":"210","severity":1,"message":"244","line":2,"column":26,"nodeType":"212","messageId":"213","endLine":2,"endColumn":29},{"ruleId":"210","severity":1,"message":"245","line":3,"column":8,"nodeType":"212","messageId":"213","endLine":3,"endColumn":12},{"ruleId":"210","severity":1,"message":"246","line":13,"column":7,"nodeType":"212","messageId":"213","endLine":13,"endColumn":9},{"ruleId":"206","replacedBy":"247"},{"ruleId":"208","replacedBy":"248"},{"ruleId":"210","severity":1,"message":"244","line":2,"column":27,"nodeType":"212","messageId":"213","endLine":2,"endColumn":30},{"ruleId":"210","severity":1,"message":"236","line":15,"column":21,"nodeType":"212","messageId":"213","endLine":15,"endColumn":32},{"ruleId":"215","severity":1,"message":"216","line":17,"column":18,"nodeType":"217","messageId":"218","endLine":17,"endColumn":20},{"ruleId":"210","severity":1,"message":"236","line":190,"column":21,"nodeType":"212","messageId":"213","endLine":190,"endColumn":32},{"ruleId":"210","severity":1,"message":"249","line":205,"column":11,"nodeType":"212","messageId":"213","endLine":205,"endColumn":14},{"ruleId":"210","severity":1,"message":"250","line":278,"column":19,"nodeType":"212","messageId":"213","endLine":278,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":399,"column":5,"nodeType":"217","messageId":"218","endLine":399,"endColumn":7},{"ruleId":"251","severity":1,"message":"252","line":492,"column":37,"nodeType":"253","messageId":"254","endLine":492,"endColumn":52,"fix":"255"},{"ruleId":"256","severity":1,"message":"257","line":528,"column":3,"nodeType":"258","endLine":528,"endColumn":11},{"ruleId":"210","severity":1,"message":"250","line":558,"column":19,"nodeType":"212","messageId":"213","endLine":558,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":676,"column":30,"nodeType":"217","messageId":"218","endLine":676,"endColumn":32},{"ruleId":"251","severity":1,"message":"252","line":759,"column":37,"nodeType":"253","messageId":"254","endLine":759,"endColumn":52,"fix":"259"},{"ruleId":"256","severity":1,"message":"257","line":795,"column":3,"nodeType":"258","endLine":795,"endColumn":11},{"ruleId":"210","severity":1,"message":"250","line":829,"column":19,"nodeType":"212","messageId":"213","endLine":829,"endColumn":30},{"ruleId":"256","severity":1,"message":"257","line":1005,"column":3,"nodeType":"258","endLine":1005,"endColumn":11},{"ruleId":"256","severity":1,"message":"257","line":1021,"column":3,"nodeType":"258","endLine":1021,"endColumn":11},{"ruleId":"256","severity":1,"message":"257","line":1039,"column":3,"nodeType":"258","endLine":1039,"endColumn":11},{"ruleId":"256","severity":1,"message":"257","line":1058,"column":3,"nodeType":"258","endLine":1058,"endColumn":11},{"ruleId":"215","severity":1,"message":"216","line":1092,"column":25,"nodeType":"217","messageId":"218","endLine":1092,"endColumn":27},{"ruleId":"227","severity":1,"message":"260","line":1095,"column":5,"nodeType":"231","endLine":1095,"endColumn":7,"suggestions":"261"},{"ruleId":"210","severity":1,"message":"236","line":1096,"column":19,"nodeType":"212","messageId":"213","endLine":1096,"endColumn":30},{"ruleId":"210","severity":1,"message":"235","line":1105,"column":9,"nodeType":"212","messageId":"213","endLine":1105,"endColumn":13},{"ruleId":"215","severity":1,"message":"216","line":1112,"column":21,"nodeType":"217","messageId":"218","endLine":1112,"endColumn":23},{"ruleId":"215","severity":1,"message":"216","line":1123,"column":23,"nodeType":"217","messageId":"218","endLine":1123,"endColumn":25},{"ruleId":"210","severity":1,"message":"250","line":1185,"column":19,"nodeType":"212","messageId":"213","endLine":1185,"endColumn":30},{"ruleId":"227","severity":1,"message":"228","line":1190,"column":14,"nodeType":"229","endLine":1213,"endColumn":4},{"ruleId":"227","severity":1,"message":"262","line":1213,"column":5,"nodeType":"231","endLine":1213,"endColumn":7,"suggestions":"263"},{"ruleId":"215","severity":1,"message":"216","line":1340,"column":5,"nodeType":"217","messageId":"218","endLine":1340,"endColumn":7},{"ruleId":"251","severity":1,"message":"252","line":1433,"column":37,"nodeType":"253","messageId":"254","endLine":1433,"endColumn":52,"fix":"264"},{"ruleId":"256","severity":1,"message":"257","line":1469,"column":3,"nodeType":"258","endLine":1469,"endColumn":11},{"ruleId":"210","severity":1,"message":"236","line":1496,"column":17,"nodeType":"212","messageId":"213","endLine":1496,"endColumn":28},{"ruleId":"215","severity":1,"message":"216","line":1502,"column":25,"nodeType":"217","messageId":"218","endLine":1502,"endColumn":27},{"ruleId":"227","severity":1,"message":"260","line":1505,"column":5,"nodeType":"231","endLine":1505,"endColumn":7,"suggestions":"265"},{"ruleId":"215","severity":1,"message":"216","line":1513,"column":23,"nodeType":"217","messageId":"218","endLine":1513,"endColumn":25},{"ruleId":"215","severity":1,"message":"216","line":1527,"column":28,"nodeType":"217","messageId":"218","endLine":1527,"endColumn":30},{"ruleId":"210","severity":1,"message":"250","line":1588,"column":19,"nodeType":"212","messageId":"213","endLine":1588,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":1618,"column":21,"nodeType":"217","messageId":"218","endLine":1618,"endColumn":23},{"ruleId":"227","severity":1,"message":"262","line":1641,"column":5,"nodeType":"231","endLine":1641,"endColumn":7,"suggestions":"266"},{"ruleId":"215","severity":1,"message":"216","line":1736,"column":30,"nodeType":"217","messageId":"218","endLine":1736,"endColumn":32},{"ruleId":"251","severity":1,"message":"252","line":1819,"column":37,"nodeType":"253","messageId":"254","endLine":1819,"endColumn":52,"fix":"267"},{"ruleId":"256","severity":1,"message":"257","line":1855,"column":3,"nodeType":"258","endLine":1855,"endColumn":11},{"ruleId":"210","severity":1,"message":"236","line":1885,"column":19,"nodeType":"212","messageId":"213","endLine":1885,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":1907,"column":25,"nodeType":"217","messageId":"218","endLine":1907,"endColumn":27},{"ruleId":"227","severity":1,"message":"260","line":1910,"column":5,"nodeType":"231","endLine":1910,"endColumn":7,"suggestions":"268"},{"ruleId":"215","severity":1,"message":"216","line":1915,"column":23,"nodeType":"217","messageId":"218","endLine":1915,"endColumn":25},{"ruleId":"215","severity":1,"message":"216","line":1931,"column":14,"nodeType":"217","messageId":"218","endLine":1931,"endColumn":16},{"ruleId":"210","severity":1,"message":"250","line":2013,"column":19,"nodeType":"212","messageId":"213","endLine":2013,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":2080,"column":25,"nodeType":"217","messageId":"218","endLine":2080,"endColumn":27},{"ruleId":"227","severity":1,"message":"269","line":2100,"column":5,"nodeType":"231","endLine":2100,"endColumn":7,"suggestions":"270"},{"ruleId":"256","severity":1,"message":"257","line":2214,"column":3,"nodeType":"258","endLine":2214,"endColumn":11},{"ruleId":"256","severity":1,"message":"257","line":2230,"column":3,"nodeType":"258","endLine":2230,"endColumn":11},{"ruleId":"256","severity":1,"message":"257","line":2248,"column":3,"nodeType":"258","endLine":2248,"endColumn":11},{"ruleId":"256","severity":1,"message":"257","line":2267,"column":3,"nodeType":"258","endLine":2267,"endColumn":11},{"ruleId":"210","severity":1,"message":"271","line":3,"column":14,"nodeType":"212","messageId":"213","endLine":3,"endColumn":23},{"ruleId":"210","severity":1,"message":"272","line":28,"column":11,"nodeType":"212","messageId":"213","endLine":28,"endColumn":14},{"ruleId":"210","severity":1,"message":"244","line":2,"column":39,"nodeType":"212","messageId":"213","endLine":2,"endColumn":42},{"ruleId":"210","severity":1,"message":"272","line":28,"column":11,"nodeType":"212","messageId":"213","endLine":28,"endColumn":14},{"ruleId":"210","severity":1,"message":"272","line":28,"column":11,"nodeType":"212","messageId":"213","endLine":28,"endColumn":14},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DialogContentText' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'jobdata.catogary'. Either include it or remove the dependency array.","ArrayExpression",["275"],"'url' is assigned a value but never used.",["276"],"'path' is assigned a value but never used.","'setuserdata' is assigned a value but never used.",["277"],"React Hook useEffect has a missing dependency: 'jobdata.companyname'. Either include it or remove the dependency array.",["278"],"no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'createContext' is defined but never used.","'Box' is defined but never used.","'Jobs' is defined but never used.","'aa' is assigned a value but never used.",["273"],["274"],"'msg' is assigned a value but never used.","'setdatauser' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property position.","MemberExpression","unexpectedWhitespace",{"range":"279","text":"280"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",{"range":"281","text":"280"},"React Hook useEffect has a missing dependency: 'userdata.id'. Either include it or remove the dependency array.",["282"],"React Hook useEffect has missing dependencies: 'id', 'userdata.companyname', 'userdata.id', and 'userdata.img'. Either include them or remove the dependency array.",["283"],{"range":"284","text":"280"},["285"],["286"],{"range":"287","text":"280"},["288"],"React Hook useEffect has missing dependencies: 'id' and 'userdata.id'. Either include them or remove the dependency array.",["289"],"'useParams' is defined but never used.","'arr' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"290","fix":"292"},{"desc":"290","fix":"293"},{"desc":"294","fix":"295"},[15358,15361],".",[22956,22959],{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},[41757,41760],{"desc":"296","fix":"300"},{"desc":"298","fix":"301"},[52772,52775],{"desc":"296","fix":"302"},{"desc":"303","fix":"304"},"Update the dependencies array to be: [jobdata.catogary]",{"range":"305","text":"306"},{"range":"307","text":"306"},{"range":"308","text":"306"},"Update the dependencies array to be: [jobdata.companyname]",{"range":"309","text":"310"},"Update the dependencies array to be: [userdata.id]",{"range":"311","text":"312"},"Update the dependencies array to be: [id, userdata.companyname, userdata.id, userdata.img]",{"range":"313","text":"314"},{"range":"315","text":"312"},{"range":"316","text":"314"},{"range":"317","text":"312"},"Update the dependencies array to be: [id, userdata.id]",{"range":"318","text":"319"},[5340,5342],"[jobdata.catogary]",[5387,5389],[4503,4505],[4836,4838],"[jobdata.companyname]",[31638,31640],"[userdata.id]",[35036,35038],"[id, userdata.companyname, userdata.id, userdata.img]",[43490,43492],[47077,47079],[54829,54831],[59106,59108],"[id, userdata.id]"]